

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 16 21:22:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 17/01/2025 GMT
    54                           ; 
    55                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4520 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000FE0                     bsr             equ	4064
    88   000FE9                     fsr0            equ	4073
    89   000FEA                     fsr0h           equ	4074
    90   000FE9                     fsr0l           equ	4073
    91   000FE1                     fsr1            equ	4065
    92   000FE2                     fsr1h           equ	4066
    93   000FE1                     fsr1l           equ	4065
    94   000FD9                     fsr2            equ	4057
    95   000FDA                     fsr2h           equ	4058
    96   000FD9                     fsr2l           equ	4057
    97   000FEF                     indf0           equ	4079
    98   000FE7                     indf1           equ	4071
    99   000FDF                     indf2           equ	4063
   100   000FF2                     intcon          equ	4082
   101   000000                     nvmcon          equ	0
   102   000FF9                     pcl             equ	4089
   103   000FFA                     pclath          equ	4090
   104   000FFB                     pclatu          equ	4091
   105   000FEB                     plusw0          equ	4075
   106   000FE3                     plusw1          equ	4067
   107   000FDB                     plusw2          equ	4059
   108   000FED                     postdec0        equ	4077
   109   000FE5                     postdec1        equ	4069
   110   000FDD                     postdec2        equ	4061
   111   000FEE                     postinc0        equ	4078
   112   000FE6                     postinc1        equ	4070
   113   000FDE                     postinc2        equ	4062
   114   000FEC                     preinc0         equ	4076
   115   000FE4                     preinc1         equ	4068
   116   000FDC                     preinc2         equ	4060
   117   000FF3                     prod            equ	4083
   118   000FF4                     prodh           equ	4084
   119   000FF3                     prodl           equ	4083
   120   000FD8                     status          equ	4056
   121   000FF5                     tablat          equ	4085
   122   000FF6                     tblptr          equ	4086
   123   000FF7                     tblptrh         equ	4087
   124   000FF6                     tblptrl         equ	4086
   125   000FF8                     tblptru         equ	4088
   126   000FFD                     tosl            equ	4093
   127   000FE8                     wreg            equ	4072
   128   000F80                     PORTA           equ	3968	;# 
   129   000F81                     PORTB           equ	3969	;# 
   130   000F82                     PORTC           equ	3970	;# 
   131   000F83                     PORTD           equ	3971	;# 
   132   000F84                     PORTE           equ	3972	;# 
   133   000F89                     LATA            equ	3977	;# 
   134   000F8A                     LATB            equ	3978	;# 
   135   000F8B                     LATC            equ	3979	;# 
   136   000F8C                     LATD            equ	3980	;# 
   137   000F8D                     LATE            equ	3981	;# 
   138   000F92                     TRISA           equ	3986	;# 
   139   000F92                     DDRA            equ	3986	;# 
   140   000F93                     TRISB           equ	3987	;# 
   141   000F93                     DDRB            equ	3987	;# 
   142   000F94                     TRISC           equ	3988	;# 
   143   000F94                     DDRC            equ	3988	;# 
   144   000F95                     TRISD           equ	3989	;# 
   145   000F95                     DDRD            equ	3989	;# 
   146   000F96                     TRISE           equ	3990	;# 
   147   000F96                     DDRE            equ	3990	;# 
   148   000F9B                     OSCTUNE         equ	3995	;# 
   149   000F9D                     PIE1            equ	3997	;# 
   150   000F9E                     PIR1            equ	3998	;# 
   151   000F9F                     IPR1            equ	3999	;# 
   152   000FA0                     PIE2            equ	4000	;# 
   153   000FA1                     PIR2            equ	4001	;# 
   154   000FA2                     IPR2            equ	4002	;# 
   155   000FA6                     EECON1          equ	4006	;# 
   156   000FA7                     EECON2          equ	4007	;# 
   157   000FA8                     EEDATA          equ	4008	;# 
   158   000FA9                     EEADR           equ	4009	;# 
   159   000FAB                     RCSTA           equ	4011	;# 
   160   000FAB                     RCSTA1          equ	4011	;# 
   161   000FAC                     TXSTA           equ	4012	;# 
   162   000FAC                     TXSTA1          equ	4012	;# 
   163   000FAD                     TXREG           equ	4013	;# 
   164   000FAD                     TXREG1          equ	4013	;# 
   165   000FAE                     RCREG           equ	4014	;# 
   166   000FAE                     RCREG1          equ	4014	;# 
   167   000FAF                     SPBRG           equ	4015	;# 
   168   000FAF                     SPBRG1          equ	4015	;# 
   169   000FB0                     SPBRGH          equ	4016	;# 
   170   000FB1                     T3CON           equ	4017	;# 
   171   000FB2                     TMR3            equ	4018	;# 
   172   000FB2                     TMR3L           equ	4018	;# 
   173   000FB3                     TMR3H           equ	4019	;# 
   174   000FB4                     CMCON           equ	4020	;# 
   175   000FB5                     CVRCON          equ	4021	;# 
   176   000FB6                     ECCP1AS         equ	4022	;# 
   177   000FB6                     ECCPAS          equ	4022	;# 
   178   000FB7                     PWM1CON         equ	4023	;# 
   179   000FB7                     ECCP1DEL        equ	4023	;# 
   180   000FB8                     BAUDCON         equ	4024	;# 
   181   000FB8                     BAUDCTL         equ	4024	;# 
   182   000FBA                     CCP2CON         equ	4026	;# 
   183   000FBB                     CCPR2           equ	4027	;# 
   184   000FBB                     CCPR2L          equ	4027	;# 
   185   000FBC                     CCPR2H          equ	4028	;# 
   186   000FBD                     CCP1CON         equ	4029	;# 
   187   000FBE                     CCPR1           equ	4030	;# 
   188   000FBE                     CCPR1L          equ	4030	;# 
   189   000FBF                     CCPR1H          equ	4031	;# 
   190   000FC0                     ADCON2          equ	4032	;# 
   191   000FC1                     ADCON1          equ	4033	;# 
   192   000FC2                     ADCON0          equ	4034	;# 
   193   000FC3                     ADRES           equ	4035	;# 
   194   000FC3                     ADRESL          equ	4035	;# 
   195   000FC4                     ADRESH          equ	4036	;# 
   196   000FC5                     SSPCON2         equ	4037	;# 
   197   000FC6                     SSPCON1         equ	4038	;# 
   198   000FC7                     SSPSTAT         equ	4039	;# 
   199   000FC8                     SSPADD          equ	4040	;# 
   200   000FC9                     SSPBUF          equ	4041	;# 
   201   000FCA                     T2CON           equ	4042	;# 
   202   000FCB                     PR2             equ	4043	;# 
   203   000FCB                     MEMCON          equ	4043	;# 
   204   000FCC                     TMR2            equ	4044	;# 
   205   000FCD                     T1CON           equ	4045	;# 
   206   000FCE                     TMR1            equ	4046	;# 
   207   000FCE                     TMR1L           equ	4046	;# 
   208   000FCF                     TMR1H           equ	4047	;# 
   209   000FD0                     RCON            equ	4048	;# 
   210   000FD1                     WDTCON          equ	4049	;# 
   211   000FD2                     HLVDCON         equ	4050	;# 
   212   000FD2                     LVDCON          equ	4050	;# 
   213   000FD3                     OSCCON          equ	4051	;# 
   214   000FD5                     T0CON           equ	4053	;# 
   215   000FD6                     TMR0            equ	4054	;# 
   216   000FD6                     TMR0L           equ	4054	;# 
   217   000FD7                     TMR0H           equ	4055	;# 
   218   000FD8                     STATUS          equ	4056	;# 
   219   000FD9                     FSR2            equ	4057	;# 
   220   000FD9                     FSR2L           equ	4057	;# 
   221   000FDA                     FSR2H           equ	4058	;# 
   222   000FDB                     PLUSW2          equ	4059	;# 
   223   000FDC                     PREINC2         equ	4060	;# 
   224   000FDD                     POSTDEC2        equ	4061	;# 
   225   000FDE                     POSTINC2        equ	4062	;# 
   226   000FDF                     INDF2           equ	4063	;# 
   227   000FE0                     BSR             equ	4064	;# 
   228   000FE1                     FSR1            equ	4065	;# 
   229   000FE1                     FSR1L           equ	4065	;# 
   230   000FE2                     FSR1H           equ	4066	;# 
   231   000FE3                     PLUSW1          equ	4067	;# 
   232   000FE4                     PREINC1         equ	4068	;# 
   233   000FE5                     POSTDEC1        equ	4069	;# 
   234   000FE6                     POSTINC1        equ	4070	;# 
   235   000FE7                     INDF1           equ	4071	;# 
   236   000FE8                     WREG            equ	4072	;# 
   237   000FE9                     FSR0            equ	4073	;# 
   238   000FE9                     FSR0L           equ	4073	;# 
   239   000FEA                     FSR0H           equ	4074	;# 
   240   000FEB                     PLUSW0          equ	4075	;# 
   241   000FEC                     PREINC0         equ	4076	;# 
   242   000FED                     POSTDEC0        equ	4077	;# 
   243   000FEE                     POSTINC0        equ	4078	;# 
   244   000FEF                     INDF0           equ	4079	;# 
   245   000FF0                     INTCON3         equ	4080	;# 
   246   000FF1                     INTCON2         equ	4081	;# 
   247   000FF2                     INTCON          equ	4082	;# 
   248   000FF3                     PROD            equ	4083	;# 
   249   000FF3                     PRODL           equ	4083	;# 
   250   000FF4                     PRODH           equ	4084	;# 
   251   000FF5                     TABLAT          equ	4085	;# 
   252   000FF6                     TBLPTR          equ	4086	;# 
   253   000FF6                     TBLPTRL         equ	4086	;# 
   254   000FF7                     TBLPTRH         equ	4087	;# 
   255   000FF8                     TBLPTRU         equ	4088	;# 
   256   000FF9                     PCLAT           equ	4089	;# 
   257   000FF9                     PC              equ	4089	;# 
   258   000FF9                     PCL             equ	4089	;# 
   259   000FFA                     PCLATH          equ	4090	;# 
   260   000FFB                     PCLATU          equ	4091	;# 
   261   000FFC                     STKPTR          equ	4092	;# 
   262   000FFD                     TOS             equ	4093	;# 
   263   000FFD                     TOSL            equ	4093	;# 
   264   000FFE                     TOSH            equ	4094	;# 
   265   000FFF                     TOSU            equ	4095	;# 
   266   000F80                     PORTA           equ	3968	;# 
   267   000F81                     PORTB           equ	3969	;# 
   268   000F82                     PORTC           equ	3970	;# 
   269   000F83                     PORTD           equ	3971	;# 
   270   000F84                     PORTE           equ	3972	;# 
   271   000F89                     LATA            equ	3977	;# 
   272   000F8A                     LATB            equ	3978	;# 
   273   000F8B                     LATC            equ	3979	;# 
   274   000F8C                     LATD            equ	3980	;# 
   275   000F8D                     LATE            equ	3981	;# 
   276   000F92                     TRISA           equ	3986	;# 
   277   000F92                     DDRA            equ	3986	;# 
   278   000F93                     TRISB           equ	3987	;# 
   279   000F93                     DDRB            equ	3987	;# 
   280   000F94                     TRISC           equ	3988	;# 
   281   000F94                     DDRC            equ	3988	;# 
   282   000F95                     TRISD           equ	3989	;# 
   283   000F95                     DDRD            equ	3989	;# 
   284   000F96                     TRISE           equ	3990	;# 
   285   000F96                     DDRE            equ	3990	;# 
   286   000F9B                     OSCTUNE         equ	3995	;# 
   287   000F9D                     PIE1            equ	3997	;# 
   288   000F9E                     PIR1            equ	3998	;# 
   289   000F9F                     IPR1            equ	3999	;# 
   290   000FA0                     PIE2            equ	4000	;# 
   291   000FA1                     PIR2            equ	4001	;# 
   292   000FA2                     IPR2            equ	4002	;# 
   293   000FA6                     EECON1          equ	4006	;# 
   294   000FA7                     EECON2          equ	4007	;# 
   295   000FA8                     EEDATA          equ	4008	;# 
   296   000FA9                     EEADR           equ	4009	;# 
   297   000FAB                     RCSTA           equ	4011	;# 
   298   000FAB                     RCSTA1          equ	4011	;# 
   299   000FAC                     TXSTA           equ	4012	;# 
   300   000FAC                     TXSTA1          equ	4012	;# 
   301   000FAD                     TXREG           equ	4013	;# 
   302   000FAD                     TXREG1          equ	4013	;# 
   303   000FAE                     RCREG           equ	4014	;# 
   304   000FAE                     RCREG1          equ	4014	;# 
   305   000FAF                     SPBRG           equ	4015	;# 
   306   000FAF                     SPBRG1          equ	4015	;# 
   307   000FB0                     SPBRGH          equ	4016	;# 
   308   000FB1                     T3CON           equ	4017	;# 
   309   000FB2                     TMR3            equ	4018	;# 
   310   000FB2                     TMR3L           equ	4018	;# 
   311   000FB3                     TMR3H           equ	4019	;# 
   312   000FB4                     CMCON           equ	4020	;# 
   313   000FB5                     CVRCON          equ	4021	;# 
   314   000FB6                     ECCP1AS         equ	4022	;# 
   315   000FB6                     ECCPAS          equ	4022	;# 
   316   000FB7                     PWM1CON         equ	4023	;# 
   317   000FB7                     ECCP1DEL        equ	4023	;# 
   318   000FB8                     BAUDCON         equ	4024	;# 
   319   000FB8                     BAUDCTL         equ	4024	;# 
   320   000FBA                     CCP2CON         equ	4026	;# 
   321   000FBB                     CCPR2           equ	4027	;# 
   322   000FBB                     CCPR2L          equ	4027	;# 
   323   000FBC                     CCPR2H          equ	4028	;# 
   324   000FBD                     CCP1CON         equ	4029	;# 
   325   000FBE                     CCPR1           equ	4030	;# 
   326   000FBE                     CCPR1L          equ	4030	;# 
   327   000FBF                     CCPR1H          equ	4031	;# 
   328   000FC0                     ADCON2          equ	4032	;# 
   329   000FC1                     ADCON1          equ	4033	;# 
   330   000FC2                     ADCON0          equ	4034	;# 
   331   000FC3                     ADRES           equ	4035	;# 
   332   000FC3                     ADRESL          equ	4035	;# 
   333   000FC4                     ADRESH          equ	4036	;# 
   334   000FC5                     SSPCON2         equ	4037	;# 
   335   000FC6                     SSPCON1         equ	4038	;# 
   336   000FC7                     SSPSTAT         equ	4039	;# 
   337   000FC8                     SSPADD          equ	4040	;# 
   338   000FC9                     SSPBUF          equ	4041	;# 
   339   000FCA                     T2CON           equ	4042	;# 
   340   000FCB                     PR2             equ	4043	;# 
   341   000FCB                     MEMCON          equ	4043	;# 
   342   000FCC                     TMR2            equ	4044	;# 
   343   000FCD                     T1CON           equ	4045	;# 
   344   000FCE                     TMR1            equ	4046	;# 
   345   000FCE                     TMR1L           equ	4046	;# 
   346   000FCF                     TMR1H           equ	4047	;# 
   347   000FD0                     RCON            equ	4048	;# 
   348   000FD1                     WDTCON          equ	4049	;# 
   349   000FD2                     HLVDCON         equ	4050	;# 
   350   000FD2                     LVDCON          equ	4050	;# 
   351   000FD3                     OSCCON          equ	4051	;# 
   352   000FD5                     T0CON           equ	4053	;# 
   353   000FD6                     TMR0            equ	4054	;# 
   354   000FD6                     TMR0L           equ	4054	;# 
   355   000FD7                     TMR0H           equ	4055	;# 
   356   000FD8                     STATUS          equ	4056	;# 
   357   000FD9                     FSR2            equ	4057	;# 
   358   000FD9                     FSR2L           equ	4057	;# 
   359   000FDA                     FSR2H           equ	4058	;# 
   360   000FDB                     PLUSW2          equ	4059	;# 
   361   000FDC                     PREINC2         equ	4060	;# 
   362   000FDD                     POSTDEC2        equ	4061	;# 
   363   000FDE                     POSTINC2        equ	4062	;# 
   364   000FDF                     INDF2           equ	4063	;# 
   365   000FE0                     BSR             equ	4064	;# 
   366   000FE1                     FSR1            equ	4065	;# 
   367   000FE1                     FSR1L           equ	4065	;# 
   368   000FE2                     FSR1H           equ	4066	;# 
   369   000FE3                     PLUSW1          equ	4067	;# 
   370   000FE4                     PREINC1         equ	4068	;# 
   371   000FE5                     POSTDEC1        equ	4069	;# 
   372   000FE6                     POSTINC1        equ	4070	;# 
   373   000FE7                     INDF1           equ	4071	;# 
   374   000FE8                     WREG            equ	4072	;# 
   375   000FE9                     FSR0            equ	4073	;# 
   376   000FE9                     FSR0L           equ	4073	;# 
   377   000FEA                     FSR0H           equ	4074	;# 
   378   000FEB                     PLUSW0          equ	4075	;# 
   379   000FEC                     PREINC0         equ	4076	;# 
   380   000FED                     POSTDEC0        equ	4077	;# 
   381   000FEE                     POSTINC0        equ	4078	;# 
   382   000FEF                     INDF0           equ	4079	;# 
   383   000FF0                     INTCON3         equ	4080	;# 
   384   000FF1                     INTCON2         equ	4081	;# 
   385   000FF2                     INTCON          equ	4082	;# 
   386   000FF3                     PROD            equ	4083	;# 
   387   000FF3                     PRODL           equ	4083	;# 
   388   000FF4                     PRODH           equ	4084	;# 
   389   000FF5                     TABLAT          equ	4085	;# 
   390   000FF6                     TBLPTR          equ	4086	;# 
   391   000FF6                     TBLPTRL         equ	4086	;# 
   392   000FF7                     TBLPTRH         equ	4087	;# 
   393   000FF8                     TBLPTRU         equ	4088	;# 
   394   000FF9                     PCLAT           equ	4089	;# 
   395   000FF9                     PC              equ	4089	;# 
   396   000FF9                     PCL             equ	4089	;# 
   397   000FFA                     PCLATH          equ	4090	;# 
   398   000FFB                     PCLATU          equ	4091	;# 
   399   000FFC                     STKPTR          equ	4092	;# 
   400   000FFD                     TOS             equ	4093	;# 
   401   000FFD                     TOSL            equ	4093	;# 
   402   000FFE                     TOSH            equ	4094	;# 
   403   000FFF                     TOSU            equ	4095	;# 
   404   000F80                     PORTA           equ	3968	;# 
   405   000F81                     PORTB           equ	3969	;# 
   406   000F82                     PORTC           equ	3970	;# 
   407   000F83                     PORTD           equ	3971	;# 
   408   000F84                     PORTE           equ	3972	;# 
   409   000F89                     LATA            equ	3977	;# 
   410   000F8A                     LATB            equ	3978	;# 
   411   000F8B                     LATC            equ	3979	;# 
   412   000F8C                     LATD            equ	3980	;# 
   413   000F8D                     LATE            equ	3981	;# 
   414   000F92                     TRISA           equ	3986	;# 
   415   000F92                     DDRA            equ	3986	;# 
   416   000F93                     TRISB           equ	3987	;# 
   417   000F93                     DDRB            equ	3987	;# 
   418   000F94                     TRISC           equ	3988	;# 
   419   000F94                     DDRC            equ	3988	;# 
   420   000F95                     TRISD           equ	3989	;# 
   421   000F95                     DDRD            equ	3989	;# 
   422   000F96                     TRISE           equ	3990	;# 
   423   000F96                     DDRE            equ	3990	;# 
   424   000F9B                     OSCTUNE         equ	3995	;# 
   425   000F9D                     PIE1            equ	3997	;# 
   426   000F9E                     PIR1            equ	3998	;# 
   427   000F9F                     IPR1            equ	3999	;# 
   428   000FA0                     PIE2            equ	4000	;# 
   429   000FA1                     PIR2            equ	4001	;# 
   430   000FA2                     IPR2            equ	4002	;# 
   431   000FA6                     EECON1          equ	4006	;# 
   432   000FA7                     EECON2          equ	4007	;# 
   433   000FA8                     EEDATA          equ	4008	;# 
   434   000FA9                     EEADR           equ	4009	;# 
   435   000FAB                     RCSTA           equ	4011	;# 
   436   000FAB                     RCSTA1          equ	4011	;# 
   437   000FAC                     TXSTA           equ	4012	;# 
   438   000FAC                     TXSTA1          equ	4012	;# 
   439   000FAD                     TXREG           equ	4013	;# 
   440   000FAD                     TXREG1          equ	4013	;# 
   441   000FAE                     RCREG           equ	4014	;# 
   442   000FAE                     RCREG1          equ	4014	;# 
   443   000FAF                     SPBRG           equ	4015	;# 
   444   000FAF                     SPBRG1          equ	4015	;# 
   445   000FB0                     SPBRGH          equ	4016	;# 
   446   000FB1                     T3CON           equ	4017	;# 
   447   000FB2                     TMR3            equ	4018	;# 
   448   000FB2                     TMR3L           equ	4018	;# 
   449   000FB3                     TMR3H           equ	4019	;# 
   450   000FB4                     CMCON           equ	4020	;# 
   451   000FB5                     CVRCON          equ	4021	;# 
   452   000FB6                     ECCP1AS         equ	4022	;# 
   453   000FB6                     ECCPAS          equ	4022	;# 
   454   000FB7                     PWM1CON         equ	4023	;# 
   455   000FB7                     ECCP1DEL        equ	4023	;# 
   456   000FB8                     BAUDCON         equ	4024	;# 
   457   000FB8                     BAUDCTL         equ	4024	;# 
   458   000FBA                     CCP2CON         equ	4026	;# 
   459   000FBB                     CCPR2           equ	4027	;# 
   460   000FBB                     CCPR2L          equ	4027	;# 
   461   000FBC                     CCPR2H          equ	4028	;# 
   462   000FBD                     CCP1CON         equ	4029	;# 
   463   000FBE                     CCPR1           equ	4030	;# 
   464   000FBE                     CCPR1L          equ	4030	;# 
   465   000FBF                     CCPR1H          equ	4031	;# 
   466   000FC0                     ADCON2          equ	4032	;# 
   467   000FC1                     ADCON1          equ	4033	;# 
   468   000FC2                     ADCON0          equ	4034	;# 
   469   000FC3                     ADRES           equ	4035	;# 
   470   000FC3                     ADRESL          equ	4035	;# 
   471   000FC4                     ADRESH          equ	4036	;# 
   472   000FC5                     SSPCON2         equ	4037	;# 
   473   000FC6                     SSPCON1         equ	4038	;# 
   474   000FC7                     SSPSTAT         equ	4039	;# 
   475   000FC8                     SSPADD          equ	4040	;# 
   476   000FC9                     SSPBUF          equ	4041	;# 
   477   000FCA                     T2CON           equ	4042	;# 
   478   000FCB                     PR2             equ	4043	;# 
   479   000FCB                     MEMCON          equ	4043	;# 
   480   000FCC                     TMR2            equ	4044	;# 
   481   000FCD                     T1CON           equ	4045	;# 
   482   000FCE                     TMR1            equ	4046	;# 
   483   000FCE                     TMR1L           equ	4046	;# 
   484   000FCF                     TMR1H           equ	4047	;# 
   485   000FD0                     RCON            equ	4048	;# 
   486   000FD1                     WDTCON          equ	4049	;# 
   487   000FD2                     HLVDCON         equ	4050	;# 
   488   000FD2                     LVDCON          equ	4050	;# 
   489   000FD3                     OSCCON          equ	4051	;# 
   490   000FD5                     T0CON           equ	4053	;# 
   491   000FD6                     TMR0            equ	4054	;# 
   492   000FD6                     TMR0L           equ	4054	;# 
   493   000FD7                     TMR0H           equ	4055	;# 
   494   000FD8                     STATUS          equ	4056	;# 
   495   000FD9                     FSR2            equ	4057	;# 
   496   000FD9                     FSR2L           equ	4057	;# 
   497   000FDA                     FSR2H           equ	4058	;# 
   498   000FDB                     PLUSW2          equ	4059	;# 
   499   000FDC                     PREINC2         equ	4060	;# 
   500   000FDD                     POSTDEC2        equ	4061	;# 
   501   000FDE                     POSTINC2        equ	4062	;# 
   502   000FDF                     INDF2           equ	4063	;# 
   503   000FE0                     BSR             equ	4064	;# 
   504   000FE1                     FSR1            equ	4065	;# 
   505   000FE1                     FSR1L           equ	4065	;# 
   506   000FE2                     FSR1H           equ	4066	;# 
   507   000FE3                     PLUSW1          equ	4067	;# 
   508   000FE4                     PREINC1         equ	4068	;# 
   509   000FE5                     POSTDEC1        equ	4069	;# 
   510   000FE6                     POSTINC1        equ	4070	;# 
   511   000FE7                     INDF1           equ	4071	;# 
   512   000FE8                     WREG            equ	4072	;# 
   513   000FE9                     FSR0            equ	4073	;# 
   514   000FE9                     FSR0L           equ	4073	;# 
   515   000FEA                     FSR0H           equ	4074	;# 
   516   000FEB                     PLUSW0          equ	4075	;# 
   517   000FEC                     PREINC0         equ	4076	;# 
   518   000FED                     POSTDEC0        equ	4077	;# 
   519   000FEE                     POSTINC0        equ	4078	;# 
   520   000FEF                     INDF0           equ	4079	;# 
   521   000FF0                     INTCON3         equ	4080	;# 
   522   000FF1                     INTCON2         equ	4081	;# 
   523   000FF2                     INTCON          equ	4082	;# 
   524   000FF3                     PROD            equ	4083	;# 
   525   000FF3                     PRODL           equ	4083	;# 
   526   000FF4                     PRODH           equ	4084	;# 
   527   000FF5                     TABLAT          equ	4085	;# 
   528   000FF6                     TBLPTR          equ	4086	;# 
   529   000FF6                     TBLPTRL         equ	4086	;# 
   530   000FF7                     TBLPTRH         equ	4087	;# 
   531   000FF8                     TBLPTRU         equ	4088	;# 
   532   000FF9                     PCLAT           equ	4089	;# 
   533   000FF9                     PC              equ	4089	;# 
   534   000FF9                     PCL             equ	4089	;# 
   535   000FFA                     PCLATH          equ	4090	;# 
   536   000FFB                     PCLATU          equ	4091	;# 
   537   000FFC                     STKPTR          equ	4092	;# 
   538   000FFD                     TOS             equ	4093	;# 
   539   000FFD                     TOSL            equ	4093	;# 
   540   000FFE                     TOSH            equ	4094	;# 
   541   000FFF                     TOSU            equ	4095	;# 
   542   000F80                     PORTA           equ	3968	;# 
   543   000F81                     PORTB           equ	3969	;# 
   544   000F82                     PORTC           equ	3970	;# 
   545   000F83                     PORTD           equ	3971	;# 
   546   000F84                     PORTE           equ	3972	;# 
   547   000F89                     LATA            equ	3977	;# 
   548   000F8A                     LATB            equ	3978	;# 
   549   000F8B                     LATC            equ	3979	;# 
   550   000F8C                     LATD            equ	3980	;# 
   551   000F8D                     LATE            equ	3981	;# 
   552   000F92                     TRISA           equ	3986	;# 
   553   000F92                     DDRA            equ	3986	;# 
   554   000F93                     TRISB           equ	3987	;# 
   555   000F93                     DDRB            equ	3987	;# 
   556   000F94                     TRISC           equ	3988	;# 
   557   000F94                     DDRC            equ	3988	;# 
   558   000F95                     TRISD           equ	3989	;# 
   559   000F95                     DDRD            equ	3989	;# 
   560   000F96                     TRISE           equ	3990	;# 
   561   000F96                     DDRE            equ	3990	;# 
   562   000F9B                     OSCTUNE         equ	3995	;# 
   563   000F9D                     PIE1            equ	3997	;# 
   564   000F9E                     PIR1            equ	3998	;# 
   565   000F9F                     IPR1            equ	3999	;# 
   566   000FA0                     PIE2            equ	4000	;# 
   567   000FA1                     PIR2            equ	4001	;# 
   568   000FA2                     IPR2            equ	4002	;# 
   569   000FA6                     EECON1          equ	4006	;# 
   570   000FA7                     EECON2          equ	4007	;# 
   571   000FA8                     EEDATA          equ	4008	;# 
   572   000FA9                     EEADR           equ	4009	;# 
   573   000FAB                     RCSTA           equ	4011	;# 
   574   000FAB                     RCSTA1          equ	4011	;# 
   575   000FAC                     TXSTA           equ	4012	;# 
   576   000FAC                     TXSTA1          equ	4012	;# 
   577   000FAD                     TXREG           equ	4013	;# 
   578   000FAD                     TXREG1          equ	4013	;# 
   579   000FAE                     RCREG           equ	4014	;# 
   580   000FAE                     RCREG1          equ	4014	;# 
   581   000FAF                     SPBRG           equ	4015	;# 
   582   000FAF                     SPBRG1          equ	4015	;# 
   583   000FB0                     SPBRGH          equ	4016	;# 
   584   000FB1                     T3CON           equ	4017	;# 
   585   000FB2                     TMR3            equ	4018	;# 
   586   000FB2                     TMR3L           equ	4018	;# 
   587   000FB3                     TMR3H           equ	4019	;# 
   588   000FB4                     CMCON           equ	4020	;# 
   589   000FB5                     CVRCON          equ	4021	;# 
   590   000FB6                     ECCP1AS         equ	4022	;# 
   591   000FB6                     ECCPAS          equ	4022	;# 
   592   000FB7                     PWM1CON         equ	4023	;# 
   593   000FB7                     ECCP1DEL        equ	4023	;# 
   594   000FB8                     BAUDCON         equ	4024	;# 
   595   000FB8                     BAUDCTL         equ	4024	;# 
   596   000FBA                     CCP2CON         equ	4026	;# 
   597   000FBB                     CCPR2           equ	4027	;# 
   598   000FBB                     CCPR2L          equ	4027	;# 
   599   000FBC                     CCPR2H          equ	4028	;# 
   600   000FBD                     CCP1CON         equ	4029	;# 
   601   000FBE                     CCPR1           equ	4030	;# 
   602   000FBE                     CCPR1L          equ	4030	;# 
   603   000FBF                     CCPR1H          equ	4031	;# 
   604   000FC0                     ADCON2          equ	4032	;# 
   605   000FC1                     ADCON1          equ	4033	;# 
   606   000FC2                     ADCON0          equ	4034	;# 
   607   000FC3                     ADRES           equ	4035	;# 
   608   000FC3                     ADRESL          equ	4035	;# 
   609   000FC4                     ADRESH          equ	4036	;# 
   610   000FC5                     SSPCON2         equ	4037	;# 
   611   000FC6                     SSPCON1         equ	4038	;# 
   612   000FC7                     SSPSTAT         equ	4039	;# 
   613   000FC8                     SSPADD          equ	4040	;# 
   614   000FC9                     SSPBUF          equ	4041	;# 
   615   000FCA                     T2CON           equ	4042	;# 
   616   000FCB                     PR2             equ	4043	;# 
   617   000FCB                     MEMCON          equ	4043	;# 
   618   000FCC                     TMR2            equ	4044	;# 
   619   000FCD                     T1CON           equ	4045	;# 
   620   000FCE                     TMR1            equ	4046	;# 
   621   000FCE                     TMR1L           equ	4046	;# 
   622   000FCF                     TMR1H           equ	4047	;# 
   623   000FD0                     RCON            equ	4048	;# 
   624   000FD1                     WDTCON          equ	4049	;# 
   625   000FD2                     HLVDCON         equ	4050	;# 
   626   000FD2                     LVDCON          equ	4050	;# 
   627   000FD3                     OSCCON          equ	4051	;# 
   628   000FD5                     T0CON           equ	4053	;# 
   629   000FD6                     TMR0            equ	4054	;# 
   630   000FD6                     TMR0L           equ	4054	;# 
   631   000FD7                     TMR0H           equ	4055	;# 
   632   000FD8                     STATUS          equ	4056	;# 
   633   000FD9                     FSR2            equ	4057	;# 
   634   000FD9                     FSR2L           equ	4057	;# 
   635   000FDA                     FSR2H           equ	4058	;# 
   636   000FDB                     PLUSW2          equ	4059	;# 
   637   000FDC                     PREINC2         equ	4060	;# 
   638   000FDD                     POSTDEC2        equ	4061	;# 
   639   000FDE                     POSTINC2        equ	4062	;# 
   640   000FDF                     INDF2           equ	4063	;# 
   641   000FE0                     BSR             equ	4064	;# 
   642   000FE1                     FSR1            equ	4065	;# 
   643   000FE1                     FSR1L           equ	4065	;# 
   644   000FE2                     FSR1H           equ	4066	;# 
   645   000FE3                     PLUSW1          equ	4067	;# 
   646   000FE4                     PREINC1         equ	4068	;# 
   647   000FE5                     POSTDEC1        equ	4069	;# 
   648   000FE6                     POSTINC1        equ	4070	;# 
   649   000FE7                     INDF1           equ	4071	;# 
   650   000FE8                     WREG            equ	4072	;# 
   651   000FE9                     FSR0            equ	4073	;# 
   652   000FE9                     FSR0L           equ	4073	;# 
   653   000FEA                     FSR0H           equ	4074	;# 
   654   000FEB                     PLUSW0          equ	4075	;# 
   655   000FEC                     PREINC0         equ	4076	;# 
   656   000FED                     POSTDEC0        equ	4077	;# 
   657   000FEE                     POSTINC0        equ	4078	;# 
   658   000FEF                     INDF0           equ	4079	;# 
   659   000FF0                     INTCON3         equ	4080	;# 
   660   000FF1                     INTCON2         equ	4081	;# 
   661   000FF2                     INTCON          equ	4082	;# 
   662   000FF3                     PROD            equ	4083	;# 
   663   000FF3                     PRODL           equ	4083	;# 
   664   000FF4                     PRODH           equ	4084	;# 
   665   000FF5                     TABLAT          equ	4085	;# 
   666   000FF6                     TBLPTR          equ	4086	;# 
   667   000FF6                     TBLPTRL         equ	4086	;# 
   668   000FF7                     TBLPTRH         equ	4087	;# 
   669   000FF8                     TBLPTRU         equ	4088	;# 
   670   000FF9                     PCLAT           equ	4089	;# 
   671   000FF9                     PC              equ	4089	;# 
   672   000FF9                     PCL             equ	4089	;# 
   673   000FFA                     PCLATH          equ	4090	;# 
   674   000FFB                     PCLATU          equ	4091	;# 
   675   000FFC                     STKPTR          equ	4092	;# 
   676   000FFD                     TOS             equ	4093	;# 
   677   000FFD                     TOSL            equ	4093	;# 
   678   000FFE                     TOSH            equ	4094	;# 
   679   000FFF                     TOSU            equ	4095	;# 
   680   000F80                     PORTA           equ	3968	;# 
   681   000F81                     PORTB           equ	3969	;# 
   682   000F82                     PORTC           equ	3970	;# 
   683   000F83                     PORTD           equ	3971	;# 
   684   000F84                     PORTE           equ	3972	;# 
   685   000F89                     LATA            equ	3977	;# 
   686   000F8A                     LATB            equ	3978	;# 
   687   000F8B                     LATC            equ	3979	;# 
   688   000F8C                     LATD            equ	3980	;# 
   689   000F8D                     LATE            equ	3981	;# 
   690   000F92                     TRISA           equ	3986	;# 
   691   000F92                     DDRA            equ	3986	;# 
   692   000F93                     TRISB           equ	3987	;# 
   693   000F93                     DDRB            equ	3987	;# 
   694   000F94                     TRISC           equ	3988	;# 
   695   000F94                     DDRC            equ	3988	;# 
   696   000F95                     TRISD           equ	3989	;# 
   697   000F95                     DDRD            equ	3989	;# 
   698   000F96                     TRISE           equ	3990	;# 
   699   000F96                     DDRE            equ	3990	;# 
   700   000F9B                     OSCTUNE         equ	3995	;# 
   701   000F9D                     PIE1            equ	3997	;# 
   702   000F9E                     PIR1            equ	3998	;# 
   703   000F9F                     IPR1            equ	3999	;# 
   704   000FA0                     PIE2            equ	4000	;# 
   705   000FA1                     PIR2            equ	4001	;# 
   706   000FA2                     IPR2            equ	4002	;# 
   707   000FA6                     EECON1          equ	4006	;# 
   708   000FA7                     EECON2          equ	4007	;# 
   709   000FA8                     EEDATA          equ	4008	;# 
   710   000FA9                     EEADR           equ	4009	;# 
   711   000FAB                     RCSTA           equ	4011	;# 
   712   000FAB                     RCSTA1          equ	4011	;# 
   713   000FAC                     TXSTA           equ	4012	;# 
   714   000FAC                     TXSTA1          equ	4012	;# 
   715   000FAD                     TXREG           equ	4013	;# 
   716   000FAD                     TXREG1          equ	4013	;# 
   717   000FAE                     RCREG           equ	4014	;# 
   718   000FAE                     RCREG1          equ	4014	;# 
   719   000FAF                     SPBRG           equ	4015	;# 
   720   000FAF                     SPBRG1          equ	4015	;# 
   721   000FB0                     SPBRGH          equ	4016	;# 
   722   000FB1                     T3CON           equ	4017	;# 
   723   000FB2                     TMR3            equ	4018	;# 
   724   000FB2                     TMR3L           equ	4018	;# 
   725   000FB3                     TMR3H           equ	4019	;# 
   726   000FB4                     CMCON           equ	4020	;# 
   727   000FB5                     CVRCON          equ	4021	;# 
   728   000FB6                     ECCP1AS         equ	4022	;# 
   729   000FB6                     ECCPAS          equ	4022	;# 
   730   000FB7                     PWM1CON         equ	4023	;# 
   731   000FB7                     ECCP1DEL        equ	4023	;# 
   732   000FB8                     BAUDCON         equ	4024	;# 
   733   000FB8                     BAUDCTL         equ	4024	;# 
   734   000FBA                     CCP2CON         equ	4026	;# 
   735   000FBB                     CCPR2           equ	4027	;# 
   736   000FBB                     CCPR2L          equ	4027	;# 
   737   000FBC                     CCPR2H          equ	4028	;# 
   738   000FBD                     CCP1CON         equ	4029	;# 
   739   000FBE                     CCPR1           equ	4030	;# 
   740   000FBE                     CCPR1L          equ	4030	;# 
   741   000FBF                     CCPR1H          equ	4031	;# 
   742   000FC0                     ADCON2          equ	4032	;# 
   743   000FC1                     ADCON1          equ	4033	;# 
   744   000FC2                     ADCON0          equ	4034	;# 
   745   000FC3                     ADRES           equ	4035	;# 
   746   000FC3                     ADRESL          equ	4035	;# 
   747   000FC4                     ADRESH          equ	4036	;# 
   748   000FC5                     SSPCON2         equ	4037	;# 
   749   000FC6                     SSPCON1         equ	4038	;# 
   750   000FC7                     SSPSTAT         equ	4039	;# 
   751   000FC8                     SSPADD          equ	4040	;# 
   752   000FC9                     SSPBUF          equ	4041	;# 
   753   000FCA                     T2CON           equ	4042	;# 
   754   000FCB                     PR2             equ	4043	;# 
   755   000FCB                     MEMCON          equ	4043	;# 
   756   000FCC                     TMR2            equ	4044	;# 
   757   000FCD                     T1CON           equ	4045	;# 
   758   000FCE                     TMR1            equ	4046	;# 
   759   000FCE                     TMR1L           equ	4046	;# 
   760   000FCF                     TMR1H           equ	4047	;# 
   761   000FD0                     RCON            equ	4048	;# 
   762   000FD1                     WDTCON          equ	4049	;# 
   763   000FD2                     HLVDCON         equ	4050	;# 
   764   000FD2                     LVDCON          equ	4050	;# 
   765   000FD3                     OSCCON          equ	4051	;# 
   766   000FD5                     T0CON           equ	4053	;# 
   767   000FD6                     TMR0            equ	4054	;# 
   768   000FD6                     TMR0L           equ	4054	;# 
   769   000FD7                     TMR0H           equ	4055	;# 
   770   000FD8                     STATUS          equ	4056	;# 
   771   000FD9                     FSR2            equ	4057	;# 
   772   000FD9                     FSR2L           equ	4057	;# 
   773   000FDA                     FSR2H           equ	4058	;# 
   774   000FDB                     PLUSW2          equ	4059	;# 
   775   000FDC                     PREINC2         equ	4060	;# 
   776   000FDD                     POSTDEC2        equ	4061	;# 
   777   000FDE                     POSTINC2        equ	4062	;# 
   778   000FDF                     INDF2           equ	4063	;# 
   779   000FE0                     BSR             equ	4064	;# 
   780   000FE1                     FSR1            equ	4065	;# 
   781   000FE1                     FSR1L           equ	4065	;# 
   782   000FE2                     FSR1H           equ	4066	;# 
   783   000FE3                     PLUSW1          equ	4067	;# 
   784   000FE4                     PREINC1         equ	4068	;# 
   785   000FE5                     POSTDEC1        equ	4069	;# 
   786   000FE6                     POSTINC1        equ	4070	;# 
   787   000FE7                     INDF1           equ	4071	;# 
   788   000FE8                     WREG            equ	4072	;# 
   789   000FE9                     FSR0            equ	4073	;# 
   790   000FE9                     FSR0L           equ	4073	;# 
   791   000FEA                     FSR0H           equ	4074	;# 
   792   000FEB                     PLUSW0          equ	4075	;# 
   793   000FEC                     PREINC0         equ	4076	;# 
   794   000FED                     POSTDEC0        equ	4077	;# 
   795   000FEE                     POSTINC0        equ	4078	;# 
   796   000FEF                     INDF0           equ	4079	;# 
   797   000FF0                     INTCON3         equ	4080	;# 
   798   000FF1                     INTCON2         equ	4081	;# 
   799   000FF2                     INTCON          equ	4082	;# 
   800   000FF3                     PROD            equ	4083	;# 
   801   000FF3                     PRODL           equ	4083	;# 
   802   000FF4                     PRODH           equ	4084	;# 
   803   000FF5                     TABLAT          equ	4085	;# 
   804   000FF6                     TBLPTR          equ	4086	;# 
   805   000FF6                     TBLPTRL         equ	4086	;# 
   806   000FF7                     TBLPTRH         equ	4087	;# 
   807   000FF8                     TBLPTRU         equ	4088	;# 
   808   000FF9                     PCLAT           equ	4089	;# 
   809   000FF9                     PC              equ	4089	;# 
   810   000FF9                     PCL             equ	4089	;# 
   811   000FFA                     PCLATH          equ	4090	;# 
   812   000FFB                     PCLATU          equ	4091	;# 
   813   000FFC                     STKPTR          equ	4092	;# 
   814   000FFD                     TOS             equ	4093	;# 
   815   000FFD                     TOSL            equ	4093	;# 
   816   000FFE                     TOSH            equ	4094	;# 
   817   000FFF                     TOSU            equ	4095	;# 
   818                           
   819                           	psect	idataCOMRAM
   820   002D26                     __pidataCOMRAM:
   821                           	callstack 0
   822                           
   823                           ;initializer for lcd_set_cursor@F2720
   824   002D26  80                 	db	128
   825   002D27  C0                 	db	192
   826   007E11                     _GO_DONE        set	32273
   827   007CA9                     _TRISD1         set	31913
   828   007CAF                     _TRISD7         set	31919
   829   000F82                     _PORTCbits      set	3970
   830   000FC3                     _ADRESL         set	4035
   831   000FC4                     _ADRESH         set	4036
   832   000FC2                     _ADCON0         set	4034
   833   000FC0                     _ADCON2bits     set	4032
   834   000FC1                     _ADCON1         set	4033
   835   000FC2                     _ADCON0bits     set	4034
   836   000F92                     _TRISA          set	3986
   837   000FBE                     _CCPR1L         set	4030
   838   000FCA                     _T2CONbits      set	4042
   839   000F94                     _TRISCbits      set	3988
   840   000FBD                     _CCP1CONbits    set	4029
   841   000FCB                     _PR2            set	4043
   842   000F93                     _TRISB          set	3987
   843   000F81                     _PORTB          set	3969
   844   000F83                     _PORTDbits      set	3971
   845   000FD3                     _OSCCON         set	4051
   846                           
   847                           	psect	smallconst
   848   000600                     __psmallconst:
   849                           	callstack 0
   850   000600  00                 	db	0
   851   000601                     STR_1:
   852   000601  49                 	db	73	;'I'
   853   000602  6E                 	db	110	;'n'
   854   000603  69                 	db	105	;'i'
   855   000604  63                 	db	99	;'c'
   856   000605  69                 	db	105	;'i'
   857   000606  61                 	db	97	;'a'
   858   000607  6E                 	db	110	;'n'
   859   000608  64                 	db	100	;'d'
   860   000609  6F                 	db	111	;'o'
   861   00060A  2E                 	db	46
   862   00060B  2E                 	db	46
   863   00060C  2E                 	db	46
   864   00060D  00                 	db	0
   865   00060E                     STR_2:
   866   00060E  54                 	db	84	;'T'
   867   00060F  45                 	db	69	;'E'
   868   000610  4D                 	db	77	;'M'
   869   000611  3A                 	db	58	;':'
   870   000612  20                 	db	32
   871   000613  00                 	db	0
   872   000614                     STR_3:
   873   000614  25                 	db	37
   874   000615  2E                 	db	46
   875   000616  32                 	db	50	;'2'
   876   000617  66                 	db	102	;'f'
   877   000618  00                 	db	0
   878   000619                     STR_4:
   879   000619  69                 	db	105	;'i'
   880   00061A  6E                 	db	110	;'n'
   881   00061B  66                 	db	102	;'f'
   882   00061C  00                 	db	0
   883   00061D                     STR_7:
   884   00061D  6E                 	db	110	;'n'
   885   00061E  61                 	db	97	;'a'
   886   00061F  6E                 	db	110	;'n'
   887   000620  00                 	db	0
   888   00061D                     STR_8           equ	STR_7
   889   00061D                     STR_9           equ	STR_7
   890   000619                     STR_5           equ	STR_4
   891   000619                     STR_6           equ	STR_4
   892   000621  00                 	db	0	; dummy byte at the end
   893   000600                     __smallconst    set	__psmallconst
   894   000600                     __mediumconst   set	__psmallconst
   895   000002                     __activetblptr  equ	2
   896                           
   897                           ; #config settings
   898                           
   899                           	psect	cinit
   900   002AFE                     __pcinit:
   901                           	callstack 0
   902   002AFE                     start_initialization:
   903                           	callstack 0
   904   002AFE                     __initialization:
   905                           	callstack 0
   906                           
   907                           ; Initialize objects allocated to COMRAM (2 bytes)
   908                           ; load TBLPTR registers with __pidataCOMRAM
   909   002AFE  0E26               	movlw	low __pidataCOMRAM
   910   002B00  6EF6               	movwf	tblptrl,c
   911   002B02  0E2D               	movlw	high __pidataCOMRAM
   912   002B04  6EF7               	movwf	tblptrh,c
   913   002B06  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   914   002B08  6EF8               	movwf	tblptru,c
   915   002B0A  0009               	tblrd		*+	;fetch initializer
   916   002B0C  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   917   002B10  0009               	tblrd		*+	;fetch initializer
   918   002B12  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   919                           
   920                           ; Clear objects allocated to BANK1 (80 bytes)
   921   002B16  EE01  F000         	lfsr	0,__pbssBANK1
   922   002B1A  0E50               	movlw	80
   923   002B1C                     clear_0:
   924   002B1C  6AEE               	clrf	postinc0,c
   925   002B1E  06E8               	decf	wreg,f,c
   926   002B20  E1FD               	bnz	clear_0
   927                           
   928                           ; Clear objects allocated to BANK0 (4 bytes)
   929   002B22  0100               	movlb	0
   930   002B24  6BD4               	clrf	(__pbssBANK0+3)& (0+255),b
   931   002B26  6BD3               	clrf	(__pbssBANK0+2)& (0+255),b
   932   002B28  6BD2               	clrf	(__pbssBANK0+1)& (0+255),b
   933   002B2A  6BD1               	clrf	__pbssBANK0& (0+255),b
   934                           
   935                           ; Clear objects allocated to COMRAM (9 bytes)
   936   002B2C  EE00  F074         	lfsr	0,__pbssCOMRAM
   937   002B30  0E09               	movlw	9
   938   002B32                     clear_1:
   939   002B32  6AEE               	clrf	postinc0,c
   940   002B34  06E8               	decf	wreg,f,c
   941   002B36  E1FD               	bnz	clear_1
   942   002B38                     end_of_initialization:
   943                           	callstack 0
   944   002B38                     __end_of__initialization:
   945                           	callstack 0
   946   002B38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   947   002B3A  6EF8               	movwf	tblptru,c
   948   002B3C  0100               	movlb	0
   949   002B3E  EF08  F012         	goto	_main	;jump to C main() function
   950                           
   951                           	psect	bssCOMRAM
   952   000074                     __pbssCOMRAM:
   953                           	callstack 0
   954   000074                     floorf@F521:
   955                           	callstack 0
   956   000074                     	ds	4
   957   000078                     ___fpclassifyf@F465:
   958                           	callstack 0
   959   000078                     	ds	4
   960   00007C                     _flags:
   961                           	callstack 0
   962   00007C                     	ds	1
   963                           
   964                           	psect	dataCOMRAM
   965   00007D                     __pdataCOMRAM:
   966                           	callstack 0
   967   00007D                     lcd_set_cursor@F2720:
   968                           	callstack 0
   969   00007D                     	ds	2
   970                           
   971                           	psect	bssBANK0
   972   0000D1                     __pbssBANK0:
   973                           	callstack 0
   974   0000D1                     _width:
   975                           	callstack 0
   976   0000D1                     	ds	2
   977   0000D3                     _prec:
   978                           	callstack 0
   979   0000D3                     	ds	2
   980                           
   981                           	psect	bssBANK1
   982   000100                     __pbssBANK1:
   983                           	callstack 0
   984   000100                     _dbuf:
   985                           	callstack 0
   986   000100                     	ds	80
   987                           
   988                           	psect	cstackBANK0
   989   000080                     __pcstackBANK0:
   990                           	callstack 0
   991   000080                     efgtoa@ne:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x0
   995   000080                     	ds	2
   996   000082                     efgtoa@p:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x2
  1000   000082                     	ds	2
  1001   000084                     efgtoa@t:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x4
  1005   000084                     	ds	2
  1006   000086                     _efgtoa$1138:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x6
  1010   000086                     	ds	2
  1011   000088                     efgtoa@pp:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x8
  1015   000088                     	ds	1
  1016   000089                     efgtoa@mode:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x9
  1020   000089                     	ds	1
  1021   00008A                     efgtoa@nmode:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0xA
  1025   00008A                     	ds	1
  1026   00008B                     efgtoa@d:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0xB
  1030   00008B                     	ds	2
  1031   00008D                     efgtoa@m:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0xD
  1035   00008D                     	ds	2
  1036   00008F                     efgtoa@e:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0xF
  1040   00008F                     	ds	2
  1041   000091                     efgtoa@w:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x11
  1045   000091                     	ds	2
  1046   000093                     efgtoa@ou:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x13
  1050   000093                     	ds	4
  1051   000097                     efgtoa@i:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x17
  1055   000097                     	ds	2
  1056   000099                     efgtoa@h:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x19
  1060   000099                     	ds	4
  1061   00009D                     efgtoa@l:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x1D
  1065   00009D                     	ds	4
  1066   0000A1                     efgtoa@sign:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x21
  1070   0000A1                     	ds	1
  1071   0000A2                     efgtoa@n:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x22
  1075   0000A2                     	ds	2
  1076   0000A4                     efgtoa@g:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x24
  1080   0000A4                     	ds	4
  1081   0000A8                     efgtoa@u:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x28
  1085   0000A8                     	ds	4
  1086   0000AC                     ?_vfprintf:
  1087                           	callstack 0
  1088   0000AC                     vfprintf@fp:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x2C
  1092   0000AC                     	ds	1
  1093   0000AD                     vfprintf@fmt:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x2D
  1097   0000AD                     	ds	1
  1098   0000AE                     vfprintf@ap:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x2E
  1102   0000AE                     	ds	1
  1103   0000AF                     ?_sprintf:
  1104                           	callstack 0
  1105   0000AF                     sprintf@s:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x2F
  1109   0000AF                     	ds	1
  1110   0000B0                     sprintf@fmt:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x30
  1114   0000B0                     	ds	5
  1115   0000B5                     ??_main:
  1116                           
  1117                           ; 1 bytes @ 0x35
  1118   0000B5                     	ds	2
  1119   0000B7                     main@buffer:
  1120                           	callstack 0
  1121                           
  1122                           ; 16 bytes @ 0x37
  1123   0000B7                     	ds	16
  1124   0000C7                     main@ldr_raw_value:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x47
  1128   0000C7                     	ds	2
  1129   0000C9                     main@lm35_value:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x49
  1133   0000C9                     	ds	4
  1134   0000CD                     main@lm35_raw_value:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x4D
  1138   0000CD                     	ds	2
  1139   0000CF                     main@pwm_duty_cycle:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x4F
  1143   0000CF                     	ds	2
  1144                           
  1145                           	psect	cstackCOMRAM
  1146   000001                     __pcstackCOMRAM:
  1147                           	callstack 0
  1148   000001                     ?_ADC_read:
  1149                           	callstack 0
  1150   000001                     ?___fpclassifyf:
  1151                           	callstack 0
  1152   000001                     ?_read_prec_or_width:
  1153                           	callstack 0
  1154   000001                     ?___fladd:
  1155                           	callstack 0
  1156   000001                     ?_labs:
  1157                           	callstack 0
  1158   000001                     ?___flneg:
  1159                           	callstack 0
  1160   000001                     ?___fltol:
  1161                           	callstack 0
  1162   000001                     ?___xxtofl:
  1163                           	callstack 0
  1164   000001                     read_prec_or_width@fmt:
  1165                           	callstack 0
  1166   000001                     PWM_control@value:
  1167                           	callstack 0
  1168   000001                     memcpy@d1:
  1169                           	callstack 0
  1170   000001                     fputc@c:
  1171                           	callstack 0
  1172   000001                     strcpy@dest:
  1173                           	callstack 0
  1174   000001                     ___fleq@ff1:
  1175                           	callstack 0
  1176   000001                     ___flneg@f1:
  1177                           	callstack 0
  1178   000001                     ___fltol@f1:
  1179                           	callstack 0
  1180   000001                     ___fladd@b:
  1181                           	callstack 0
  1182   000001                     ___xxtofl@val:
  1183                           	callstack 0
  1184   000001                     ___fpclassifyf@x:
  1185                           	callstack 0
  1186   000001                     labs@a:
  1187                           	callstack 0
  1188   000001                     ??_lcd_enable:
  1189                           
  1190                           ; 1 bytes @ 0x0
  1191   000001                     	ds	1
  1192   000002                     lcd_cmd@cmd:
  1193                           	callstack 0
  1194   000002                     lcd_data@data:
  1195                           	callstack 0
  1196   000002                     read_prec_or_width@ap:
  1197                           	callstack 0
  1198   000002                     
  1199                           ; 1 bytes @ 0x1
  1200   000002                     	ds	1
  1201   000003                     lcd_set_cursor@col:
  1202                           	callstack 0
  1203   000003                     fputc@fp:
  1204                           	callstack 0
  1205   000003                     strcpy@src:
  1206                           	callstack 0
  1207   000003                     lcd_string@str:
  1208                           	callstack 0
  1209   000003                     memcpy@s1:
  1210                           	callstack 0
  1211   000003                     ??_lcd_init:
  1212   000003                     ??_ADC_read:
  1213   000003                     ??_PWM_control:
  1214   000003                     ??_read_prec_or_width:
  1215                           
  1216                           ; 1 bytes @ 0x2
  1217   000003                     	ds	1
  1218   000004                     lcd_set_cursor@positions:
  1219                           	callstack 0
  1220   000004                     ??_fputc:
  1221   000004                     ??_strcpy:
  1222                           
  1223                           ; 1 bytes @ 0x3
  1224   000004                     	ds	1
  1225   000005                     ADC_read@channel:
  1226                           	callstack 0
  1227   000005                     read_prec_or_width@c:
  1228                           	callstack 0
  1229   000005                     memcpy@n:
  1230                           	callstack 0
  1231   000005                     strcpy@d:
  1232                           	callstack 0
  1233   000005                     ___fleq@ff2:
  1234                           	callstack 0
  1235   000005                     ___fladd@a:
  1236                           	callstack 0
  1237   000005                     ??___fpclassifyf:
  1238   000005                     ??_labs:
  1239   000005                     ??___fltol:
  1240   000005                     ??___xxtofl:
  1241                           
  1242                           ; 1 bytes @ 0x4
  1243   000005                     	ds	1
  1244   000006                     lcd_set_cursor@row:
  1245                           	callstack 0
  1246   000006                     read_prec_or_width@n:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x5
  1250   000006                     	ds	1
  1251   000007                     memcpy@d:
  1252                           	callstack 0
  1253   000007                     
  1254                           ; 1 bytes @ 0x6
  1255   000007                     	ds	2
  1256   000009                     ___fltol@sign1:
  1257                           	callstack 0
  1258   000009                     ___xxtofl@sign:
  1259                           	callstack 0
  1260   000009                     ___fpclassifyf@e:
  1261                           	callstack 0
  1262   000009                     memcpy@s:
  1263                           	callstack 0
  1264   000009                     fputs@s:
  1265                           	callstack 0
  1266   000009                     ??___fladd:
  1267   000009                     ??___fleq:
  1268                           
  1269                           ; 1 bytes @ 0x8
  1270   000009                     	ds	1
  1271   00000A                     ___fltol@exp1:
  1272                           	callstack 0
  1273   00000A                     ___xxtofl@exp:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x9
  1277   00000A                     	ds	1
  1278   00000B                     memcpy@tmp:
  1279                           	callstack 0
  1280   00000B                     fputs@fp:
  1281                           	callstack 0
  1282   00000B                     ___xxtofl@arg:
  1283                           	callstack 0
  1284   00000B                     ___fpclassifyf@u:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0xA
  1288   00000B                     	ds	1
  1289   00000C                     fputs@c:
  1290                           	callstack 0
  1291   00000C                     
  1292                           ; 1 bytes @ 0xB
  1293   00000C                     	ds	1
  1294   00000D                     ___fladd@signs:
  1295                           	callstack 0
  1296   00000D                     fputs@i:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0xC
  1300   00000D                     	ds	1
  1301   00000E                     ___fladd@aexp:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0xD
  1305   00000E                     	ds	1
  1306   00000F                     ?___flmul:
  1307                           	callstack 0
  1308   00000F                     ___fladd@bexp:
  1309                           	callstack 0
  1310   00000F                     pad@fp:
  1311                           	callstack 0
  1312   00000F                     ___flmul@b:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0xE
  1316   00000F                     	ds	1
  1317   000010                     ___fladd@grs:
  1318                           	callstack 0
  1319   000010                     pad@buf:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0xF
  1323   000010                     	ds	2
  1324   000012                     pad@p:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x11
  1328   000012                     	ds	1
  1329   000013                     ___flmul@a:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x12
  1333   000013                     	ds	1
  1334   000014                     ??_pad:
  1335                           
  1336                           ; 1 bytes @ 0x13
  1337   000014                     	ds	1
  1338   000015                     pad@i:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x14
  1342   000015                     	ds	2
  1343   000017                     ??___flmul:
  1344                           
  1345                           ; 1 bytes @ 0x16
  1346   000017                     	ds	4
  1347   00001B                     ___flmul@sign:
  1348                           	callstack 0
  1349                           
  1350                           ; 1 bytes @ 0x1A
  1351   00001B                     	ds	1
  1352   00001C                     ___flmul@grs:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x1B
  1356   00001C                     	ds	4
  1357   000020                     ___flmul@aexp:
  1358                           	callstack 0
  1359                           
  1360                           ; 1 bytes @ 0x1F
  1361   000020                     	ds	1
  1362   000021                     ___flmul@bexp:
  1363                           	callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x20
  1366   000021                     	ds	1
  1367   000022                     ___flmul@prod:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x21
  1371   000022                     	ds	4
  1372   000026                     ___flmul@temp:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x25
  1376   000026                     	ds	2
  1377   000028                     ?___fldiv:
  1378                           	callstack 0
  1379   000028                     ?___flsub:
  1380                           	callstack 0
  1381   000028                     ___flge@ff1:
  1382                           	callstack 0
  1383   000028                     ___flsub@b:
  1384                           	callstack 0
  1385   000028                     ___fldiv@b:
  1386                           	callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x27
  1389   000028                     	ds	4
  1390   00002C                     ___flge@ff2:
  1391                           	callstack 0
  1392   00002C                     ___flsub@a:
  1393                           	callstack 0
  1394   00002C                     ___fldiv@a:
  1395                           	callstack 0
  1396                           
  1397                           ; 4 bytes @ 0x2B
  1398   00002C                     	ds	4
  1399   000030                     ??___fldiv:
  1400   000030                     ??___flge:
  1401                           
  1402                           ; 1 bytes @ 0x2F
  1403   000030                     	ds	4
  1404   000034                     ___fldiv@rem:
  1405                           	callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x33
  1408   000034                     	ds	4
  1409   000038                     ___fldiv@sign:
  1410                           	callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x37
  1413   000038                     	ds	1
  1414   000039                     ___fldiv@new_exp:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x38
  1418   000039                     	ds	2
  1419   00003B                     ___fldiv@grs:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x3A
  1423   00003B                     	ds	4
  1424   00003F                     ___fldiv@bexp:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x3E
  1428   00003F                     	ds	1
  1429   000040                     ___fldiv@aexp:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x3F
  1433   000040                     	ds	1
  1434   000041                     ?_ADC_read_temp:
  1435                           	callstack 0
  1436   000041                     ?_floorf:
  1437                           	callstack 0
  1438   000041                     ADC_read_temp@value:
  1439                           	callstack 0
  1440   000041                     floorf@x:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x40
  1444   000041                     	ds	4
  1445   000045                     _ADC_read_temp$1448:
  1446                           	callstack 0
  1447   000045                     ??_floorf:
  1448                           
  1449                           ; 1 bytes @ 0x44
  1450   000045                     	ds	6
  1451   00004B                     floorf@m:
  1452                           	callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x4A
  1455   00004B                     	ds	4
  1456   00004F                     floorf@e:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x4E
  1460   00004F                     	ds	2
  1461   000051                     floorf@u:
  1462                           	callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x50
  1465   000051                     	ds	4
  1466   000055                     efgtoa@fp:
  1467                           	callstack 0
  1468                           
  1469                           ; 1 bytes @ 0x54
  1470   000055                     	ds	1
  1471   000056                     efgtoa@f:
  1472                           	callstack 0
  1473                           
  1474                           ; 4 bytes @ 0x55
  1475   000056                     	ds	4
  1476   00005A                     efgtoa@c:
  1477                           	callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x59
  1480   00005A                     	ds	1
  1481   00005B                     ??_efgtoa:
  1482                           
  1483                           ; 1 bytes @ 0x5A
  1484   00005B                     	ds	2
  1485   00005D                     vfpfcnvrt@fp:
  1486                           	callstack 0
  1487                           
  1488                           ; 1 bytes @ 0x5C
  1489   00005D                     	ds	1
  1490   00005E                     vfpfcnvrt@fmt:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x5D
  1494   00005E                     	ds	1
  1495   00005F                     vfpfcnvrt@ap:
  1496                           	callstack 0
  1497                           
  1498                           ; 1 bytes @ 0x5E
  1499   00005F                     	ds	1
  1500   000060                     ??_vfpfcnvrt:
  1501                           
  1502                           ; 1 bytes @ 0x5F
  1503   000060                     	ds	1
  1504   000061                     vfpfcnvrt@convarg:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x60
  1508   000061                     	ds	4
  1509   000065                     vfpfcnvrt@c:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x64
  1513   000065                     	ds	1
  1514   000066                     vfpfcnvrt@cp:
  1515                           	callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x65
  1518   000066                     	ds	1
  1519   000067                     vfprintf@cfmt:
  1520                           	callstack 0
  1521   000067                     
  1522                           ; 1 bytes @ 0x66
  1523   000067                     	ds	1
  1524   000068                     sprintf@ap:
  1525                           	callstack 0
  1526   000068                     
  1527                           ; 1 bytes @ 0x67
  1528   000068                     	ds	1
  1529   000069                     sprintf@f:
  1530                           	callstack 0
  1531                           
  1532                           ; 11 bytes @ 0x68
  1533   000069                     	ds	11
  1534                           
  1535 ;;
  1536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1537 ;;
  1538 ;; *************** function _main *****************
  1539 ;; Defined at:
  1540 ;;		line 77 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  buffer         16   55[BANK0 ] unsigned char [16]
  1545 ;;  lm35_value      4   73[BANK0 ] float 
  1546 ;;  ldr_voltage     4    0        float 
  1547 ;;  pwm_duty_cyc    2   79[BANK0 ] unsigned int 
  1548 ;;  lm35_raw_val    2   77[BANK0 ] unsigned int 
  1549 ;;  ldr_raw_valu    2   71[BANK0 ] unsigned int 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1559 ;;      Params:         0       0       0       0       0       0       0
  1560 ;;      Locals:         0      26       0       0       0       0       0
  1561 ;;      Temps:          0       2       0       0       0       0       0
  1562 ;;      Totals:         0      28       0       0       0       0       0
  1563 ;;Total ram usage:       28 bytes
  1564 ;; Hardware stack levels required when called: 8
  1565 ;; This function calls:
  1566 ;;		_ADC_init
  1567 ;;		_ADC_read
  1568 ;;		_ADC_read_temp
  1569 ;;		_PWM_control
  1570 ;;		_PWM_init
  1571 ;;		_lcd_init
  1572 ;;		_lcd_set_cursor
  1573 ;;		_lcd_string
  1574 ;;		_sprintf
  1575 ;; This function is called by:
  1576 ;;		Startup code after reset
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text0
  1581   002410                     __ptext0:
  1582                           	callstack 0
  1583   002410                     _main:
  1584                           	callstack 23
  1585   002410                     
  1586                           ;main.c: 78:     unsigned int ldr_raw_value, lm35_raw_value;;main.c: 79:     float ldr_v
      +                          oltage, lm35_value;;main.c: 80:     unsigned int pwm_duty_cycle;;main.c: 81:     char bu
      +                          ffer[16];;main.c: 83:     OSCCON = 0b01110111;
  1587   002410  0E77               	movlw	119
  1588   002412  6ED3               	movwf	211,c	;volatile
  1589   002414                     
  1590                           ;main.c: 85:     ADC_init();
  1591   002414  EC5C  F016         	call	_ADC_init	;wreg free
  1592   002418                     
  1593                           ;main.c: 86:     PWM_init();
  1594   002418  EC4D  F016         	call	_PWM_init	;wreg free
  1595   00241C                     
  1596                           ;main.c: 87:     lcd_init();
  1597   00241C  EC36  F016         	call	_lcd_init	;wreg free
  1598   002420                     
  1599                           ;main.c: 89:     lcd_set_cursor(0, 0);
  1600   002420  0E00               	movlw	0
  1601   002422  6E03               	movwf	lcd_set_cursor@col^0,c
  1602   002424  0E00               	movlw	0
  1603   002426  EC6B  F016         	call	_lcd_set_cursor
  1604   00242A                     
  1605                           ;main.c: 90:     lcd_string("Iniciando...");
  1606   00242A  0E01               	movlw	low STR_1
  1607   00242C  6E03               	movwf	lcd_string@str^0,c
  1608   00242E  5003               	movf	lcd_string@str^0,w,c
  1609   002430  A4D8               	btfss	status,2,c
  1610   002432  0E06               	movlw	high __smallconst
  1611   002434  6E04               	movwf	(lcd_string@str+1)^0,c
  1612   002436  EC85  F014         	call	_lcd_string	;wreg free
  1613   00243A                     
  1614                           ;main.c: 91:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1615   00243A  0E0B               	movlw	11
  1616   00243C  0100               	movlb	0	; () banked
  1617   00243E  6FB6               	movwf	(??_main+1)& (0+255),b
  1618   002440  0E26               	movlw	38
  1619   002442  6FB5               	movwf	??_main& (0+255),b
  1620   002444  0E5D               	movlw	93
  1621   002446                     u3837:
  1622   002446  2EE8               	decfsz	wreg,f,c
  1623   002448  D7FE               	bra	u3837
  1624   00244A  2FB5               	decfsz	??_main& (0+255),f,b
  1625   00244C  D7FC               	bra	u3837
  1626   00244E  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1627   002450  D7FA               	bra	u3837
  1628   002452  D000               	nop2	
  1629   002454                     l3466:
  1630                           
  1631                           ;main.c: 98:         lm35_raw_value = ADC_read(2);
  1632   002454  0E02               	movlw	2
  1633   002456  ECDF  F014         	call	_ADC_read
  1634   00245A  C001  F0CD         	movff	?_ADC_read,main@lm35_raw_value
  1635   00245E  C002  F0CE         	movff	?_ADC_read+1,main@lm35_raw_value+1
  1636   002462                     
  1637                           ;main.c: 99:         lm35_value = ADC_read_temp(lm35_raw_value);
  1638   002462  C0CD  F041         	movff	main@lm35_raw_value,ADC_read_temp@value
  1639   002466  C0CE  F042         	movff	main@lm35_raw_value+1,ADC_read_temp@value+1
  1640   00246A  EC02  F014         	call	_ADC_read_temp	;wreg free
  1641   00246E  C041  F0C9         	movff	?_ADC_read_temp,main@lm35_value
  1642   002472  C042  F0CA         	movff	?_ADC_read_temp+1,main@lm35_value+1
  1643   002476  C043  F0CB         	movff	?_ADC_read_temp+2,main@lm35_value+2
  1644   00247A  C044  F0CC         	movff	?_ADC_read_temp+3,main@lm35_value+3
  1645   00247E                     
  1646                           ;main.c: 103:         pwm_duty_cycle = ldr_raw_value;
  1647   00247E  C0C7  F0CF         	movff	main@ldr_raw_value,main@pwm_duty_cycle
  1648   002482  C0C8  F0D0         	movff	main@ldr_raw_value+1,main@pwm_duty_cycle+1
  1649   002486                     
  1650                           ;main.c: 106:         if (pwm_duty_cycle > 1023) {
  1651   002486  0E04               	movlw	4
  1652   002488  0100               	movlb	0	; () banked
  1653   00248A  5DD0               	subwf	(main@pwm_duty_cycle+1)& (0+255),w,b
  1654   00248C  A0D8               	btfss	status,0,c
  1655   00248E  EF4B  F012         	goto	u3821
  1656   002492  EF4D  F012         	goto	u3820
  1657   002496                     u3821:
  1658   002496  EF50  F012         	goto	l3478
  1659   00249A                     u3820:
  1660   00249A                     
  1661                           ; BSR set to: 0
  1662                           ;main.c: 107:             pwm_duty_cycle = 1023;
  1663   00249A  0E03               	movlw	3
  1664   00249C  6FD0               	movwf	(main@pwm_duty_cycle+1)& (0+255),b
  1665   00249E  69CF               	setf	main@pwm_duty_cycle& (0+255),b
  1666   0024A0                     l3478:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 112:         PWM_control(pwm_duty_cycle);
  1670   0024A0  C0CF  F001         	movff	main@pwm_duty_cycle,PWM_control@value
  1671   0024A4  C0D0  F002         	movff	main@pwm_duty_cycle+1,PWM_control@value+1
  1672   0024A8  EC0A  F015         	call	_PWM_control	;wreg free
  1673   0024AC                     
  1674                           ;main.c: 123:         lcd_set_cursor(1, 0);
  1675   0024AC  0E00               	movlw	0
  1676   0024AE  6E03               	movwf	lcd_set_cursor@col^0,c
  1677   0024B0  0E01               	movlw	1
  1678   0024B2  EC6B  F016         	call	_lcd_set_cursor
  1679   0024B6                     
  1680                           ;main.c: 124:         lcd_string("TEM: ");
  1681   0024B6  0E0E               	movlw	low STR_2
  1682   0024B8  6E03               	movwf	lcd_string@str^0,c
  1683   0024BA  5003               	movf	lcd_string@str^0,w,c
  1684   0024BC  A4D8               	btfss	status,2,c
  1685   0024BE  0E06               	movlw	high __smallconst
  1686   0024C0  6E04               	movwf	(lcd_string@str+1)^0,c
  1687   0024C2  EC85  F014         	call	_lcd_string	;wreg free
  1688   0024C6                     
  1689                           ;main.c: 125:         sprintf(buffer, "%.2f", lm35_value);
  1690   0024C6  0EB7               	movlw	low main@buffer
  1691   0024C8  0100               	movlb	0	; () banked
  1692   0024CA  6FAF               	movwf	sprintf@s& (0+255),b
  1693   0024CC  0E14               	movlw	low STR_3
  1694   0024CE  6FB0               	movwf	sprintf@fmt& (0+255),b
  1695   0024D0  C0C9  F0B1         	movff	main@lm35_value,?_sprintf+2
  1696   0024D4  C0CA  F0B2         	movff	main@lm35_value+1,?_sprintf+3
  1697   0024D8  C0CB  F0B3         	movff	main@lm35_value+2,?_sprintf+4
  1698   0024DC  C0CC  F0B4         	movff	main@lm35_value+3,?_sprintf+5
  1699   0024E0  ECFE  F015         	call	_sprintf	;wreg free
  1700   0024E4                     
  1701                           ;main.c: 126:         lcd_string(buffer);
  1702   0024E4  0EB7               	movlw	low main@buffer
  1703   0024E6  6E03               	movwf	lcd_string@str^0,c
  1704   0024E8  6A04               	clrf	(lcd_string@str+1)^0,c
  1705   0024EA  EC85  F014         	call	_lcd_string	;wreg free
  1706   0024EE                     
  1707                           ;main.c: 128:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1708   0024EE  0E03               	movlw	3
  1709   0024F0  0100               	movlb	0	; () banked
  1710   0024F2  6FB6               	movwf	(??_main+1)& (0+255),b
  1711   0024F4  0E08               	movlw	8
  1712   0024F6  6FB5               	movwf	??_main& (0+255),b
  1713   0024F8  0E77               	movlw	119
  1714   0024FA                     u3847:
  1715   0024FA  2EE8               	decfsz	wreg,f,c
  1716   0024FC  D7FE               	bra	u3847
  1717   0024FE  2FB5               	decfsz	??_main& (0+255),f,b
  1718   002500  D7FC               	bra	u3847
  1719   002502  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1720   002504  D7FA               	bra	u3847
  1721   002506  EF2A  F012         	goto	l3466
  1722   00250A  EFFE  F03F         	goto	start
  1723   00250E                     __end_of_main:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _sprintf *****************
  1727 ;; Defined at:
  1728 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  s               1   47[BANK0 ] PTR unsigned char 
  1731 ;;		 -> main@buffer(16), 
  1732 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1733 ;;		 -> STR_3(5), 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  f              11  104[COMRAM] struct _IO_FILE
  1736 ;;  ret             2    0        int 
  1737 ;;  ap              1  103[COMRAM] PTR void [1]
  1738 ;;		 -> ?_sprintf(2), 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2   47[BANK0 ] int 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1748 ;;      Params:         0       6       0       0       0       0       0
  1749 ;;      Locals:        12       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0
  1751 ;;      Totals:        12       6       0       0       0       0       0
  1752 ;;Total ram usage:       18 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 7
  1755 ;; This function calls:
  1756 ;;		_vfprintf
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text1
  1763   002BFC                     __ptext1:
  1764                           	callstack 0
  1765   002BFC                     _sprintf:
  1766                           	callstack 23
  1767   002BFC  0EB1               	movlw	low (?_sprintf+2)
  1768   002BFE  6E68               	movwf	sprintf@ap^0,c
  1769   002C00  C0AF  F069         	movff	sprintf@s,sprintf@f
  1770   002C04  0E00               	movlw	0
  1771   002C06  6E6C               	movwf	(sprintf@f+3)^0,c
  1772   002C08  0E00               	movlw	0
  1773   002C0A  6E6B               	movwf	(sprintf@f+2)^0,c
  1774   002C0C  0E00               	movlw	0
  1775   002C0E  6E73               	movwf	(sprintf@f+10)^0,c
  1776   002C10  0E00               	movlw	0
  1777   002C12  6E72               	movwf	(sprintf@f+9)^0,c
  1778   002C14  0E69               	movlw	low sprintf@f
  1779   002C16  0100               	movlb	0	; () banked
  1780   002C18  6FAC               	movwf	vfprintf@fp& (0+255),b
  1781   002C1A  C0B0  F0AD         	movff	sprintf@fmt,vfprintf@fmt
  1782   002C1E  0E68               	movlw	low sprintf@ap
  1783   002C20  6FAE               	movwf	vfprintf@ap& (0+255),b
  1784   002C22  ECA1  F015         	call	_vfprintf	;wreg free
  1785   002C26  0100               	movlb	0	; () banked
  1786   002C28  51AF               	movf	sprintf@s& (0+255),w,b
  1787   002C2A  246B               	addwf	(sprintf@f+2)^0,w,c
  1788   002C2C  6ED9               	movwf	fsr2l,c
  1789   002C2E  6ADA               	clrf	fsr2h,c
  1790   002C30  6ADF               	clrf	indf2,c
  1791   002C32                     
  1792                           ; BSR set to: 0
  1793   002C32  0012               	return		;funcret
  1794   002C34                     __end_of_sprintf:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _vfprintf *****************
  1798 ;; Defined at:
  1799 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  1802 ;;		 -> sprintf@f(11), 
  1803 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1804 ;;		 -> STR_3(5), 
  1805 ;;  ap              1   46[BANK0 ] PTR PTR void 
  1806 ;;		 -> sprintf@ap(1), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  cfmt            1  102[COMRAM] PTR unsigned char 
  1809 ;;		 -> STR_3(5), 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2   44[BANK0 ] int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1819 ;;      Params:         0       3       0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0
  1822 ;;      Totals:         1       3       0       0       0       0       0
  1823 ;;Total ram usage:        4 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 6
  1826 ;; This function calls:
  1827 ;;		_vfpfcnvrt
  1828 ;; This function is called by:
  1829 ;;		_sprintf
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text2
  1834   002B42                     __ptext2:
  1835                           	callstack 0
  1836   002B42                     _vfprintf:
  1837                           	callstack 23
  1838   002B42                     
  1839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1840   002B42  C0AD  F067         	movff	vfprintf@fmt,vfprintf@cfmt
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1843   002B46  EFAD  F015         	goto	l3326
  1844   002B4A                     l3324:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1847   002B4A  C0AC  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1848   002B4E  0E67               	movlw	low vfprintf@cfmt
  1849   002B50  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  1850   002B52  C0AE  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1851   002B56  EC42  F00F         	call	_vfpfcnvrt	;wreg free
  1852   002B5A                     l3326:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1855   002B5A  C067  FFF6         	movff	vfprintf@cfmt,tblptrl
  1856   002B5E                     	if	1	;There is more than 1 active tblptr byte
  1857   002B5E  0E06               	movlw	high __smallconst
  1858   002B60  6EF7               	movwf	tblptrh,c
  1859   002B62                     	endif
  1860   002B62                     	if	0	;tblptru may be non-zero
  1861   002B62                     	endif
  1862   002B62                     	if	0	;tblptru may be non-zero
  1863   002B62                     	endif
  1864   002B62  0008               	tblrd		*
  1865   002B64  50F5               	movf	tablat,w,c
  1866   002B66  0900               	iorlw	0
  1867   002B68  A4D8               	btfss	status,2,c
  1868   002B6A  EFB9  F015         	goto	u3731
  1869   002B6E  EFBB  F015         	goto	u3730
  1870   002B72                     u3731:
  1871   002B72  EFA5  F015         	goto	l3324
  1872   002B76                     u3730:
  1873   002B76                     
  1874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1875   002B76  0E00               	movlw	0
  1876   002B78  0100               	movlb	0	; () banked
  1877   002B7A  6FAD               	movwf	(?_vfprintf+1)& (0+255),b
  1878   002B7C  0E00               	movlw	0
  1879   002B7E  6FAC               	movwf	?_vfprintf& (0+255),b
  1880   002B80                     
  1881                           ; BSR set to: 0
  1882   002B80  0012               	return		;funcret
  1883   002B82                     __end_of_vfprintf:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _vfpfcnvrt *****************
  1887 ;; Defined at:
  1888 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  1891 ;;		 -> sprintf@f(11), 
  1892 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  1893 ;;		 -> vfprintf@cfmt(1), 
  1894 ;;  ap              1   94[COMRAM] PTR PTR void 
  1895 ;;		 -> sprintf@ap(1), 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  convarg         4   96[COMRAM] struct .
  1898 ;;  cp              1  101[COMRAM] PTR unsigned char 
  1899 ;;		 -> STR_3(5), 
  1900 ;;  c               1  100[COMRAM] unsigned char 
  1901 ;;  done            1    0        _Bool 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1911 ;;      Params:         3       0       0       0       0       0       0
  1912 ;;      Locals:         6       0       0       0       0       0       0
  1913 ;;      Temps:          1       0       0       0       0       0       0
  1914 ;;      Totals:        10       0       0       0       0       0       0
  1915 ;;Total ram usage:       10 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 5
  1918 ;; This function calls:
  1919 ;;		_efgtoa
  1920 ;;		_fputc
  1921 ;;		_read_prec_or_width
  1922 ;; This function is called by:
  1923 ;;		_vfprintf
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text3
  1928   001E84                     __ptext3:
  1929                           	callstack 0
  1930   001E84                     _vfpfcnvrt:
  1931                           	callstack 23
  1932   001E84                     
  1933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1934   001E84  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1935   001E86  6ED9               	movwf	fsr2l,c
  1936   001E88  6ADA               	clrf	fsr2h,c
  1937   001E8A  CFDF FFF6          	movff	indf2,tblptrl
  1938   001E8E                     	if	1	;There is more than 1 active tblptr byte
  1939   001E8E  0E06               	movlw	high __smallconst
  1940   001E90  6EF7               	movwf	tblptrh,c
  1941   001E92                     	endif
  1942   001E92                     	if	0	;tblptru may be non-zero
  1943   001E92                     	endif
  1944   001E92                     	if	0	;tblptru may be non-zero
  1945   001E92                     	endif
  1946   001E92  0008               	tblrd		*
  1947   001E94  50F5               	movf	tablat,w,c
  1948   001E96  0A25               	xorlw	37
  1949   001E98  A4D8               	btfss	status,2,c
  1950   001E9A  EF51  F00F         	goto	u3601
  1951   001E9E  EF53  F00F         	goto	u3600
  1952   001EA2                     u3601:
  1953   001EA2  EF17  F010         	goto	l3258
  1954   001EA6                     u3600:
  1955   001EA6                     
  1956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1957   001EA6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1958   001EA8  6ED9               	movwf	fsr2l,c
  1959   001EAA  6ADA               	clrf	fsr2h,c
  1960   001EAC  2ADF               	incf	indf2,f,c
  1961   001EAE                     
  1962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1963   001EAE  0E00               	movlw	0
  1964   001EB0  0100               	movlb	0	; () banked
  1965   001EB2  6FD2               	movwf	(_width+1)& (0+255),b
  1966   001EB4  0E00               	movlw	0
  1967   001EB6  6FD1               	movwf	_width& (0+255),b
  1968   001EB8  C0D1  F07C         	movff	_width,_flags
  1969   001EBC                     
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1972   001EBC  69D3               	setf	_prec& (0+255),b
  1973   001EBE  69D4               	setf	(_prec+1)& (0+255),b
  1974   001EC0                     
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1977   001EC0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1978   001EC2  6ED9               	movwf	fsr2l,c
  1979   001EC4  6ADA               	clrf	fsr2h,c
  1980   001EC6  CFDF FFF6          	movff	indf2,tblptrl
  1981   001ECA                     	if	1	;There is more than 1 active tblptr byte
  1982   001ECA  0E06               	movlw	high __smallconst
  1983   001ECC  6EF7               	movwf	tblptrh,c
  1984   001ECE                     	endif
  1985   001ECE                     	if	0	;tblptru may be non-zero
  1986   001ECE                     	endif
  1987   001ECE                     	if	0	;tblptru may be non-zero
  1988   001ECE                     	endif
  1989   001ECE  0008               	tblrd		*
  1990   001ED0  50F5               	movf	tablat,w,c
  1991   001ED2  0A2E               	xorlw	46
  1992   001ED4  A4D8               	btfss	status,2,c
  1993   001ED6  EF6F  F00F         	goto	u3611
  1994   001EDA  EF71  F00F         	goto	u3610
  1995   001EDE                     u3611:
  1996   001EDE  EF7F  F00F         	goto	l3222
  1997   001EE2                     u3610:
  1998   001EE2                     
  1999                           ; BSR set to: 0
  2000                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2001   001EE2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2002   001EE4  6ED9               	movwf	fsr2l,c
  2003   001EE6  6ADA               	clrf	fsr2h,c
  2004   001EE8  2ADF               	incf	indf2,f,c
  2005   001EEA                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2008   001EEA  C05E  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2009   001EEE  C05F  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2010   001EF2  ECB0  F013         	call	_read_prec_or_width	;wreg free
  2011   001EF6  C001  F0D3         	movff	?_read_prec_or_width,_prec
  2012   001EFA  C002  F0D4         	movff	?_read_prec_or_width+1,_prec+1
  2013   001EFE                     l3222:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2016   001EFE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2017   001F00  6ED9               	movwf	fsr2l,c
  2018   001F02  6ADA               	clrf	fsr2h,c
  2019   001F04  50DF               	movf	indf2,w,c
  2020   001F06  6E66               	movwf	vfpfcnvrt@cp^0,c
  2021   001F08                     
  2022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2023   001F08  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2024   001F0C                     	if	1	;There is more than 1 active tblptr byte
  2025   001F0C  0E06               	movlw	high __smallconst
  2026   001F0E  6EF7               	movwf	tblptrh,c
  2027   001F10                     	endif
  2028   001F10                     	if	0	;tblptru may be non-zero
  2029   001F10                     	endif
  2030   001F10                     	if	0	;tblptru may be non-zero
  2031   001F10                     	endif
  2032   001F10  0008               	tblrd		*
  2033   001F12  CFF5 F065          	movff	tablat,vfpfcnvrt@c
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2036   001F16  EF97  F00F         	goto	l3232
  2037   001F1A                     l3226:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2040   001F1A  2A66               	incf	vfpfcnvrt@cp^0,f,c
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2043   001F1C  EFA6  F00F         	goto	l3234
  2044   001F20                     l3228:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2047   001F20  0E6C               	movlw	108
  2048   001F22  6E65               	movwf	vfpfcnvrt@c^0,c
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2051   001F24  EFA6  F00F         	goto	l3234
  2052   001F28                     l961:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2055   001F28  6A65               	clrf	vfpfcnvrt@c^0,c
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2058   001F2A  EFA6  F00F         	goto	l3234
  2059   001F2E                     l3232:
  2060   001F2E  5065               	movf	vfpfcnvrt@c^0,w,c
  2061                           
  2062                           ; Switch size 1, requested type "simple"
  2063                           ; Number of cases is 3, Range of values is 76 to 108
  2064                           ; switch strategies available:
  2065                           ; Name         Instructions Cycles
  2066                           ; simple_byte           10     6 (average)
  2067                           ;	Chosen strategy is simple_byte
  2068   001F30  0A4C               	xorlw	76	; case 76
  2069   001F32  B4D8               	btfsc	status,2,c
  2070   001F34  EF8D  F00F         	goto	l3226
  2071   001F38  0A2A               	xorlw	42	; case 102
  2072   001F3A  B4D8               	btfsc	status,2,c
  2073   001F3C  EF90  F00F         	goto	l3228
  2074   001F40  0A0A               	xorlw	10	; case 108
  2075   001F42  B4D8               	btfsc	status,2,c
  2076   001F44  EF8D  F00F         	goto	l3226
  2077   001F48  EF94  F00F         	goto	l961
  2078   001F4C                     l3234:
  2079   001F4C  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2080   001F50                     	if	1	;There is more than 1 active tblptr byte
  2081   001F50  0E06               	movlw	high __smallconst
  2082   001F52  6EF7               	movwf	tblptrh,c
  2083   001F54                     	endif
  2084   001F54                     	if	0	;tblptru may be non-zero
  2085   001F54                     	endif
  2086   001F54                     	if	0	;tblptru may be non-zero
  2087   001F54                     	endif
  2088   001F54  0008               	tblrd		*
  2089   001F56  50F5               	movf	tablat,w,c
  2090   001F58  0A66               	xorlw	102
  2091   001F5A  A4D8               	btfss	status,2,c
  2092   001F5C  EFB2  F00F         	goto	u3621
  2093   001F60  EFB4  F00F         	goto	u3620
  2094   001F64                     u3621:
  2095   001F64  EF11  F010         	goto	l3254
  2096   001F68                     u3620:
  2097   001F68  EFDE  F00F         	goto	l3242
  2098   001F6C                     l3236:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2101   001F6C  505F               	movf	vfpfcnvrt@ap^0,w,c
  2102   001F6E  6ED9               	movwf	fsr2l,c
  2103   001F70  6ADA               	clrf	fsr2h,c
  2104   001F72  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2105   001F76  0E04               	movlw	4
  2106   001F78  26DF               	addwf	indf2,f,c
  2107   001F7A  5060               	movf	??_vfpfcnvrt^0,w,c
  2108   001F7C  6ED9               	movwf	fsr2l,c
  2109   001F7E  6ADA               	clrf	fsr2h,c
  2110   001F80  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  2111   001F84  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  2112   001F88  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+2
  2113   001F8C  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+3
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2116   001F90  EFE9  F00F         	goto	l3244
  2117   001F94                     l3238:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2120   001F94  505F               	movf	vfpfcnvrt@ap^0,w,c
  2121   001F96  6ED9               	movwf	fsr2l,c
  2122   001F98  6ADA               	clrf	fsr2h,c
  2123   001F9A  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2124   001F9E  0E04               	movlw	4
  2125   001FA0  26DF               	addwf	indf2,f,c
  2126   001FA2  5060               	movf	??_vfpfcnvrt^0,w,c
  2127   001FA4  6ED9               	movwf	fsr2l,c
  2128   001FA6  6ADA               	clrf	fsr2h,c
  2129   001FA8  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  2130   001FAC  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  2131   001FB0  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+2
  2132   001FB4  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+3
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2135   001FB8  EFE9  F00F         	goto	l3244
  2136   001FBC                     l3242:
  2137   001FBC  5065               	movf	vfpfcnvrt@c^0,w,c
  2138                           
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 2, Range of values is 76 to 108
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            7     4 (average)
  2144                           ;	Chosen strategy is simple_byte
  2145   001FBE  0A4C               	xorlw	76	; case 76
  2146   001FC0  B4D8               	btfsc	status,2,c
  2147   001FC2  EFCA  F00F         	goto	l3238
  2148   001FC6  0A20               	xorlw	32	; case 108
  2149   001FC8  B4D8               	btfsc	status,2,c
  2150   001FCA  EFB6  F00F         	goto	l3236
  2151   001FCE  EFE9  F00F         	goto	l3244
  2152   001FD2                     l3244:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2155   001FD2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2156   001FD4  6ED9               	movwf	fsr2l,c
  2157   001FD6  6ADA               	clrf	fsr2h,c
  2158   001FD8  2866               	incf	vfpfcnvrt@cp^0,w,c
  2159   001FDA  6EDF               	movwf	indf2,c
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2162   001FDC  EF05  F010         	goto	l3252
  2163   001FE0                     l3246:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2166   001FE0  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2167   001FE4  C061  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  2168   001FE8  C062  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2169   001FEC  C063  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2170   001FF0  C064  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2171   001FF4  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2172   001FF8                     	if	1	;There is more than 1 active tblptr byte
  2173   001FF8  0E06               	movlw	high __smallconst
  2174   001FFA  6EF7               	movwf	tblptrh,c
  2175   001FFC                     	endif
  2176   001FFC                     	if	0	;tblptru may be non-zero
  2177   001FFC                     	endif
  2178   001FFC                     	if	0	;tblptru may be non-zero
  2179   001FFC                     	endif
  2180   001FFC  0008               	tblrd		*
  2181   001FFE  CFF5 F05A          	movff	tablat,efgtoa@c
  2182   002002  EC11  F003         	call	_efgtoa	;wreg free
  2183   002006  EF28  F010         	goto	l971
  2184   00200A                     l3252:
  2185   00200A  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2186   00200E                     	if	1	;There is more than 1 active tblptr byte
  2187   00200E  0E06               	movlw	high __smallconst
  2188   002010  6EF7               	movwf	tblptrh,c
  2189   002012                     	endif
  2190   002012                     	if	0	;tblptru may be non-zero
  2191   002012                     	endif
  2192   002012                     	if	0	;tblptru may be non-zero
  2193   002012                     	endif
  2194   002012  0008               	tblrd		*
  2195   002014  50F5               	movf	tablat,w,c
  2196                           
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 1, Range of values is 102 to 102
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte            4     3 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203   002016  0A66               	xorlw	102	; case 102
  2204   002018  B4D8               	btfsc	status,2,c
  2205   00201A  EFF0  F00F         	goto	l3246
  2206   00201E  EF11  F010         	goto	l3254
  2207   002022                     l3254:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2210   002022  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2211   002024  6ED9               	movwf	fsr2l,c
  2212   002026  6ADA               	clrf	fsr2h,c
  2213   002028  2ADF               	incf	indf2,f,c
  2214   00202A  EF28  F010         	goto	l971
  2215   00202E                     l3258:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2218   00202E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2219   002030  6ED9               	movwf	fsr2l,c
  2220   002032  6ADA               	clrf	fsr2h,c
  2221   002034  CFDF FFF6          	movff	indf2,tblptrl
  2222   002038                     	if	1	;There is more than 1 active tblptr byte
  2223   002038  0E06               	movlw	high __smallconst
  2224   00203A  6EF7               	movwf	tblptrh,c
  2225   00203C                     	endif
  2226   00203C                     	if	0	;tblptru may be non-zero
  2227   00203C                     	endif
  2228   00203C                     	if	0	;tblptru may be non-zero
  2229   00203C                     	endif
  2230   00203C  0008               	tblrd		*
  2231   00203E  50F5               	movf	tablat,w,c
  2232   002040  6E01               	movwf	fputc@c^0,c
  2233   002042  6A02               	clrf	(fputc@c+1)^0,c
  2234   002044  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2235   002048  EC06  F013         	call	_fputc	;wreg free
  2236   00204C  EF11  F010         	goto	l3254
  2237   002050                     l971:
  2238   002050  0012               	return		;funcret
  2239   002052                     __end_of_vfpfcnvrt:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _read_prec_or_width *****************
  2243 ;; Defined at:
  2244 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2247 ;;		 -> vfprintf@cfmt(1), 
  2248 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2249 ;;		 -> sprintf@ap(1), 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  c               1    4[COMRAM] unsigned char 
  2252 ;;  n               2    5[COMRAM] int 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2    0[COMRAM] int 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2262 ;;      Params:         2       0       0       0       0       0       0
  2263 ;;      Locals:         3       0       0       0       0       0       0
  2264 ;;      Temps:          2       0       0       0       0       0       0
  2265 ;;      Totals:         7       0       0       0       0       0       0
  2266 ;;Total ram usage:        7 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_vfpfcnvrt
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text4
  2276   002760                     __ptext4:
  2277                           	callstack 0
  2278   002760                     _read_prec_or_width:
  2279                           	callstack 27
  2280   002760                     
  2281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2282   002760  0E00               	movlw	0
  2283   002762  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2284   002764  0E00               	movlw	0
  2285   002766  6E06               	movwf	read_prec_or_width@n^0,c
  2286   002768                     
  2287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2288   002768  5001               	movf	read_prec_or_width@fmt^0,w,c
  2289   00276A  6ED9               	movwf	fsr2l,c
  2290   00276C  6ADA               	clrf	fsr2h,c
  2291   00276E  CFDF FFF6          	movff	indf2,tblptrl
  2292   002772                     	if	1	;There is more than 1 active tblptr byte
  2293   002772  0E06               	movlw	high __smallconst
  2294   002774  6EF7               	movwf	tblptrh,c
  2295   002776                     	endif
  2296   002776                     	if	0	;tblptru may be non-zero
  2297   002776                     	endif
  2298   002776                     	if	0	;tblptru may be non-zero
  2299   002776                     	endif
  2300   002776  0008               	tblrd		*
  2301   002778  50F5               	movf	tablat,w,c
  2302   00277A  0A2A               	xorlw	42
  2303   00277C  A4D8               	btfss	status,2,c
  2304   00277E  EFC3  F013         	goto	u3581
  2305   002782  EFC5  F013         	goto	u3580
  2306   002786                     u3581:
  2307   002786  EFEA  F013         	goto	l3202
  2308   00278A                     u3580:
  2309   00278A                     
  2310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2311   00278A  5001               	movf	read_prec_or_width@fmt^0,w,c
  2312   00278C  6ED9               	movwf	fsr2l,c
  2313   00278E  6ADA               	clrf	fsr2h,c
  2314   002790  2ADF               	incf	indf2,f,c
  2315   002792                     
  2316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2317   002792  5002               	movf	read_prec_or_width@ap^0,w,c
  2318   002794  6ED9               	movwf	fsr2l,c
  2319   002796  6ADA               	clrf	fsr2h,c
  2320   002798  0E02               	movlw	2
  2321   00279A  26DF               	addwf	indf2,f,c
  2322   00279C  5CDF               	subwf	indf2,w,c
  2323   00279E  6ED9               	movwf	fsr2l,c
  2324   0027A0  6ADA               	clrf	fsr2h,c
  2325   0027A2  CFDE F006          	movff	postinc2,read_prec_or_width@n
  2326   0027A6  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2329   0027AA  EFFD  F013         	goto	l947
  2330   0027AE                     l3198:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2333   0027AE  0E0A               	movlw	10
  2334   0027B0  0206               	mulwf	read_prec_or_width@n^0,c
  2335   0027B2  CFF3 F003          	movff	prodl,??_read_prec_or_width
  2336   0027B6  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  2337   0027BA  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2338   0027BC  50F3               	movf	prodl,w,c
  2339   0027BE  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2340   0027C0  5005               	movf	read_prec_or_width@c^0,w,c
  2341   0027C2  2403               	addwf	??_read_prec_or_width^0,w,c
  2342   0027C4  6E06               	movwf	read_prec_or_width@n^0,c
  2343   0027C6  0E00               	movlw	0
  2344   0027C8  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2345   0027CA  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2346   0027CC                     
  2347                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2348   0027CC  5001               	movf	read_prec_or_width@fmt^0,w,c
  2349   0027CE  6ED9               	movwf	fsr2l,c
  2350   0027D0  6ADA               	clrf	fsr2h,c
  2351   0027D2  2ADF               	incf	indf2,f,c
  2352   0027D4                     l3202:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2355   0027D4  5001               	movf	read_prec_or_width@fmt^0,w,c
  2356   0027D6  6ED9               	movwf	fsr2l,c
  2357   0027D8  6ADA               	clrf	fsr2h,c
  2358   0027DA  CFDF FFF6          	movff	indf2,tblptrl
  2359   0027DE                     	if	1	;There is more than 1 active tblptr byte
  2360   0027DE  0E06               	movlw	high __smallconst
  2361   0027E0  6EF7               	movwf	tblptrh,c
  2362   0027E2                     	endif
  2363   0027E2                     	if	0	;tblptru may be non-zero
  2364   0027E2                     	endif
  2365   0027E2                     	if	0	;tblptru may be non-zero
  2366   0027E2                     	endif
  2367   0027E2  0008               	tblrd		*
  2368   0027E4  50F5               	movf	tablat,w,c
  2369   0027E6  0FD0               	addlw	208
  2370   0027E8  6E05               	movwf	read_prec_or_width@c^0,c
  2371   0027EA  0E09               	movlw	9
  2372   0027EC  6405               	cpfsgt	read_prec_or_width@c^0,c
  2373   0027EE  EFFB  F013         	goto	u3591
  2374   0027F2  EFFD  F013         	goto	u3590
  2375   0027F6                     u3591:
  2376   0027F6  EFD7  F013         	goto	l3198
  2377   0027FA                     u3590:
  2378   0027FA                     l947:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2381   0027FA  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2382   0027FE  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2383   002802  0012               	return		;funcret
  2384   002804                     __end_of_read_prec_or_width:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _efgtoa *****************
  2388 ;; Defined at:
  2389 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  2392 ;;		 -> sprintf@f(11), 
  2393 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  2394 ;;  c               1   89[COMRAM] unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  u               4   40[BANK0 ] struct flui
  2397 ;;  g               4   36[BANK0 ] struct flui
  2398 ;;  l               4   29[BANK0 ] struct flui
  2399 ;;  h               4   25[BANK0 ] struct flui
  2400 ;;  ou              4   19[BANK0 ] struct flui
  2401 ;;  n               2   34[BANK0 ] int 
  2402 ;;  i               2   23[BANK0 ] int 
  2403 ;;  w               2   17[BANK0 ] int 
  2404 ;;  e               2   15[BANK0 ] int 
  2405 ;;  m               2   13[BANK0 ] int 
  2406 ;;  d               2   11[BANK0 ] int 
  2407 ;;  t               2    4[BANK0 ] int 
  2408 ;;  p               2    2[BANK0 ] int 
  2409 ;;  ne              2    0[BANK0 ] int 
  2410 ;;  sign            1   33[BANK0 ] unsigned char 
  2411 ;;  nmode           1   10[BANK0 ] unsigned char 
  2412 ;;  mode            1    9[BANK0 ] unsigned char 
  2413 ;;  pp              1    8[BANK0 ] unsigned char 
  2414 ;;  esign           1    0        unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2424 ;;      Params:         6       0       0       0       0       0       0
  2425 ;;      Locals:         0      44       0       0       0       0       0
  2426 ;;      Temps:          2       0       0       0       0       0       0
  2427 ;;      Totals:         8      44       0       0       0       0       0
  2428 ;;Total ram usage:       52 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 4
  2431 ;; This function calls:
  2432 ;;		___fladd
  2433 ;;		___fldiv
  2434 ;;		___fleq
  2435 ;;		___flge
  2436 ;;		___flmul
  2437 ;;		___flneg
  2438 ;;		___flsub
  2439 ;;		___fltol
  2440 ;;		___fpclassifyf
  2441 ;;		_floorf
  2442 ;;		_labs
  2443 ;;		_memcpy
  2444 ;;		_pad
  2445 ;;		_strcpy
  2446 ;; This function is called by:
  2447 ;;		_vfpfcnvrt
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text5
  2452   000622                     __ptext5:
  2453                           	callstack 0
  2454   000622                     _efgtoa:
  2455                           	callstack 23
  2456   000622                     
  2457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2458   000622  0100               	movlb	0	; () banked
  2459   000624  6BA1               	clrf	efgtoa@sign& (0+255),b
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2462   000626  C056  F0A4         	movff	efgtoa@f,efgtoa@g
  2463   00062A  C057  F0A5         	movff	efgtoa@f+1,efgtoa@g+1
  2464   00062E  C058  F0A6         	movff	efgtoa@f+2,efgtoa@g+2
  2465   000632  C059  F0A7         	movff	efgtoa@f+3,efgtoa@g+3
  2466   000636                     
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2469   000636  BFA7               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2470   000638  EF22  F003         	goto	u3260
  2471   00063C  EF20  F003         	goto	u3261
  2472   000640                     u3261:
  2473   000640  EF36  F003         	goto	l2978
  2474   000644                     u3260:
  2475   000644                     
  2476                           ; BSR set to: 0
  2477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2478   000644  0E01               	movlw	1
  2479   000646  6FA1               	movwf	efgtoa@sign& (0+255),b
  2480   000648                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2483   000648  C0A4  F001         	movff	efgtoa@g,___flneg@f1
  2484   00064C  C0A5  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2485   000650  C0A6  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2486   000654  C0A7  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2487   000658  EC1A  F016         	call	___flneg	;wreg free
  2488   00065C  C001  F0A4         	movff	?___flneg,efgtoa@g
  2489   000660  C002  F0A5         	movff	?___flneg+1,efgtoa@g+1
  2490   000664  C003  F0A6         	movff	?___flneg+2,efgtoa@g+2
  2491   000668  C004  F0A7         	movff	?___flneg+3,efgtoa@g+3
  2492   00066C                     l2978:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2495   00066C  0E00               	movlw	0
  2496   00066E  0100               	movlb	0	; () banked
  2497   000670  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  2498   000672  0E00               	movlw	0
  2499   000674  6FA2               	movwf	efgtoa@n& (0+255),b
  2500   000676                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2503   000676  C0D1  F091         	movff	_width,efgtoa@w
  2504   00067A  C0D2  F092         	movff	_width+1,efgtoa@w+1
  2505   00067E                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2508   00067E  51A1               	movf	efgtoa@sign& (0+255),w,b
  2509   000680  B4D8               	btfsc	status,2,c
  2510   000682  EF45  F003         	goto	u3271
  2511   000686  EF47  F003         	goto	u3270
  2512   00068A                     u3271:
  2513   00068A  EF5B  F003         	goto	l2992
  2514   00068E                     u3270:
  2515   00068E                     
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2518   00068E  51A1               	movf	efgtoa@sign& (0+255),w,b
  2519   000690  A4D8               	btfss	status,2,c
  2520   000692  EF4D  F003         	goto	u3281
  2521   000696  EF4F  F003         	goto	u3280
  2522   00069A                     u3281:
  2523   00069A  EF55  F003         	goto	l2988
  2524   00069E                     u3280:
  2525   00069E                     
  2526                           ; BSR set to: 0
  2527   00069E  0E00               	movlw	0
  2528   0006A0  6F87               	movwf	(_efgtoa$1138+1)& (0+255),b
  2529   0006A2  0E2B               	movlw	43
  2530   0006A4  6F86               	movwf	_efgtoa$1138& (0+255),b
  2531   0006A6  EF59  F003         	goto	l2990
  2532   0006AA                     l2988:
  2533                           
  2534                           ; BSR set to: 0
  2535   0006AA  0E00               	movlw	0
  2536   0006AC  6F87               	movwf	(_efgtoa$1138+1)& (0+255),b
  2537   0006AE  0E2D               	movlw	45
  2538   0006B0  6F86               	movwf	_efgtoa$1138& (0+255),b
  2539   0006B2                     l2990:
  2540                           
  2541                           ; BSR set to: 0
  2542   0006B2  C086  F0A1         	movff	_efgtoa$1138,efgtoa@sign
  2543   0006B6                     l2992:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2547   0006B6  C0A4  F001         	movff	efgtoa@g,___fpclassifyf@x
  2548   0006BA  C0A5  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2549   0006BE  C0A6  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2550   0006C2  C0A7  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2551   0006C6  EC87  F012         	call	___fpclassifyf	;wreg free
  2552   0006CA  0401               	decf	?___fpclassifyf^0,w,c
  2553   0006CC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2554   0006CE  A4D8               	btfss	status,2,c
  2555   0006D0  EF6C  F003         	goto	u3291
  2556   0006D4  EF6E  F003         	goto	u3290
  2557   0006D8                     u3291:
  2558   0006D8  EF9D  F003         	goto	l3010
  2559   0006DC                     u3290:
  2560   0006DC                     
  2561                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2562   0006DC  0100               	movlb	0	; () banked
  2563   0006DE  51A1               	movf	efgtoa@sign& (0+255),w,b
  2564   0006E0  B4D8               	btfsc	status,2,c
  2565   0006E2  EF75  F003         	goto	u3301
  2566   0006E6  EF77  F003         	goto	u3300
  2567   0006EA                     u3301:
  2568   0006EA  EF80  F003         	goto	l3002
  2569   0006EE                     u3300:
  2570   0006EE                     
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2573   0006EE  C0A1  F100         	movff	efgtoa@sign,_dbuf
  2574   0006F2                     
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2577   0006F2  0791               	decf	efgtoa@w& (0+255),f,b
  2578   0006F4  A0D8               	btfss	status,0,c
  2579   0006F6  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  2580   0006F8                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2583   0006F8  0E00               	movlw	0
  2584   0006FA  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  2585   0006FC  0E01               	movlw	1
  2586   0006FE  6FA2               	movwf	efgtoa@n& (0+255),b
  2587   000700                     l3002:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2591   000700  0E00               	movlw	low _dbuf
  2592   000702  25A2               	addwf	efgtoa@n& (0+255),w,b
  2593   000704  6E01               	movwf	strcpy@dest^0,c
  2594   000706  0E01               	movlw	high _dbuf
  2595   000708  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2596   00070A  6E02               	movwf	(strcpy@dest+1)^0,c
  2597   00070C  0E19               	movlw	low STR_4
  2598   00070E  6E03               	movwf	strcpy@src^0,c
  2599   000710  ECE1  F015         	call	_strcpy	;wreg free
  2600   000714                     l3004:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2603   000714  0100               	movlb	0	; () banked
  2604   000716  0EFD               	movlw	253
  2605   000718  2791               	addwf	efgtoa@w& (0+255),f,b
  2606   00071A  0EFF               	movlw	255
  2607   00071C  2392               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2608   00071E                     
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2611   00071E  C055  F00F         	movff	efgtoa@fp,pad@fp
  2612   000722  0E00               	movlw	low _dbuf
  2613   000724  6E10               	movwf	pad@buf^0,c
  2614   000726  0E01               	movlw	high _dbuf
  2615   000728  6E11               	movwf	(pad@buf+1)^0,c
  2616   00072A  C091  F012         	movff	efgtoa@w,pad@p
  2617   00072E  C092  F013         	movff	efgtoa@w+1,pad@p+1
  2618   000732  EC52  F014         	call	_pad	;wreg free
  2619   000736  EF02  F008         	goto	l902
  2620   00073A                     l3010:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2623   00073A  C0A4  F001         	movff	efgtoa@g,___fpclassifyf@x
  2624   00073E  C0A5  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2625   000742  C0A6  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2626   000746  C0A7  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2627   00074A  EC87  F012         	call	___fpclassifyf	;wreg free
  2628   00074E  5001               	movf	?___fpclassifyf^0,w,c
  2629   000750  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2630   000752  A4D8               	btfss	status,2,c
  2631   000754  EFAE  F003         	goto	u3311
  2632   000758  EFB0  F003         	goto	u3310
  2633   00075C                     u3311:
  2634   00075C  EFCE  F003         	goto	l3028
  2635   000760                     u3310:
  2636   000760                     
  2637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2638   000760  0100               	movlb	0	; () banked
  2639   000762  51A1               	movf	efgtoa@sign& (0+255),w,b
  2640   000764  B4D8               	btfsc	status,2,c
  2641   000766  EFB7  F003         	goto	u3321
  2642   00076A  EFB9  F003         	goto	u3320
  2643   00076E                     u3321:
  2644   00076E  EFC2  F003         	goto	l3020
  2645   000772                     u3320:
  2646   000772                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2649   000772  C0A1  F100         	movff	efgtoa@sign,_dbuf
  2650   000776                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2653   000776  0791               	decf	efgtoa@w& (0+255),f,b
  2654   000778  A0D8               	btfss	status,0,c
  2655   00077A  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  2656   00077C                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2659   00077C  0E00               	movlw	0
  2660   00077E  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  2661   000780  0E01               	movlw	1
  2662   000782  6FA2               	movwf	efgtoa@n& (0+255),b
  2663   000784                     l3020:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2667   000784  0E00               	movlw	low _dbuf
  2668   000786  25A2               	addwf	efgtoa@n& (0+255),w,b
  2669   000788  6E01               	movwf	strcpy@dest^0,c
  2670   00078A  0E01               	movlw	high _dbuf
  2671   00078C  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2672   00078E  6E02               	movwf	(strcpy@dest+1)^0,c
  2673   000790  0E1D               	movlw	low STR_7
  2674   000792  6E03               	movwf	strcpy@src^0,c
  2675   000794  ECE1  F015         	call	_strcpy	;wreg free
  2676   000798  EF8A  F003         	goto	l3004
  2677   00079C                     l3028:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2680   00079C  0E00               	movlw	0
  2681   00079E  0100               	movlb	0	; () banked
  2682   0007A0  6FA8               	movwf	efgtoa@u& (0+255),b
  2683   0007A2  0E00               	movlw	0
  2684   0007A4  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  2685   0007A6  0E80               	movlw	128
  2686   0007A8  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  2687   0007AA  0E3F               	movlw	63
  2688   0007AC  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2691   0007AE  0E00               	movlw	0
  2692   0007B0  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2693   0007B2  0E00               	movlw	0
  2694   0007B4  6F8F               	movwf	efgtoa@e& (0+255),b
  2695   0007B6                     
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2698   0007B6  C0A4  F001         	movff	efgtoa@g,___fleq@ff1
  2699   0007BA  C0A5  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2700   0007BE  C0A6  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2701   0007C2  C0A7  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2702   0007C6  0E00               	movlw	0
  2703   0007C8  6E05               	movwf	___fleq@ff2^0,c
  2704   0007CA  0E00               	movlw	0
  2705   0007CC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2706   0007CE  0E00               	movlw	0
  2707   0007D0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2708   0007D2  0E00               	movlw	0
  2709   0007D4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2710   0007D6  EC5B  F013         	call	___fleq	;wreg free
  2711   0007DA  B0D8               	btfsc	status,0,c
  2712   0007DC  EFF2  F003         	goto	u3331
  2713   0007E0  EFF4  F003         	goto	u3330
  2714   0007E4                     u3331:
  2715   0007E4  EFD3  F004         	goto	l905
  2716   0007E8                     u3330:
  2717   0007E8  EF01  F004         	goto	l3036
  2718   0007EC                     l907:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2721   0007EC  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  2722   0007F0  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  2723   0007F4  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  2724   0007F8  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  2725   0007FC                     
  2726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2727   0007FC  0100               	movlb	0	; () banked
  2728   0007FE  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  2729   000800  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  2730   000802                     l3036:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2733   000802  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  2734   000806  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  2735   00080A  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  2736   00080E  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  2737   000812  0E00               	movlw	0
  2738   000814  6E13               	movwf	___flmul@a^0,c
  2739   000816  0E00               	movlw	0
  2740   000818  6E14               	movwf	(___flmul@a+1)^0,c
  2741   00081A  0E20               	movlw	32
  2742   00081C  6E15               	movwf	(___flmul@a+2)^0,c
  2743   00081E  0E41               	movlw	65
  2744   000820  6E16               	movwf	(___flmul@a+3)^0,c
  2745   000822  EC5E  F00A         	call	___flmul	;wreg free
  2746   000826  C00F  F093         	movff	?___flmul,efgtoa@ou
  2747   00082A  C010  F094         	movff	?___flmul+1,efgtoa@ou+1
  2748   00082E  C011  F095         	movff	?___flmul+2,efgtoa@ou+2
  2749   000832  C012  F096         	movff	?___flmul+3,efgtoa@ou+3
  2750   000836  0100               	movlb	0	; () banked
  2751   000838  5193               	movf	efgtoa@ou& (0+255),w,b
  2752   00083A  5DA4               	subwf	efgtoa@g& (0+255),w,b
  2753   00083C  6E01               	movwf	labs@a^0,c
  2754   00083E  5194               	movf	(efgtoa@ou+1)& (0+255),w,b
  2755   000840  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2756   000842  6E02               	movwf	(labs@a+1)^0,c
  2757   000844  5195               	movf	(efgtoa@ou+2)& (0+255),w,b
  2758   000846  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2759   000848  6E03               	movwf	(labs@a+2)^0,c
  2760   00084A  5196               	movf	(efgtoa@ou+3)& (0+255),w,b
  2761   00084C  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2762   00084E  6E04               	movwf	(labs@a+3)^0,c
  2763   000850  ECB4  F014         	call	_labs	;wreg free
  2764   000854  BE04               	btfsc	(?_labs+3)^0,7,c
  2765   000856  EF38  F004         	goto	u3341
  2766   00085A  5004               	movf	(?_labs+3)^0,w,c
  2767   00085C  1003               	iorwf	(?_labs+2)^0,w,c
  2768   00085E  1002               	iorwf	(?_labs+1)^0,w,c
  2769   000860  E109               	bnz	u3340
  2770   000862  0E02               	movlw	2
  2771   000864  5C01               	subwf	?_labs^0,w,c
  2772   000866  A0D8               	btfss	status,0,c
  2773   000868  EF38  F004         	goto	u3341
  2774   00086C  EF3A  F004         	goto	u3340
  2775   000870                     u3341:
  2776   000870  EFF6  F003         	goto	l907
  2777   000874                     u3340:
  2778   000874  C093  F028         	movff	efgtoa@ou,___flge@ff1
  2779   000878  C094  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2780   00087C  C095  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2781   000880  C096  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2782   000884  C0A4  F02C         	movff	efgtoa@g,___flge@ff2
  2783   000888  C0A5  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2784   00088C  C0A6  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2785   000890  C0A7  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2786   000894  EC86  F011         	call	___flge	;wreg free
  2787   000898  A0D8               	btfss	status,0,c
  2788   00089A  EF51  F004         	goto	u3351
  2789   00089E  EF53  F004         	goto	u3350
  2790   0008A2                     u3351:
  2791   0008A2  EFF6  F003         	goto	l907
  2792   0008A6                     u3350:
  2793   0008A6                     
  2794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2795   0008A6  0100               	movlb	0	; () banked
  2796   0008A8  51A8               	movf	efgtoa@u& (0+255),w,b
  2797   0008AA  5DA4               	subwf	efgtoa@g& (0+255),w,b
  2798   0008AC  6E01               	movwf	labs@a^0,c
  2799   0008AE  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  2800   0008B0  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2801   0008B2  6E02               	movwf	(labs@a+1)^0,c
  2802   0008B4  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  2803   0008B6  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2804   0008B8  6E03               	movwf	(labs@a+2)^0,c
  2805   0008BA  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  2806   0008BC  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2807   0008BE  6E04               	movwf	(labs@a+3)^0,c
  2808   0008C0  ECB4  F014         	call	_labs	;wreg free
  2809   0008C4  BE04               	btfsc	(?_labs+3)^0,7,c
  2810   0008C6  EF72  F004         	goto	u3360
  2811   0008CA  5004               	movf	(?_labs+3)^0,w,c
  2812   0008CC  1003               	iorwf	(?_labs+2)^0,w,c
  2813   0008CE  1002               	iorwf	(?_labs+1)^0,w,c
  2814   0008D0  E107               	bnz	u3361
  2815   0008D2  0E02               	movlw	2
  2816   0008D4  5C01               	subwf	?_labs^0,w,c
  2817   0008D6  B0D8               	btfsc	status,0,c
  2818   0008D8  EF70  F004         	goto	u3361
  2819   0008DC  EF72  F004         	goto	u3360
  2820   0008E0                     u3361:
  2821   0008E0  EFBA  F004         	goto	l3054
  2822   0008E4                     u3360:
  2823   0008E4                     l3044:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2826   0008E4  C0A8  F0A4         	movff	efgtoa@u,efgtoa@g
  2827   0008E8  C0A9  F0A5         	movff	efgtoa@u+1,efgtoa@g+1
  2828   0008EC  C0AA  F0A6         	movff	efgtoa@u+2,efgtoa@g+2
  2829   0008F0  C0AB  F0A7         	movff	efgtoa@u+3,efgtoa@g+3
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  2832   0008F4  EFD3  F004         	goto	l905
  2833   0008F8                     l3046:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2836   0008F8  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  2837   0008FC  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2838   000900  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2839   000904  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2840   000908  0E00               	movlw	0
  2841   00090A  6E2C               	movwf	___fldiv@a^0,c
  2842   00090C  0E00               	movlw	0
  2843   00090E  6E2D               	movwf	(___fldiv@a+1)^0,c
  2844   000910  0E20               	movlw	32
  2845   000912  6E2E               	movwf	(___fldiv@a+2)^0,c
  2846   000914  0E41               	movlw	65
  2847   000916  6E2F               	movwf	(___fldiv@a+3)^0,c
  2848   000918  EC71  F00C         	call	___fldiv	;wreg free
  2849   00091C  C028  F0A8         	movff	?___fldiv,efgtoa@u
  2850   000920  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  2851   000924  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  2852   000928  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  2853   00092C                     
  2854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  2855   00092C  0100               	movlb	0	; () banked
  2856   00092E  078F               	decf	efgtoa@e& (0+255),f,b
  2857   000930  A0D8               	btfss	status,0,c
  2858   000932  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  2859   000934                     
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2862   000934  51A8               	movf	efgtoa@u& (0+255),w,b
  2863   000936  5DA4               	subwf	efgtoa@g& (0+255),w,b
  2864   000938  6E01               	movwf	labs@a^0,c
  2865   00093A  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  2866   00093C  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2867   00093E  6E02               	movwf	(labs@a+1)^0,c
  2868   000940  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  2869   000942  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2870   000944  6E03               	movwf	(labs@a+2)^0,c
  2871   000946  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  2872   000948  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2873   00094A  6E04               	movwf	(labs@a+3)^0,c
  2874   00094C  ECB4  F014         	call	_labs	;wreg free
  2875   000950  BE04               	btfsc	(?_labs+3)^0,7,c
  2876   000952  EFB8  F004         	goto	u3370
  2877   000956  5004               	movf	(?_labs+3)^0,w,c
  2878   000958  1003               	iorwf	(?_labs+2)^0,w,c
  2879   00095A  1002               	iorwf	(?_labs+1)^0,w,c
  2880   00095C  E107               	bnz	u3371
  2881   00095E  0E02               	movlw	2
  2882   000960  5C01               	subwf	?_labs^0,w,c
  2883   000962  B0D8               	btfsc	status,0,c
  2884   000964  EFB6  F004         	goto	u3371
  2885   000968  EFB8  F004         	goto	u3370
  2886   00096C                     u3371:
  2887   00096C  EFBA  F004         	goto	l3054
  2888   000970                     u3370:
  2889   000970  EF72  F004         	goto	l3044
  2890   000974                     l3054:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2893   000974  C0A4  F028         	movff	efgtoa@g,___flge@ff1
  2894   000978  C0A5  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2895   00097C  C0A6  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2896   000980  C0A7  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2897   000984  C0A8  F02C         	movff	efgtoa@u,___flge@ff2
  2898   000988  C0A9  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2899   00098C  C0AA  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2900   000990  C0AB  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2901   000994  EC86  F011         	call	___flge	;wreg free
  2902   000998  A0D8               	btfss	status,0,c
  2903   00099A  EFD1  F004         	goto	u3381
  2904   00099E  EFD3  F004         	goto	u3380
  2905   0009A2                     u3381:
  2906   0009A2  EF7C  F004         	goto	l3046
  2907   0009A6                     u3380:
  2908   0009A6                     l905:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2911   0009A6  C05A  F089         	movff	efgtoa@c,efgtoa@mode
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2914   0009AA  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  2915   0009AE                     
  2916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2917   0009AE  0100               	movlb	0	; () banked
  2918   0009B0  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  2919   0009B2  EFDD  F004         	goto	u3391
  2920   0009B6  EFDF  F004         	goto	u3390
  2921   0009BA                     u3391:
  2922   0009BA  EFE5  F004         	goto	l3060
  2923   0009BE                     u3390:
  2924   0009BE                     
  2925                           ; BSR set to: 0
  2926   0009BE  C0D3  F082         	movff	_prec,efgtoa@p
  2927   0009C2  C0D4  F083         	movff	_prec+1,efgtoa@p+1
  2928   0009C6  EFE9  F004         	goto	l3062
  2929   0009CA                     l3060:
  2930                           
  2931                           ; BSR set to: 0
  2932   0009CA  0E00               	movlw	0
  2933   0009CC  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  2934   0009CE  0E06               	movlw	6
  2935   0009D0  6F82               	movwf	efgtoa@p& (0+255),b
  2936   0009D2                     l3062:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  2940   0009D2  C082  F08D         	movff	efgtoa@p,efgtoa@m
  2941   0009D6  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  2942   0009DA                     
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  2945   0009DA  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  2946   0009DC  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  2947   0009DE                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  2950   0009DE  0E66               	movlw	102
  2951   0009E0  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  2952   0009E2  A4D8               	btfss	status,2,c
  2953   0009E4  EFF6  F004         	goto	u3401
  2954   0009E8  EFF8  F004         	goto	u3400
  2955   0009EC                     u3401:
  2956   0009EC  EF18  F005         	goto	l3076
  2957   0009F0                     u3400:
  2958   0009F0                     
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  2961   0009F0  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2962   0009F2  EFFF  F004         	goto	u3410
  2963   0009F6  EFFD  F004         	goto	u3411
  2964   0009FA                     u3411:
  2965   0009FA  EF0B  F005         	goto	l3072
  2966   0009FE                     u3410:
  2967   0009FE                     
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  2970   0009FE  0E00               	movlw	0
  2971   000A00  6FA8               	movwf	efgtoa@u& (0+255),b
  2972   000A02  0E00               	movlw	0
  2973   000A04  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  2974   000A06  0E80               	movlw	128
  2975   000A08  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  2976   000A0A  0E3F               	movlw	63
  2977   000A0C  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  2980   000A0E  0E00               	movlw	0
  2981   000A10  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  2982   000A12  0E00               	movlw	0
  2983   000A14  6F8F               	movwf	efgtoa@e& (0+255),b
  2984   000A16                     l3072:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  2988   000A16  0E67               	movlw	103
  2989   000A18  1989               	xorwf	efgtoa@mode& (0+255),w,b
  2990   000A1A  B4D8               	btfsc	status,2,c
  2991   000A1C  EF12  F005         	goto	u3421
  2992   000A20  EF14  F005         	goto	u3420
  2993   000A24                     u3421:
  2994   000A24  EF18  F005         	goto	l3076
  2995   000A28                     u3420:
  2996   000A28                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  2999   000A28  518F               	movf	efgtoa@e& (0+255),w,b
  3000   000A2A  278D               	addwf	efgtoa@m& (0+255),f,b
  3001   000A2C  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  3002   000A2E  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3003   000A30                     l3076:
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3007   000A30  0E00               	movlw	0
  3008   000A32  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  3009   000A34  0E00               	movlw	0
  3010   000A36  6F97               	movwf	efgtoa@i& (0+255),b
  3011   000A38                     
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3014   000A38  C0A4  F099         	movff	efgtoa@g,efgtoa@h
  3015   000A3C  C0A5  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  3016   000A40  C0A6  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  3017   000A44  C0A7  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  3018   000A48                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3021   000A48  C0A8  F093         	movff	efgtoa@u,efgtoa@ou
  3022   000A4C  C0A9  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  3023   000A50  C0AA  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  3024   000A54  C0AB  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3027   000A58  EFA9  F005         	goto	l3090
  3028   000A5C                     l3082:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3032   000A5C  C099  F028         	movff	efgtoa@h,___fldiv@b
  3033   000A60  C09A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3034   000A64  C09B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3035   000A68  C09C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3036   000A6C  C0A8  F02C         	movff	efgtoa@u,___fldiv@a
  3037   000A70  C0A9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3038   000A74  C0AA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3039   000A78  C0AB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3040   000A7C  EC71  F00C         	call	___fldiv	;wreg free
  3041   000A80  C028  F041         	movff	?___fldiv,floorf@x
  3042   000A84  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3043   000A88  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3044   000A8C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3045   000A90  EC39  F00E         	call	_floorf	;wreg free
  3046   000A94  C041  F09D         	movff	?_floorf,efgtoa@l
  3047   000A98  C042  F09E         	movff	?_floorf+1,efgtoa@l+1
  3048   000A9C  C043  F09F         	movff	?_floorf+2,efgtoa@l+2
  3049   000AA0  C044  F0A0         	movff	?_floorf+3,efgtoa@l+3
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3052   000AA4  C09D  F001         	movff	efgtoa@l,___fltol@f1
  3053   000AA8  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3054   000AAC  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3055   000AB0  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3056   000AB4  EC03  F011         	call	___fltol	;wreg free
  3057   000AB8  C001  F08B         	movff	?___fltol,efgtoa@d
  3058   000ABC  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  3059   000AC0                     
  3060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3061   000AC0  C099  F028         	movff	efgtoa@h,___flsub@b
  3062   000AC4  C09A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3063   000AC8  C09B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3064   000ACC  C09C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3065   000AD0  C09D  F013         	movff	efgtoa@l,___flmul@a
  3066   000AD4  C09E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3067   000AD8  C09F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3068   000ADC  C0A0  F016         	movff	efgtoa@l+3,___flmul@a+3
  3069   000AE0  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3070   000AE4  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3071   000AE8  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3072   000AEC  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3073   000AF0  EC5E  F00A         	call	___flmul	;wreg free
  3074   000AF4  C00F  F02C         	movff	?___flmul,___flsub@a
  3075   000AF8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3076   000AFC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3077   000B00  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3078   000B04  EC5C  F015         	call	___flsub	;wreg free
  3079   000B08  C028  F099         	movff	?___flsub,efgtoa@h
  3080   000B0C  C029  F09A         	movff	?___flsub+1,efgtoa@h+1
  3081   000B10  C02A  F09B         	movff	?___flsub+2,efgtoa@h+2
  3082   000B14  C02B  F09C         	movff	?___flsub+3,efgtoa@h+3
  3083   000B18                     
  3084                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3085   000B18  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  3086   000B1C  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3087   000B20  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3088   000B24  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3089   000B28  0E00               	movlw	0
  3090   000B2A  6E2C               	movwf	___fldiv@a^0,c
  3091   000B2C  0E00               	movlw	0
  3092   000B2E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3093   000B30  0E20               	movlw	32
  3094   000B32  6E2E               	movwf	(___fldiv@a+2)^0,c
  3095   000B34  0E41               	movlw	65
  3096   000B36  6E2F               	movwf	(___fldiv@a+3)^0,c
  3097   000B38  EC71  F00C         	call	___fldiv	;wreg free
  3098   000B3C  C028  F0A8         	movff	?___fldiv,efgtoa@u
  3099   000B40  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  3100   000B44  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  3101   000B48  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  3102   000B4C                     
  3103                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3104   000B4C  0100               	movlb	0	; () banked
  3105   000B4E  4B97               	infsnz	efgtoa@i& (0+255),f,b
  3106   000B50  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  3107   000B52                     l3090:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3111   000B52  518D               	movf	efgtoa@m& (0+255),w,b
  3112   000B54  5D97               	subwf	efgtoa@i& (0+255),w,b
  3113   000B56  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  3114   000B58  0A80               	xorlw	128
  3115   000B5A  6E5B               	movwf	??_efgtoa^0,c
  3116   000B5C  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  3117   000B5E  0A80               	xorlw	128
  3118   000B60  585B               	subwfb	??_efgtoa^0,w,c
  3119   000B62  A0D8               	btfss	status,0,c
  3120   000B64  EFB6  F005         	goto	u3431
  3121   000B68  EFB8  F005         	goto	u3430
  3122   000B6C                     u3431:
  3123   000B6C  EF2E  F005         	goto	l3082
  3124   000B70                     u3430:
  3125   000B70                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3128   000B70  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3129   000B74  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3130   000B78  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3131   000B7C  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3132   000B80  0E00               	movlw	0
  3133   000B82  6E13               	movwf	___flmul@a^0,c
  3134   000B84  0E00               	movlw	0
  3135   000B86  6E14               	movwf	(___flmul@a+1)^0,c
  3136   000B88  0EA0               	movlw	160
  3137   000B8A  6E15               	movwf	(___flmul@a+2)^0,c
  3138   000B8C  0E40               	movlw	64
  3139   000B8E  6E16               	movwf	(___flmul@a+3)^0,c
  3140   000B90  EC5E  F00A         	call	___flmul	;wreg free
  3141   000B94  C00F  F09D         	movff	?___flmul,efgtoa@l
  3142   000B98  C010  F09E         	movff	?___flmul+1,efgtoa@l+1
  3143   000B9C  C011  F09F         	movff	?___flmul+2,efgtoa@l+2
  3144   000BA0  C012  F0A0         	movff	?___flmul+3,efgtoa@l+3
  3145   000BA4                     
  3146                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3147   000BA4  C099  F028         	movff	efgtoa@h,___flge@ff1
  3148   000BA8  C09A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3149   000BAC  C09B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3150   000BB0  C09C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3151   000BB4  C09D  F02C         	movff	efgtoa@l,___flge@ff2
  3152   000BB8  C09E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3153   000BBC  C09F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3154   000BC0  C0A0  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3155   000BC4  EC86  F011         	call	___flge	;wreg free
  3156   000BC8  B0D8               	btfsc	status,0,c
  3157   000BCA  EFE9  F005         	goto	u3441
  3158   000BCE  EFEB  F005         	goto	u3440
  3159   000BD2                     u3441:
  3160   000BD2  EFF6  F005         	goto	l3098
  3161   000BD6                     u3440:
  3162   000BD6                     
  3163                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3164   000BD6  0E00               	movlw	0
  3165   000BD8  0100               	movlb	0	; () banked
  3166   000BDA  6F9D               	movwf	efgtoa@l& (0+255),b
  3167   000BDC  0E00               	movlw	0
  3168   000BDE  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  3169   000BE0  0E00               	movlw	0
  3170   000BE2  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  3171   000BE4  0E00               	movlw	0
  3172   000BE6  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3175   000BE8  EF1F  F006         	goto	l3104
  3176   000BEC                     l3098:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3179   000BEC  C099  F001         	movff	efgtoa@h,___fleq@ff1
  3180   000BF0  C09A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3181   000BF4  C09B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3182   000BF8  C09C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3183   000BFC  C09D  F005         	movff	efgtoa@l,___fleq@ff2
  3184   000C00  C09E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3185   000C04  C09F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3186   000C08  C0A0  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3187   000C0C  EC5B  F013         	call	___fleq	;wreg free
  3188   000C10  A0D8               	btfss	status,0,c
  3189   000C12  EF0D  F006         	goto	u3451
  3190   000C16  EF0F  F006         	goto	u3450
  3191   000C1A                     u3451:
  3192   000C1A  EF1F  F006         	goto	l3104
  3193   000C1E                     u3450:
  3194   000C1E  0100               	movlb	0	; () banked
  3195   000C20  B18B               	btfsc	efgtoa@d& (0+255),0,b
  3196   000C22  EF15  F006         	goto	u3461
  3197   000C26  EF17  F006         	goto	u3460
  3198   000C2A                     u3461:
  3199   000C2A  EF1F  F006         	goto	l3104
  3200   000C2E                     u3460:
  3201   000C2E                     
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3204   000C2E  0E00               	movlw	0
  3205   000C30  6F9D               	movwf	efgtoa@l& (0+255),b
  3206   000C32  0E00               	movlw	0
  3207   000C34  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  3208   000C36  0E00               	movlw	0
  3209   000C38  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  3210   000C3A  0E00               	movlw	0
  3211   000C3C  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  3212   000C3E                     l3104:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3215   000C3E  C0A4  F001         	movff	efgtoa@g,___fladd@b
  3216   000C42  C0A5  F002         	movff	efgtoa@g+1,___fladd@b+1
  3217   000C46  C0A6  F003         	movff	efgtoa@g+2,___fladd@b+2
  3218   000C4A  C0A7  F004         	movff	efgtoa@g+3,___fladd@b+3
  3219   000C4E  C09D  F005         	movff	efgtoa@l,___fladd@a
  3220   000C52  C09E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3221   000C56  C09F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3222   000C5A  C0A0  F008         	movff	efgtoa@l+3,___fladd@a+3
  3223   000C5E  EC03  F008         	call	___fladd	;wreg free
  3224   000C62  C001  F099         	movff	?___fladd,efgtoa@h
  3225   000C66  C002  F09A         	movff	?___fladd+1,efgtoa@h+1
  3226   000C6A  C003  F09B         	movff	?___fladd+2,efgtoa@h+2
  3227   000C6E  C004  F09C         	movff	?___fladd+3,efgtoa@h+3
  3228   000C72                     
  3229                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3230   000C72  C099  F028         	movff	efgtoa@h,___flge@ff1
  3231   000C76  C09A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3232   000C7A  C09B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3233   000C7E  C09C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3234   000C82  0E00               	movlw	0
  3235   000C84  6E13               	movwf	___flmul@a^0,c
  3236   000C86  0E00               	movlw	0
  3237   000C88  6E14               	movwf	(___flmul@a+1)^0,c
  3238   000C8A  0E20               	movlw	32
  3239   000C8C  6E15               	movwf	(___flmul@a+2)^0,c
  3240   000C8E  0E41               	movlw	65
  3241   000C90  6E16               	movwf	(___flmul@a+3)^0,c
  3242   000C92  C093  F00F         	movff	efgtoa@ou,___flmul@b
  3243   000C96  C094  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3244   000C9A  C095  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3245   000C9E  C096  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3246   000CA2  EC5E  F00A         	call	___flmul	;wreg free
  3247   000CA6  C00F  F02C         	movff	?___flmul,___flge@ff2
  3248   000CAA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3249   000CAE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3250   000CB2  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3251   000CB6  EC86  F011         	call	___flge	;wreg free
  3252   000CBA  A0D8               	btfss	status,0,c
  3253   000CBC  EF62  F006         	goto	u3471
  3254   000CC0  EF64  F006         	goto	u3470
  3255   000CC4                     u3471:
  3256   000CC4  EF8D  F006         	goto	l3116
  3257   000CC8                     u3470:
  3258   000CC8                     
  3259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3260   000CC8  0100               	movlb	0	; () banked
  3261   000CCA  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  3262   000CCC  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  3263   000CCE                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3266   000CCE  C093  F00F         	movff	efgtoa@ou,___flmul@b
  3267   000CD2  C094  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3268   000CD6  C095  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3269   000CDA  C096  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3270   000CDE  0E00               	movlw	0
  3271   000CE0  6E13               	movwf	___flmul@a^0,c
  3272   000CE2  0E00               	movlw	0
  3273   000CE4  6E14               	movwf	(___flmul@a+1)^0,c
  3274   000CE6  0E20               	movlw	32
  3275   000CE8  6E15               	movwf	(___flmul@a+2)^0,c
  3276   000CEA  0E41               	movlw	65
  3277   000CEC  6E16               	movwf	(___flmul@a+3)^0,c
  3278   000CEE  EC5E  F00A         	call	___flmul	;wreg free
  3279   000CF2  C00F  F093         	movff	?___flmul,efgtoa@ou
  3280   000CF6  C010  F094         	movff	?___flmul+1,efgtoa@ou+1
  3281   000CFA  C011  F095         	movff	?___flmul+2,efgtoa@ou+2
  3282   000CFE  C012  F096         	movff	?___flmul+3,efgtoa@ou+3
  3283   000D02                     
  3284                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3285   000D02  0E66               	movlw	102
  3286   000D04  0100               	movlb	0	; () banked
  3287   000D06  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3288   000D08  A4D8               	btfss	status,2,c
  3289   000D0A  EF89  F006         	goto	u3481
  3290   000D0E  EF8B  F006         	goto	u3480
  3291   000D12                     u3481:
  3292   000D12  EF8D  F006         	goto	l3116
  3293   000D16                     u3480:
  3294   000D16                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3297   000D16  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  3298   000D18  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  3299   000D1A                     l3116:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3302   000D1A  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  3303   000D1E  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  3304   000D22  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  3305   000D26  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  3306   000D2A                     
  3307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3308   000D2A  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  3309   000D2E  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  3310   000D32                     
  3311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3312   000D32  0100               	movlb	0	; () banked
  3313   000D34  6B88               	clrf	efgtoa@pp& (0+255),b
  3314   000D36                     
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3317   000D36  0E00               	movlw	0
  3318   000D38  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  3319   000D3A  0E00               	movlw	0
  3320   000D3C  6F84               	movwf	efgtoa@t& (0+255),b
  3321   000D3E                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3324   000D3E  0E00               	movlw	0
  3325   000D40  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  3326   000D42  0E00               	movlw	0
  3327   000D44  6F97               	movwf	efgtoa@i& (0+255),b
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3330   000D46  EF8A  F007         	goto	l3166
  3331   000D4A                     l3126:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3335   000D4A  C099  F028         	movff	efgtoa@h,___fldiv@b
  3336   000D4E  C09A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3337   000D52  C09B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3338   000D56  C09C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3339   000D5A  C0A8  F02C         	movff	efgtoa@u,___fldiv@a
  3340   000D5E  C0A9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3341   000D62  C0AA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3342   000D66  C0AB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3343   000D6A  EC71  F00C         	call	___fldiv	;wreg free
  3344   000D6E  C028  F041         	movff	?___fldiv,floorf@x
  3345   000D72  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3346   000D76  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3347   000D7A  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3348   000D7E  EC39  F00E         	call	_floorf	;wreg free
  3349   000D82  C041  F09D         	movff	?_floorf,efgtoa@l
  3350   000D86  C042  F09E         	movff	?_floorf+1,efgtoa@l+1
  3351   000D8A  C043  F09F         	movff	?_floorf+2,efgtoa@l+2
  3352   000D8E  C044  F0A0         	movff	?_floorf+3,efgtoa@l+3
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3355   000D92  C09D  F001         	movff	efgtoa@l,___fltol@f1
  3356   000D96  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3357   000D9A  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3358   000D9E  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3359   000DA2  EC03  F011         	call	___fltol	;wreg free
  3360   000DA6  BE02               	btfsc	(?___fltol+1)^0,7,c
  3361   000DA8  EFE1  F006         	goto	u3490
  3362   000DAC  5002               	movf	(?___fltol+1)^0,w,c
  3363   000DAE  E107               	bnz	u3491
  3364   000DB0  0E0A               	movlw	10
  3365   000DB2  5C01               	subwf	?___fltol^0,w,c
  3366   000DB4  B0D8               	btfsc	status,0,c
  3367   000DB6  EFDF  F006         	goto	u3491
  3368   000DBA  EFE1  F006         	goto	u3490
  3369   000DBE                     u3491:
  3370   000DBE  EFF1  F006         	goto	l3130
  3371   000DC2                     u3490:
  3372   000DC2  C09D  F001         	movff	efgtoa@l,___fltol@f1
  3373   000DC6  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3374   000DCA  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3375   000DCE  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3376   000DD2  EC03  F011         	call	___fltol	;wreg free
  3377   000DD6  C001  F08B         	movff	?___fltol,efgtoa@d
  3378   000DDA  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  3379   000DDE  EFF6  F006         	goto	l935
  3380   000DE2                     l3130:
  3381   000DE2  0E00               	movlw	0
  3382   000DE4  0100               	movlb	0	; () banked
  3383   000DE6  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  3384   000DE8  0E09               	movlw	9
  3385   000DEA  6F8B               	movwf	efgtoa@d& (0+255),b
  3386   000DEC                     l935:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3389   000DEC  0100               	movlb	0	; () banked
  3390   000DEE  5188               	movf	efgtoa@pp& (0+255),w,b
  3391   000DF0  A4D8               	btfss	status,2,c
  3392   000DF2  EFFD  F006         	goto	u3501
  3393   000DF6  EFFF  F006         	goto	u3500
  3394   000DFA                     u3501:
  3395   000DFA  EF27  F007         	goto	l3150
  3396   000DFE                     u3500:
  3397   000DFE                     
  3398                           ; BSR set to: 0
  3399   000DFE  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3400   000E00  EF06  F007         	goto	u3510
  3401   000E04  EF04  F007         	goto	u3511
  3402   000E08                     u3511:
  3403   000E08  EF27  F007         	goto	l3150
  3404   000E0C                     u3510:
  3405   000E0C                     
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3408   000E0C  0E00               	movlw	low _dbuf
  3409   000E0E  25A2               	addwf	efgtoa@n& (0+255),w,b
  3410   000E10  6ED9               	movwf	fsr2l,c
  3411   000E12  0E01               	movlw	high _dbuf
  3412   000E14  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3413   000E16  6EDA               	movwf	fsr2h,c
  3414   000E18  0E2E               	movlw	46
  3415   000E1A  6EDF               	movwf	indf2,c
  3416   000E1C                     
  3417                           ; BSR set to: 0
  3418   000E1C  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3419   000E1E  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3420   000E20                     
  3421                           ; BSR set to: 0
  3422                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3423   000E20  0791               	decf	efgtoa@w& (0+255),f,b
  3424   000E22  A0D8               	btfss	status,0,c
  3425   000E24  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  3426   000E26                     
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3429   000E26  0E01               	movlw	1
  3430   000E28  6F88               	movwf	efgtoa@pp& (0+255),b
  3431   000E2A  EF27  F007         	goto	l3150
  3432   000E2E                     l3142:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3436   000E2E  0E00               	movlw	low _dbuf
  3437   000E30  25A2               	addwf	efgtoa@n& (0+255),w,b
  3438   000E32  6ED9               	movwf	fsr2l,c
  3439   000E34  0E01               	movlw	high _dbuf
  3440   000E36  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3441   000E38  6EDA               	movwf	fsr2h,c
  3442   000E3A  0E30               	movlw	48
  3443   000E3C  6EDF               	movwf	indf2,c
  3444   000E3E                     
  3445                           ; BSR set to: 0
  3446   000E3E  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3447   000E40  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3448   000E42                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3451   000E42  0791               	decf	efgtoa@w& (0+255),f,b
  3452   000E44  A0D8               	btfss	status,0,c
  3453   000E46  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  3454   000E48                     
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3457   000E48  0784               	decf	efgtoa@t& (0+255),f,b
  3458   000E4A  A0D8               	btfss	status,0,c
  3459   000E4C  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  3460   000E4E                     l3150:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3464   000E4E  5184               	movf	efgtoa@t& (0+255),w,b
  3465   000E50  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3466   000E52  A4D8               	btfss	status,2,c
  3467   000E54  EF2E  F007         	goto	u3521
  3468   000E58  EF30  F007         	goto	u3520
  3469   000E5C                     u3521:
  3470   000E5C  EF17  F007         	goto	l3142
  3471   000E60                     u3520:
  3472   000E60                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3475   000E60  0E00               	movlw	low _dbuf
  3476   000E62  25A2               	addwf	efgtoa@n& (0+255),w,b
  3477   000E64  6ED9               	movwf	fsr2l,c
  3478   000E66  0E01               	movlw	high _dbuf
  3479   000E68  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3480   000E6A  6EDA               	movwf	fsr2h,c
  3481   000E6C  518B               	movf	efgtoa@d& (0+255),w,b
  3482   000E6E  0F30               	addlw	48
  3483   000E70  6EDF               	movwf	indf2,c
  3484   000E72                     
  3485                           ; BSR set to: 0
  3486   000E72  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3487   000E74  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3488   000E76                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3491   000E76  0791               	decf	efgtoa@w& (0+255),f,b
  3492   000E78  A0D8               	btfss	status,0,c
  3493   000E7A  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  3494   000E7C                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3497   000E7C  C099  F028         	movff	efgtoa@h,___flsub@b
  3498   000E80  C09A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3499   000E84  C09B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3500   000E88  C09C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3501   000E8C  C09D  F013         	movff	efgtoa@l,___flmul@a
  3502   000E90  C09E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3503   000E94  C09F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3504   000E98  C0A0  F016         	movff	efgtoa@l+3,___flmul@a+3
  3505   000E9C  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3506   000EA0  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3507   000EA4  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3508   000EA8  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3509   000EAC  EC5E  F00A         	call	___flmul	;wreg free
  3510   000EB0  C00F  F02C         	movff	?___flmul,___flsub@a
  3511   000EB4  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3512   000EB8  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3513   000EBC  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3514   000EC0  EC5C  F015         	call	___flsub	;wreg free
  3515   000EC4  C028  F099         	movff	?___flsub,efgtoa@h
  3516   000EC8  C029  F09A         	movff	?___flsub+1,efgtoa@h+1
  3517   000ECC  C02A  F09B         	movff	?___flsub+2,efgtoa@h+2
  3518   000ED0  C02B  F09C         	movff	?___flsub+3,efgtoa@h+3
  3519   000ED4                     
  3520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3521   000ED4  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  3522   000ED8  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3523   000EDC  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3524   000EE0  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3525   000EE4  0E00               	movlw	0
  3526   000EE6  6E2C               	movwf	___fldiv@a^0,c
  3527   000EE8  0E00               	movlw	0
  3528   000EEA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3529   000EEC  0E20               	movlw	32
  3530   000EEE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3531   000EF0  0E41               	movlw	65
  3532   000EF2  6E2F               	movwf	(___fldiv@a+3)^0,c
  3533   000EF4  EC71  F00C         	call	___fldiv	;wreg free
  3534   000EF8  C028  F0A8         	movff	?___fldiv,efgtoa@u
  3535   000EFC  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  3536   000F00  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  3537   000F04  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  3538   000F08                     
  3539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3540   000F08  0100               	movlb	0	; () banked
  3541   000F0A  0780               	decf	efgtoa@ne& (0+255),f,b
  3542   000F0C  A0D8               	btfss	status,0,c
  3543   000F0E  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  3544   000F10                     
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3547   000F10  4B97               	infsnz	efgtoa@i& (0+255),f,b
  3548   000F12  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  3549   000F14                     l3166:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3553   000F14  518D               	movf	efgtoa@m& (0+255),w,b
  3554   000F16  5D97               	subwf	efgtoa@i& (0+255),w,b
  3555   000F18  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  3556   000F1A  0A80               	xorlw	128
  3557   000F1C  6E5B               	movwf	??_efgtoa^0,c
  3558   000F1E  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  3559   000F20  0A80               	xorlw	128
  3560   000F22  585B               	subwfb	??_efgtoa^0,w,c
  3561   000F24  B0D8               	btfsc	status,0,c
  3562   000F26  EF97  F007         	goto	u3531
  3563   000F2A  EF99  F007         	goto	u3530
  3564   000F2E                     u3531:
  3565   000F2E  EFA7  F007         	goto	l3170
  3566   000F32                     u3530:
  3567   000F32                     
  3568                           ; BSR set to: 0
  3569   000F32  BFA3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3570   000F34  EFA5  F007         	goto	u3541
  3571   000F38  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  3572   000F3A  E109               	bnz	u3540
  3573   000F3C  0E4B               	movlw	75
  3574   000F3E  5DA2               	subwf	efgtoa@n& (0+255),w,b
  3575   000F40  A0D8               	btfss	status,0,c
  3576   000F42  EFA5  F007         	goto	u3541
  3577   000F46  EFA7  F007         	goto	u3540
  3578   000F4A                     u3541:
  3579   000F4A  EFA5  F006         	goto	l3126
  3580   000F4E                     u3540:
  3581   000F4E                     l3170:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3585   000F4E  0E00               	movlw	0
  3586   000F50  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  3587   000F52  0E4F               	movlw	79
  3588   000F54  6F97               	movwf	efgtoa@i& (0+255),b
  3589   000F56                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3592   000F56  0E00               	movlw	low _dbuf
  3593   000F58  2597               	addwf	efgtoa@i& (0+255),w,b
  3594   000F5A  6ED9               	movwf	fsr2l,c
  3595   000F5C  0E01               	movlw	high _dbuf
  3596   000F5E  2198               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3597   000F60  6EDA               	movwf	fsr2h,c
  3598   000F62  6ADF               	clrf	indf2,c
  3599   000F64                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3602   000F64  0E00               	movlw	low _dbuf
  3603   000F66  6E5B               	movwf	??_efgtoa^0,c
  3604   000F68  0E01               	movlw	high _dbuf
  3605   000F6A  6E5C               	movwf	(??_efgtoa+1)^0,c
  3606   000F6C  51A2               	movf	efgtoa@n& (0+255),w,b
  3607   000F6E  5E5B               	subwf	??_efgtoa^0,f,c
  3608   000F70  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  3609   000F72  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  3610   000F74  5197               	movf	efgtoa@i& (0+255),w,b
  3611   000F76  245B               	addwf	??_efgtoa^0,w,c
  3612   000F78  6E01               	movwf	memcpy@d1^0,c
  3613   000F7A  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  3614   000F7C  205C               	addwfc	(??_efgtoa+1)^0,w,c
  3615   000F7E  6E02               	movwf	(memcpy@d1+1)^0,c
  3616   000F80  0E00               	movlw	low _dbuf
  3617   000F82  6E03               	movwf	memcpy@s1^0,c
  3618   000F84  0E01               	movlw	high _dbuf
  3619   000F86  6E04               	movwf	(memcpy@s1+1)^0,c
  3620   000F88  C0A2  F005         	movff	efgtoa@n,memcpy@n
  3621   000F8C  C0A3  F006         	movff	efgtoa@n+1,memcpy@n+1
  3622   000F90  EC34  F015         	call	_memcpy	;wreg free
  3623   000F94                     
  3624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3625   000F94  0100               	movlb	0	; () banked
  3626   000F96  51A2               	movf	efgtoa@n& (0+255),w,b
  3627   000F98  5D97               	subwf	efgtoa@i& (0+255),w,b
  3628   000F9A  6FA2               	movwf	efgtoa@n& (0+255),b
  3629   000F9C  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  3630   000F9E  5998               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3631   000FA0  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  3632   000FA2                     
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3635   000FA2  51A1               	movf	efgtoa@sign& (0+255),w,b
  3636   000FA4  A4D8               	btfss	status,2,c
  3637   000FA6  EFD7  F007         	goto	u3551
  3638   000FAA  EFDA  F007         	goto	u3550
  3639   000FAE                     u3551:
  3640   000FAE  0E01               	movlw	1
  3641   000FB0  EFDB  F007         	goto	u3560
  3642   000FB4                     u3550:
  3643   000FB4  0E00               	movlw	0
  3644   000FB6                     u3560:
  3645   000FB6  6F97               	movwf	efgtoa@i& (0+255),b
  3646   000FB8  6B98               	clrf	(efgtoa@i+1)& (0+255),b
  3647   000FBA                     
  3648                           ; BSR set to: 0
  3649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3650   000FBA  51A1               	movf	efgtoa@sign& (0+255),w,b
  3651   000FBC  B4D8               	btfsc	status,2,c
  3652   000FBE  EFE3  F007         	goto	u3571
  3653   000FC2  EFE5  F007         	goto	u3570
  3654   000FC6                     u3571:
  3655   000FC6  EFF0  F007         	goto	l3184
  3656   000FCA                     u3570:
  3657   000FCA                     
  3658                           ; BSR set to: 0
  3659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3660   000FCA  07A2               	decf	efgtoa@n& (0+255),f,b
  3661   000FCC  A0D8               	btfss	status,0,c
  3662   000FCE  07A3               	decf	(efgtoa@n+1)& (0+255),f,b
  3663   000FD0  0E00               	movlw	low _dbuf
  3664   000FD2  25A2               	addwf	efgtoa@n& (0+255),w,b
  3665   000FD4  6ED9               	movwf	fsr2l,c
  3666   000FD6  0E01               	movlw	high _dbuf
  3667   000FD8  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3668   000FDA  6EDA               	movwf	fsr2h,c
  3669   000FDC  C0A1  FFDF         	movff	efgtoa@sign,indf2
  3670   000FE0                     l3184:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3674   000FE0  5197               	movf	efgtoa@i& (0+255),w,b
  3675   000FE2  5F91               	subwf	efgtoa@w& (0+255),f,b
  3676   000FE4  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  3677   000FE6  5B92               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3678   000FE8                     
  3679                           ; BSR set to: 0
  3680                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3681   000FE8  C055  F00F         	movff	efgtoa@fp,pad@fp
  3682   000FEC  0E00               	movlw	low _dbuf
  3683   000FEE  25A2               	addwf	efgtoa@n& (0+255),w,b
  3684   000FF0  6E10               	movwf	pad@buf^0,c
  3685   000FF2  0E01               	movlw	high _dbuf
  3686   000FF4  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3687   000FF6  6E11               	movwf	(pad@buf+1)^0,c
  3688   000FF8  C091  F012         	movff	efgtoa@w,pad@p
  3689   000FFC  C092  F013         	movff	efgtoa@w+1,pad@p+1
  3690   001000  EC52  F014         	call	_pad	;wreg free
  3691   001004                     l902:
  3692   001004  0012               	return		;funcret
  3693   001006                     __end_of_efgtoa:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _strcpy *****************
  3697 ;; Defined at:
  3698 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3701 ;;		 -> dbuf(80), 
  3702 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3703 ;;		 -> STR_7(4), STR_4(4), 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  d               2    4[COMRAM] PTR unsigned char 
  3706 ;;		 -> dbuf(80), 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  2    0[COMRAM] PTR unsigned char 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3716 ;;      Params:         3       0       0       0       0       0       0
  3717 ;;      Locals:         2       0       0       0       0       0       0
  3718 ;;      Temps:          1       0       0       0       0       0       0
  3719 ;;      Totals:         6       0       0       0       0       0       0
  3720 ;;Total ram usage:        6 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_efgtoa
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text6
  3730   002BC2                     __ptext6:
  3731                           	callstack 0
  3732   002BC2                     _strcpy:
  3733                           	callstack 26
  3734   002BC2  C001  F005         	movff	strcpy@dest,strcpy@d
  3735   002BC6  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3736   002BCA                     l2920:
  3737   002BCA  2A03               	incf	strcpy@src^0,f,c
  3738   002BCC  0403               	decf	strcpy@src^0,w,c
  3739   002BCE  6E04               	movwf	??_strcpy^0,c
  3740   002BD0  C004  FFF6         	movff	??_strcpy,tblptrl
  3741   002BD4                     	if	1	;There is more than 1 active tblptr byte
  3742   002BD4  0E06               	movlw	high __smallconst
  3743   002BD6  6EF7               	movwf	tblptrh,c
  3744   002BD8                     	endif
  3745   002BD8                     	if	0	;tblptru may be non-zero
  3746   002BD8                     	endif
  3747   002BD8                     	if	0	;tblptru may be non-zero
  3748   002BD8                     	endif
  3749   002BD8  C005  FFD9         	movff	strcpy@d,fsr2l
  3750   002BDC  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3751   002BE0  4A05               	infsnz	strcpy@d^0,f,c
  3752   002BE2  2A06               	incf	(strcpy@d+1)^0,f,c
  3753   002BE4  0008               	tblrd		*
  3754   002BE6  CFF5 FFDF          	movff	tablat,indf2
  3755   002BEA  50DF               	movf	indf2,w,c
  3756   002BEC  A4D8               	btfss	status,2,c
  3757   002BEE  EFFB  F015         	goto	u3131
  3758   002BF2  EFFD  F015         	goto	u3130
  3759   002BF6                     u3131:
  3760   002BF6  EFE5  F015         	goto	l2920
  3761   002BFA                     u3130:
  3762   002BFA  0012               	return		;funcret
  3763   002BFC                     __end_of_strcpy:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _pad *****************
  3767 ;; Defined at:
  3768 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3771 ;;		 -> sprintf@f(11), 
  3772 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3773 ;;		 -> dbuf(80), 
  3774 ;;  p               2   17[COMRAM] int 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  i               2   20[COMRAM] int 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3786 ;;      Params:         5       0       0       0       0       0       0
  3787 ;;      Locals:         2       0       0       0       0       0       0
  3788 ;;      Temps:          1       0       0       0       0       0       0
  3789 ;;      Totals:         8       0       0       0       0       0       0
  3790 ;;Total ram usage:        8 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; Hardware stack levels required when called: 3
  3793 ;; This function calls:
  3794 ;;		_fputc
  3795 ;;		_fputs
  3796 ;; This function is called by:
  3797 ;;		_efgtoa
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text7
  3802   0028A4                     __ptext7:
  3803                           	callstack 0
  3804   0028A4                     _pad:
  3805                           	callstack 23
  3806   0028A4                     
  3807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3808   0028A4  BE13               	btfsc	(pad@p+1)^0,7,c
  3809   0028A6  EF59  F014         	goto	u3040
  3810   0028AA  EF57  F014         	goto	u3041
  3811   0028AE                     u3041:
  3812   0028AE  EF5D  F014         	goto	l887
  3813   0028B2                     u3040:
  3814   0028B2                     
  3815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3816   0028B2  0E00               	movlw	0
  3817   0028B4  6E13               	movwf	(pad@p+1)^0,c
  3818   0028B6  0E00               	movlw	0
  3819   0028B8  6E12               	movwf	pad@p^0,c
  3820   0028BA                     l887:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3823   0028BA  0E00               	movlw	0
  3824   0028BC  6E16               	movwf	(pad@i+1)^0,c
  3825   0028BE  0E00               	movlw	0
  3826   0028C0  6E15               	movwf	pad@i^0,c
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3829   0028C2  EF6D  F014         	goto	l2892
  3830   0028C6                     l2888:
  3831                           
  3832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3833   0028C6  0E00               	movlw	0
  3834   0028C8  6E02               	movwf	(fputc@c+1)^0,c
  3835   0028CA  0E20               	movlw	32
  3836   0028CC  6E01               	movwf	fputc@c^0,c
  3837   0028CE  C00F  F003         	movff	pad@fp,fputc@fp
  3838   0028D2  EC06  F013         	call	_fputc	;wreg free
  3839   0028D6                     
  3840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3841   0028D6  4A15               	infsnz	pad@i^0,f,c
  3842   0028D8  2A16               	incf	(pad@i+1)^0,f,c
  3843   0028DA                     l2892:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3846   0028DA  5012               	movf	pad@p^0,w,c
  3847   0028DC  5C15               	subwf	pad@i^0,w,c
  3848   0028DE  5016               	movf	(pad@i+1)^0,w,c
  3849   0028E0  0A80               	xorlw	128
  3850   0028E2  6E14               	movwf	??_pad^0,c
  3851   0028E4  5013               	movf	(pad@p+1)^0,w,c
  3852   0028E6  0A80               	xorlw	128
  3853   0028E8  5814               	subwfb	??_pad^0,w,c
  3854   0028EA  A0D8               	btfss	status,0,c
  3855   0028EC  EF7A  F014         	goto	u3051
  3856   0028F0  EF7C  F014         	goto	u3050
  3857   0028F4                     u3051:
  3858   0028F4  EF63  F014         	goto	l2888
  3859   0028F8                     u3050:
  3860   0028F8                     
  3861                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3862   0028F8  C010  F009         	movff	pad@buf,fputs@s
  3863   0028FC  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3864   002900  C00F  F00B         	movff	pad@fp,fputs@fp
  3865   002904  ECC1  F015         	call	_fputs	;wreg free
  3866   002908  0012               	return		;funcret
  3867   00290A                     __end_of_pad:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _fputs *****************
  3871 ;; Defined at:
  3872 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3875 ;;		 -> dbuf(80), 
  3876 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3877 ;;		 -> sprintf@f(11), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  i               2   12[COMRAM] int 
  3880 ;;  c               1   11[COMRAM] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  2    8[COMRAM] int 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3890 ;;      Params:         3       0       0       0       0       0       0
  3891 ;;      Locals:         3       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0
  3893 ;;      Totals:         6       0       0       0       0       0       0
  3894 ;;Total ram usage:        6 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 2
  3897 ;; This function calls:
  3898 ;;		_fputc
  3899 ;; This function is called by:
  3900 ;;		_pad
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text8
  3905   002B82                     __ptext8:
  3906                           	callstack 0
  3907   002B82                     _fputs:
  3908                           	callstack 23
  3909   002B82  0E00               	movlw	0
  3910   002B84  6E0E               	movwf	(fputs@i+1)^0,c
  3911   002B86  0E00               	movlw	0
  3912   002B88  6E0D               	movwf	fputs@i^0,c
  3913   002B8A  EFD0  F015         	goto	l2522
  3914   002B8E                     l2518:
  3915   002B8E  C00C  F001         	movff	fputs@c,fputc@c
  3916   002B92  6A02               	clrf	(fputc@c+1)^0,c
  3917   002B94  C00B  F003         	movff	fputs@fp,fputc@fp
  3918   002B98  EC06  F013         	call	_fputc	;wreg free
  3919   002B9C  4A0D               	infsnz	fputs@i^0,f,c
  3920   002B9E  2A0E               	incf	(fputs@i+1)^0,f,c
  3921   002BA0                     l2522:
  3922   002BA0  500D               	movf	fputs@i^0,w,c
  3923   002BA2  2409               	addwf	fputs@s^0,w,c
  3924   002BA4  6ED9               	movwf	fsr2l,c
  3925   002BA6  500E               	movf	(fputs@i+1)^0,w,c
  3926   002BA8  200A               	addwfc	(fputs@s+1)^0,w,c
  3927   002BAA  6EDA               	movwf	fsr2h,c
  3928   002BAC  50DF               	movf	indf2,w,c
  3929   002BAE  6E0C               	movwf	fputs@c^0,c
  3930   002BB0  500C               	movf	fputs@c^0,w,c
  3931   002BB2  A4D8               	btfss	status,2,c
  3932   002BB4  EFDE  F015         	goto	u2451
  3933   002BB8  EFE0  F015         	goto	u2450
  3934   002BBC                     u2451:
  3935   002BBC  EFC7  F015         	goto	l2518
  3936   002BC0                     u2450:
  3937   002BC0  0012               	return		;funcret
  3938   002BC2                     __end_of_fputs:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _fputc *****************
  3942 ;; Defined at:
  3943 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  c               2    0[COMRAM] int 
  3946 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3947 ;;		 -> sprintf@f(11), 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  2    0[COMRAM] int 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3959 ;;      Params:         3       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0
  3961 ;;      Temps:          5       0       0       0       0       0       0
  3962 ;;      Totals:         8       0       0       0       0       0       0
  3963 ;;Total ram usage:        8 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 1
  3966 ;; This function calls:
  3967 ;;		_putch
  3968 ;; This function is called by:
  3969 ;;		_pad
  3970 ;;		_vfpfcnvrt
  3971 ;;		_fputs
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text9
  3976   00260C                     __ptext9:
  3977                           	callstack 0
  3978   00260C                     _fputc:
  3979                           	callstack 26
  3980   00260C  5003               	movf	fputc@fp^0,w,c
  3981   00260E  B4D8               	btfsc	status,2,c
  3982   002610  EF0C  F013         	goto	u2021
  3983   002614  EF0E  F013         	goto	u2020
  3984   002618                     u2021:
  3985   002618  EF16  F013         	goto	l2312
  3986   00261C                     u2020:
  3987   00261C  5003               	movf	fputc@fp^0,w,c
  3988   00261E  A4D8               	btfss	status,2,c
  3989   002620  EF14  F013         	goto	u2031
  3990   002624  EF16  F013         	goto	u2030
  3991   002628                     u2031:
  3992   002628  EF1B  F013         	goto	l2314
  3993   00262C                     u2030:
  3994   00262C                     l2312:
  3995   00262C  5001               	movf	fputc@c^0,w,c
  3996   00262E  EC94  F016         	call	_putch
  3997   002632  EF5A  F013         	goto	l1027
  3998   002636                     l2314:
  3999   002636  5003               	movf	fputc@fp^0,w,c
  4000   002638  6ED9               	movwf	fsr2l,c
  4001   00263A  6ADA               	clrf	fsr2h,c
  4002   00263C  0E09               	movlw	9
  4003   00263E  26D9               	addwf	fsr2l,f,c
  4004   002640  50DE               	movf	postinc2,w,c
  4005   002642  10DE               	iorwf	postinc2,w,c
  4006   002644  B4D8               	btfsc	status,2,c
  4007   002646  EF27  F013         	goto	u2041
  4008   00264A  EF29  F013         	goto	u2040
  4009   00264E                     u2041:
  4010   00264E  EF42  F013         	goto	l2318
  4011   002652                     u2040:
  4012   002652  5003               	movf	fputc@fp^0,w,c
  4013   002654  6ED9               	movwf	fsr2l,c
  4014   002656  6ADA               	clrf	fsr2h,c
  4015   002658  0E09               	movlw	9
  4016   00265A  26D9               	addwf	fsr2l,f,c
  4017   00265C  5003               	movf	fputc@fp^0,w,c
  4018   00265E  6EE1               	movwf	fsr1l,c
  4019   002660  6AE2               	clrf	fsr1h,c
  4020   002662  0E02               	movlw	2
  4021   002664  26E1               	addwf	fsr1l,f,c
  4022   002666  50DE               	movf	postinc2,w,c
  4023   002668  5CE6               	subwf	postinc1,w,c
  4024   00266A  50E6               	movf	postinc1,w,c
  4025   00266C  0A80               	xorlw	128
  4026   00266E  6E08               	movwf	(??_fputc+4)^0,c
  4027   002670  50DE               	movf	postinc2,w,c
  4028   002672  0A80               	xorlw	128
  4029   002674  5808               	subwfb	(??_fputc+4)^0,w,c
  4030   002676  B0D8               	btfsc	status,0,c
  4031   002678  EF40  F013         	goto	u2051
  4032   00267C  EF42  F013         	goto	u2050
  4033   002680                     u2051:
  4034   002680  EF5A  F013         	goto	l1027
  4035   002684                     u2050:
  4036   002684                     l2318:
  4037   002684  5003               	movf	fputc@fp^0,w,c
  4038   002686  6ED9               	movwf	fsr2l,c
  4039   002688  6ADA               	clrf	fsr2h,c
  4040   00268A  0E02               	movlw	2
  4041   00268C  26D9               	addwf	fsr2l,f,c
  4042   00268E  50DF               	movf	indf2,w,c
  4043   002690  6E04               	movwf	??_fputc^0,c
  4044   002692  5003               	movf	fputc@fp^0,w,c
  4045   002694  6ED9               	movwf	fsr2l,c
  4046   002696  6ADA               	clrf	fsr2h,c
  4047   002698  50DF               	movf	indf2,w,c
  4048   00269A  2404               	addwf	??_fputc^0,w,c
  4049   00269C  6ED9               	movwf	fsr2l,c
  4050   00269E  6ADA               	clrf	fsr2h,c
  4051   0026A0  C001  FFDF         	movff	fputc@c,indf2
  4052   0026A4  5003               	movf	fputc@fp^0,w,c
  4053   0026A6  6ED9               	movwf	fsr2l,c
  4054   0026A8  6ADA               	clrf	fsr2h,c
  4055   0026AA  0E02               	movlw	2
  4056   0026AC  26D9               	addwf	fsr2l,f,c
  4057   0026AE  2ADE               	incf	postinc2,f,c
  4058   0026B0  0E00               	movlw	0
  4059   0026B2  22DD               	addwfc	postdec2,f,c
  4060   0026B4                     l1027:
  4061   0026B4  0012               	return		;funcret
  4062   0026B6                     __end_of_fputc:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _putch *****************
  4066 ;; Defined at:
  4067 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  c               1    wreg     unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  c               1    0[COMRAM] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4081 ;;      Params:         0       0       0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_fputc
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text10
  4095   002D28                     __ptext10:
  4096                           	callstack 0
  4097   002D28                     _putch:
  4098                           	callstack 26
  4099   002D28  0012               	return		;funcret
  4100   002D2A                     __end_of_putch:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _memcpy *****************
  4104 ;; Defined at:
  4105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  d1              2    0[COMRAM] PTR void 
  4108 ;;		 -> dbuf(80), 
  4109 ;;  s1              2    2[COMRAM] PTR const void 
  4110 ;;		 -> dbuf(80), 
  4111 ;;  n               2    4[COMRAM] unsigned int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4114 ;;		 -> dbuf(80), 
  4115 ;;  d               2    6[COMRAM] PTR unsigned char 
  4116 ;;		 -> dbuf(80), 
  4117 ;;  tmp             1   10[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2    0[COMRAM] PTR void 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4127 ;;      Params:         6       0       0       0       0       0       0
  4128 ;;      Locals:         5       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0
  4130 ;;      Totals:        11       0       0       0       0       0       0
  4131 ;;Total ram usage:       11 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_efgtoa
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text11
  4141   002A68                     __ptext11:
  4142                           	callstack 0
  4143   002A68                     _memcpy:
  4144                           	callstack 26
  4145   002A68  C003  F009         	movff	memcpy@s1,memcpy@s
  4146   002A6C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4147   002A70  C001  F007         	movff	memcpy@d1,memcpy@d
  4148   002A74  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4149   002A78  EF4E  F015         	goto	l2968
  4150   002A7C                     l2960:
  4151   002A7C  C009  FFD9         	movff	memcpy@s,fsr2l
  4152   002A80  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4153   002A84  50DF               	movf	indf2,w,c
  4154   002A86  6E0B               	movwf	memcpy@tmp^0,c
  4155   002A88  4A09               	infsnz	memcpy@s^0,f,c
  4156   002A8A  2A0A               	incf	(memcpy@s+1)^0,f,c
  4157   002A8C  C007  FFD9         	movff	memcpy@d,fsr2l
  4158   002A90  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4159   002A94  C00B  FFDF         	movff	memcpy@tmp,indf2
  4160   002A98  4A07               	infsnz	memcpy@d^0,f,c
  4161   002A9A  2A08               	incf	(memcpy@d+1)^0,f,c
  4162   002A9C                     l2968:
  4163   002A9C  0605               	decf	memcpy@n^0,f,c
  4164   002A9E  A0D8               	btfss	status,0,c
  4165   002AA0  0606               	decf	(memcpy@n+1)^0,f,c
  4166   002AA2  2805               	incf	memcpy@n^0,w,c
  4167   002AA4  E106               	bnz	u3251
  4168   002AA6  2806               	incf	(memcpy@n+1)^0,w,c
  4169   002AA8  A4D8               	btfss	status,2,c
  4170   002AAA  EF59  F015         	goto	u3251
  4171   002AAE  EF5B  F015         	goto	u3250
  4172   002AB2                     u3251:
  4173   002AB2  EF3E  F015         	goto	l2960
  4174   002AB6                     u3250:
  4175   002AB6  0012               	return		;funcret
  4176   002AB8                     __end_of_memcpy:
  4177                           	callstack 0
  4178                           
  4179 ;; *************** function _labs *****************
  4180 ;; Defined at:
  4181 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  a               4    0[COMRAM] long 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  4    0[COMRAM] long 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4195 ;;      Params:         4       0       0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0       0       0
  4197 ;;      Temps:          4       0       0       0       0       0       0
  4198 ;;      Totals:         8       0       0       0       0       0       0
  4199 ;;Total ram usage:        8 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_efgtoa
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text12
  4209   002968                     __ptext12:
  4210                           	callstack 0
  4211   002968                     _labs:
  4212                           	callstack 26
  4213   002968  BE04               	btfsc	(labs@a+3)^0,7,c
  4214   00296A  EFB9  F014         	goto	u3141
  4215   00296E  EFBB  F014         	goto	u3140
  4216   002972                     u3141:
  4217   002972  EFC5  F014         	goto	l2926
  4218   002976                     u3140:
  4219   002976  C001  F001         	movff	labs@a,?_labs
  4220   00297A  C002  F002         	movff	labs@a+1,?_labs+1
  4221   00297E  C003  F003         	movff	labs@a+2,?_labs+2
  4222   002982  C004  F004         	movff	labs@a+3,?_labs+3
  4223   002986  EFDE  F014         	goto	l1009
  4224   00298A                     l2926:
  4225   00298A  C001  F005         	movff	labs@a,??_labs
  4226   00298E  C002  F006         	movff	labs@a+1,??_labs+1
  4227   002992  C003  F007         	movff	labs@a+2,??_labs+2
  4228   002996  C004  F008         	movff	labs@a+3,??_labs+3
  4229   00299A  1E05               	comf	??_labs^0,f,c
  4230   00299C  1E06               	comf	(??_labs+1)^0,f,c
  4231   00299E  1E07               	comf	(??_labs+2)^0,f,c
  4232   0029A0  1E08               	comf	(??_labs+3)^0,f,c
  4233   0029A2  2A05               	incf	??_labs^0,f,c
  4234   0029A4  0E00               	movlw	0
  4235   0029A6  2206               	addwfc	(??_labs+1)^0,f,c
  4236   0029A8  2207               	addwfc	(??_labs+2)^0,f,c
  4237   0029AA  2208               	addwfc	(??_labs+3)^0,f,c
  4238   0029AC  C005  F001         	movff	??_labs,?_labs
  4239   0029B0  C006  F002         	movff	??_labs+1,?_labs+1
  4240   0029B4  C007  F003         	movff	??_labs+2,?_labs+2
  4241   0029B8  C008  F004         	movff	??_labs+3,?_labs+3
  4242   0029BC                     l1009:
  4243   0029BC  0012               	return		;funcret
  4244   0029BE                     __end_of_labs:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _floorf *****************
  4248 ;; Defined at:
  4249 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  x               4   64[COMRAM] float 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  u               4   80[COMRAM] struct .
  4254 ;;  m               4   74[COMRAM] unsigned long 
  4255 ;;  e               2   78[COMRAM] int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  4   64[COMRAM] float 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4265 ;;      Params:         4       0       0       0       0       0       0
  4266 ;;      Locals:        10       0       0       0       0       0       0
  4267 ;;      Temps:          6       0       0       0       0       0       0
  4268 ;;      Totals:        20       0       0       0       0       0       0
  4269 ;;Total ram usage:       20 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_efgtoa
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text13
  4279   001C72                     __ptext13:
  4280                           	callstack 0
  4281   001C72                     _floorf:
  4282                           	callstack 26
  4283   001C72  C074  F051         	movff	floorf@F521,floorf@u
  4284   001C76  C075  F052         	movff	floorf@F521+1,floorf@u+1
  4285   001C7A  C076  F053         	movff	floorf@F521+2,floorf@u+2
  4286   001C7E  C077  F054         	movff	floorf@F521+3,floorf@u+3
  4287   001C82  C041  F051         	movff	floorf@x,floorf@u
  4288   001C86  C042  F052         	movff	floorf@x+1,floorf@u+1
  4289   001C8A  C043  F053         	movff	floorf@x+2,floorf@u+2
  4290   001C8E  C044  F054         	movff	floorf@x+3,floorf@u+3
  4291   001C92  0E81               	movlw	129
  4292   001C94  6E45               	movwf	??_floorf^0,c
  4293   001C96  0EFF               	movlw	255
  4294   001C98  6E46               	movwf	(??_floorf+1)^0,c
  4295   001C9A  C051  F047         	movff	floorf@u,??_floorf+2
  4296   001C9E  C052  F048         	movff	floorf@u+1,??_floorf+3
  4297   001CA2  C053  F049         	movff	floorf@u+2,??_floorf+4
  4298   001CA6  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4299   001CAA  0E18               	movlw	24
  4300   001CAC  EF5D  F00E         	goto	u3150
  4301   001CB0                     u3155:
  4302   001CB0  90D8               	bcf	status,0,c
  4303   001CB2  324A               	rrcf	(??_floorf+5)^0,f,c
  4304   001CB4  3249               	rrcf	(??_floorf+4)^0,f,c
  4305   001CB6  3248               	rrcf	(??_floorf+3)^0,f,c
  4306   001CB8  3247               	rrcf	(??_floorf+2)^0,f,c
  4307   001CBA                     u3150:
  4308   001CBA  2EE8               	decfsz	wreg,f,c
  4309   001CBC  EF58  F00E         	goto	u3155
  4310   001CC0  5047               	movf	(??_floorf+2)^0,w,c
  4311   001CC2  2445               	addwf	??_floorf^0,w,c
  4312   001CC4  6E4F               	movwf	floorf@e^0,c
  4313   001CC6  0E00               	movlw	0
  4314   001CC8  2046               	addwfc	(??_floorf+1)^0,w,c
  4315   001CCA  6E50               	movwf	(floorf@e+1)^0,c
  4316   001CCC  BE50               	btfsc	(floorf@e+1)^0,7,c
  4317   001CCE  EF72  F00E         	goto	u3161
  4318   001CD2  5050               	movf	(floorf@e+1)^0,w,c
  4319   001CD4  E109               	bnz	u3160
  4320   001CD6  0E17               	movlw	23
  4321   001CD8  5C4F               	subwf	floorf@e^0,w,c
  4322   001CDA  A0D8               	btfss	status,0,c
  4323   001CDC  EF72  F00E         	goto	u3161
  4324   001CE0  EF74  F00E         	goto	u3160
  4325   001CE4                     u3161:
  4326   001CE4  EF7E  F00E         	goto	l2936
  4327   001CE8                     u3160:
  4328   001CE8                     l2934:
  4329   001CE8  C041  F041         	movff	floorf@x,?_floorf
  4330   001CEC  C042  F042         	movff	floorf@x+1,?_floorf+1
  4331   001CF0  C043  F043         	movff	floorf@x+2,?_floorf+2
  4332   001CF4  C044  F044         	movff	floorf@x+3,?_floorf+3
  4333   001CF8  EF41  F00F         	goto	l995
  4334   001CFC                     l2936:
  4335   001CFC  BE50               	btfsc	(floorf@e+1)^0,7,c
  4336   001CFE  EF83  F00E         	goto	u3171
  4337   001D02  EF85  F00E         	goto	u3170
  4338   001D06                     u3171:
  4339   001D06  EFF5  F00E         	goto	l2946
  4340   001D0A                     u3170:
  4341   001D0A  C04F  F045         	movff	floorf@e,??_floorf
  4342   001D0E  0EFF               	movlw	255
  4343   001D10  6E46               	movwf	(??_floorf+1)^0,c
  4344   001D12  0EFF               	movlw	255
  4345   001D14  6E47               	movwf	(??_floorf+2)^0,c
  4346   001D16  0E7F               	movlw	127
  4347   001D18  6E48               	movwf	(??_floorf+3)^0,c
  4348   001D1A  0E00               	movlw	0
  4349   001D1C  6E49               	movwf	(??_floorf+4)^0,c
  4350   001D1E                     u3185:
  4351   001D1E  6645               	tstfsz	??_floorf^0,c
  4352   001D20  EF94  F00E         	goto	u3186
  4353   001D24  EF9C  F00E         	goto	u3187
  4354   001D28                     u3186:
  4355   001D28  3449               	rlcf	(??_floorf+4)^0,w,c
  4356   001D2A  3249               	rrcf	(??_floorf+4)^0,f,c
  4357   001D2C  3248               	rrcf	(??_floorf+3)^0,f,c
  4358   001D2E  3247               	rrcf	(??_floorf+2)^0,f,c
  4359   001D30  3246               	rrcf	(??_floorf+1)^0,f,c
  4360   001D32  2E45               	decfsz	??_floorf^0,f,c
  4361   001D34  EF8F  F00E         	goto	u3185
  4362   001D38                     u3187:
  4363   001D38  C046  F04B         	movff	??_floorf+1,floorf@m
  4364   001D3C  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4365   001D40  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4366   001D44  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4367   001D48  504B               	movf	floorf@m^0,w,c
  4368   001D4A  1451               	andwf	floorf@u^0,w,c
  4369   001D4C  6E45               	movwf	??_floorf^0,c
  4370   001D4E  504C               	movf	(floorf@m+1)^0,w,c
  4371   001D50  1452               	andwf	(floorf@u+1)^0,w,c
  4372   001D52  6E46               	movwf	(??_floorf+1)^0,c
  4373   001D54  504D               	movf	(floorf@m+2)^0,w,c
  4374   001D56  1453               	andwf	(floorf@u+2)^0,w,c
  4375   001D58  6E47               	movwf	(??_floorf+2)^0,c
  4376   001D5A  504E               	movf	(floorf@m+3)^0,w,c
  4377   001D5C  1454               	andwf	(floorf@u+3)^0,w,c
  4378   001D5E  6E48               	movwf	(??_floorf+3)^0,c
  4379   001D60  5045               	movf	??_floorf^0,w,c
  4380   001D62  1046               	iorwf	(??_floorf+1)^0,w,c
  4381   001D64  1047               	iorwf	(??_floorf+2)^0,w,c
  4382   001D66  1048               	iorwf	(??_floorf+3)^0,w,c
  4383   001D68  A4D8               	btfss	status,2,c
  4384   001D6A  EFB9  F00E         	goto	u3191
  4385   001D6E  EFBB  F00E         	goto	u3190
  4386   001D72                     u3191:
  4387   001D72  EFBD  F00E         	goto	l2942
  4388   001D76                     u3190:
  4389   001D76  EF74  F00E         	goto	l2934
  4390   001D7A                     l2942:
  4391   001D7A  C051  F045         	movff	floorf@u,??_floorf
  4392   001D7E  C052  F046         	movff	floorf@u+1,??_floorf+1
  4393   001D82  C053  F047         	movff	floorf@u+2,??_floorf+2
  4394   001D86  C054  F048         	movff	floorf@u+3,??_floorf+3
  4395   001D8A  0E20               	movlw	32
  4396   001D8C  EFCD  F00E         	goto	u3200
  4397   001D90                     u3205:
  4398   001D90  90D8               	bcf	status,0,c
  4399   001D92  3248               	rrcf	(??_floorf+3)^0,f,c
  4400   001D94  3247               	rrcf	(??_floorf+2)^0,f,c
  4401   001D96  3246               	rrcf	(??_floorf+1)^0,f,c
  4402   001D98  3245               	rrcf	??_floorf^0,f,c
  4403   001D9A                     u3200:
  4404   001D9A  2EE8               	decfsz	wreg,f,c
  4405   001D9C  EFC8  F00E         	goto	u3205
  4406   001DA0  5045               	movf	??_floorf^0,w,c
  4407   001DA2  1046               	iorwf	(??_floorf+1)^0,w,c
  4408   001DA4  1047               	iorwf	(??_floorf+2)^0,w,c
  4409   001DA6  1048               	iorwf	(??_floorf+3)^0,w,c
  4410   001DA8  B4D8               	btfsc	status,2,c
  4411   001DAA  EFD9  F00E         	goto	u3211
  4412   001DAE  EFDB  F00E         	goto	u3210
  4413   001DB2                     u3211:
  4414   001DB2  EFE3  F00E         	goto	l998
  4415   001DB6                     u3210:
  4416   001DB6  504B               	movf	floorf@m^0,w,c
  4417   001DB8  2651               	addwf	floorf@u^0,f,c
  4418   001DBA  504C               	movf	(floorf@m+1)^0,w,c
  4419   001DBC  2252               	addwfc	(floorf@u+1)^0,f,c
  4420   001DBE  504D               	movf	(floorf@m+2)^0,w,c
  4421   001DC0  2253               	addwfc	(floorf@u+2)^0,f,c
  4422   001DC2  504E               	movf	(floorf@m+3)^0,w,c
  4423   001DC4  2254               	addwfc	(floorf@u+3)^0,f,c
  4424   001DC6                     l998:
  4425   001DC6  1C4B               	comf	floorf@m^0,w,c
  4426   001DC8  6E45               	movwf	??_floorf^0,c
  4427   001DCA  1C4C               	comf	(floorf@m+1)^0,w,c
  4428   001DCC  6E46               	movwf	(??_floorf+1)^0,c
  4429   001DCE  1C4D               	comf	(floorf@m+2)^0,w,c
  4430   001DD0  6E47               	movwf	(??_floorf+2)^0,c
  4431   001DD2  1C4E               	comf	(floorf@m+3)^0,w,c
  4432   001DD4  6E48               	movwf	(??_floorf+3)^0,c
  4433   001DD6  5045               	movf	??_floorf^0,w,c
  4434   001DD8  1651               	andwf	floorf@u^0,f,c
  4435   001DDA  5046               	movf	(??_floorf+1)^0,w,c
  4436   001DDC  1652               	andwf	(floorf@u+1)^0,f,c
  4437   001DDE  5047               	movf	(??_floorf+2)^0,w,c
  4438   001DE0  1653               	andwf	(floorf@u+2)^0,f,c
  4439   001DE2  5048               	movf	(??_floorf+3)^0,w,c
  4440   001DE4  1654               	andwf	(floorf@u+3)^0,f,c
  4441   001DE6  EF39  F00F         	goto	l2954
  4442   001DEA                     l2946:
  4443   001DEA  C051  F045         	movff	floorf@u,??_floorf
  4444   001DEE  C052  F046         	movff	floorf@u+1,??_floorf+1
  4445   001DF2  C053  F047         	movff	floorf@u+2,??_floorf+2
  4446   001DF6  C054  F048         	movff	floorf@u+3,??_floorf+3
  4447   001DFA  0E20               	movlw	32
  4448   001DFC  EF05  F00F         	goto	u3220
  4449   001E00                     u3225:
  4450   001E00  90D8               	bcf	status,0,c
  4451   001E02  3248               	rrcf	(??_floorf+3)^0,f,c
  4452   001E04  3247               	rrcf	(??_floorf+2)^0,f,c
  4453   001E06  3246               	rrcf	(??_floorf+1)^0,f,c
  4454   001E08  3245               	rrcf	??_floorf^0,f,c
  4455   001E0A                     u3220:
  4456   001E0A  2EE8               	decfsz	wreg,f,c
  4457   001E0C  EF00  F00F         	goto	u3225
  4458   001E10  5045               	movf	??_floorf^0,w,c
  4459   001E12  1046               	iorwf	(??_floorf+1)^0,w,c
  4460   001E14  1047               	iorwf	(??_floorf+2)^0,w,c
  4461   001E16  1048               	iorwf	(??_floorf+3)^0,w,c
  4462   001E18  A4D8               	btfss	status,2,c
  4463   001E1A  EF11  F00F         	goto	u3231
  4464   001E1E  EF13  F00F         	goto	u3230
  4465   001E22                     u3231:
  4466   001E22  EF1D  F00F         	goto	l2950
  4467   001E26                     u3230:
  4468   001E26  0E00               	movlw	0
  4469   001E28  6E51               	movwf	floorf@u^0,c
  4470   001E2A  0E00               	movlw	0
  4471   001E2C  6E52               	movwf	(floorf@u+1)^0,c
  4472   001E2E  0E00               	movlw	0
  4473   001E30  6E53               	movwf	(floorf@u+2)^0,c
  4474   001E32  0E00               	movlw	0
  4475   001E34  6E54               	movwf	(floorf@u+3)^0,c
  4476   001E36  EF39  F00F         	goto	l2954
  4477   001E3A                     l2950:
  4478   001E3A  90D8               	bcf	status,0,c
  4479   001E3C  3451               	rlcf	floorf@u^0,w,c
  4480   001E3E  6E45               	movwf	??_floorf^0,c
  4481   001E40  3452               	rlcf	(floorf@u+1)^0,w,c
  4482   001E42  6E46               	movwf	(??_floorf+1)^0,c
  4483   001E44  3453               	rlcf	(floorf@u+2)^0,w,c
  4484   001E46  6E47               	movwf	(??_floorf+2)^0,c
  4485   001E48  3454               	rlcf	(floorf@u+3)^0,w,c
  4486   001E4A  6E48               	movwf	(??_floorf+3)^0,c
  4487   001E4C  5045               	movf	??_floorf^0,w,c
  4488   001E4E  1046               	iorwf	(??_floorf+1)^0,w,c
  4489   001E50  1047               	iorwf	(??_floorf+2)^0,w,c
  4490   001E52  1048               	iorwf	(??_floorf+3)^0,w,c
  4491   001E54  B4D8               	btfsc	status,2,c
  4492   001E56  EF2F  F00F         	goto	u3241
  4493   001E5A  EF31  F00F         	goto	u3240
  4494   001E5E                     u3241:
  4495   001E5E  EF39  F00F         	goto	l2954
  4496   001E62                     u3240:
  4497   001E62  0E00               	movlw	0
  4498   001E64  6E51               	movwf	floorf@u^0,c
  4499   001E66  0E00               	movlw	0
  4500   001E68  6E52               	movwf	(floorf@u+1)^0,c
  4501   001E6A  0E80               	movlw	128
  4502   001E6C  6E53               	movwf	(floorf@u+2)^0,c
  4503   001E6E  0EBF               	movlw	191
  4504   001E70  6E54               	movwf	(floorf@u+3)^0,c
  4505   001E72                     l2954:
  4506   001E72  C051  F041         	movff	floorf@u,?_floorf
  4507   001E76  C052  F042         	movff	floorf@u+1,?_floorf+1
  4508   001E7A  C053  F043         	movff	floorf@u+2,?_floorf+2
  4509   001E7E  C054  F044         	movff	floorf@u+3,?_floorf+3
  4510   001E82                     l995:
  4511   001E82  0012               	return		;funcret
  4512   001E84                     __end_of_floorf:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function ___fpclassifyf *****************
  4516 ;; Defined at:
  4517 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  x               4    0[COMRAM] float 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  u               4   10[COMRAM] struct .
  4522 ;;  e               2    8[COMRAM] int 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  2    0[COMRAM] int 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4532 ;;      Params:         4       0       0       0       0       0       0
  4533 ;;      Locals:         6       0       0       0       0       0       0
  4534 ;;      Temps:          4       0       0       0       0       0       0
  4535 ;;      Totals:        14       0       0       0       0       0       0
  4536 ;;Total ram usage:       14 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_efgtoa
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text14
  4546   00250E                     __ptext14:
  4547                           	callstack 0
  4548   00250E                     ___fpclassifyf:
  4549                           	callstack 26
  4550   00250E  C078  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4551   002512  C079  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4552   002516  C07A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4553   00251A  C07B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4554   00251E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4555   002522  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4556   002526  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4557   00252A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4558   00252E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4559   002532  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4560   002536  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4561   00253A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4562   00253E  0E18               	movlw	24
  4563   002540  EFA7  F012         	goto	u3060
  4564   002544                     u3065:
  4565   002544  90D8               	bcf	status,0,c
  4566   002546  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4567   002548  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4568   00254A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4569   00254C  3205               	rrcf	??___fpclassifyf^0,f,c
  4570   00254E                     u3060:
  4571   00254E  2EE8               	decfsz	wreg,f,c
  4572   002550  EFA2  F012         	goto	u3065
  4573   002554  5005               	movf	??___fpclassifyf^0,w,c
  4574   002556  6E09               	movwf	___fpclassifyf@e^0,c
  4575   002558  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4576   00255A  5009               	movf	___fpclassifyf@e^0,w,c
  4577   00255C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4578   00255E  A4D8               	btfss	status,2,c
  4579   002560  EFB4  F012         	goto	u3071
  4580   002564  EFB6  F012         	goto	u3070
  4581   002568                     u3071:
  4582   002568  EFD6  F012         	goto	l2908
  4583   00256C                     u3070:
  4584   00256C  90D8               	bcf	status,0,c
  4585   00256E  340B               	rlcf	___fpclassifyf@u^0,w,c
  4586   002570  6E05               	movwf	??___fpclassifyf^0,c
  4587   002572  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4588   002574  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4589   002576  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4590   002578  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4591   00257A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4592   00257C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4593   00257E  5005               	movf	??___fpclassifyf^0,w,c
  4594   002580  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4595   002582  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4596   002584  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4597   002586  A4D8               	btfss	status,2,c
  4598   002588  EFC8  F012         	goto	u3081
  4599   00258C  EFCA  F012         	goto	u3080
  4600   002590                     u3081:
  4601   002590  EFD0  F012         	goto	l2904
  4602   002594                     u3080:
  4603   002594  0E00               	movlw	0
  4604   002596  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4605   002598  0E02               	movlw	2
  4606   00259A  6E01               	movwf	?___fpclassifyf^0,c
  4607   00259C  EF05  F013         	goto	l988
  4608   0025A0                     l2904:
  4609   0025A0  0E00               	movlw	0
  4610   0025A2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4611   0025A4  0E03               	movlw	3
  4612   0025A6  6E01               	movwf	?___fpclassifyf^0,c
  4613   0025A8  EF05  F013         	goto	l988
  4614   0025AC                     l2908:
  4615   0025AC  2809               	incf	___fpclassifyf@e^0,w,c
  4616   0025AE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4617   0025B0  A4D8               	btfss	status,2,c
  4618   0025B2  EFDD  F012         	goto	u3091
  4619   0025B6  EFDF  F012         	goto	u3090
  4620   0025BA                     u3091:
  4621   0025BA  EF01  F013         	goto	l2914
  4622   0025BE                     u3090:
  4623   0025BE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4624   0025C2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4625   0025C6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4626   0025CA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4627   0025CE  0E09               	movlw	9
  4628   0025D0                     u3105:
  4629   0025D0  90D8               	bcf	status,0,c
  4630   0025D2  3605               	rlcf	??___fpclassifyf^0,f,c
  4631   0025D4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4632   0025D6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4633   0025D8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4634   0025DA  2EE8               	decfsz	wreg,f,c
  4635   0025DC  EFE8  F012         	goto	u3105
  4636   0025E0  5005               	movf	??___fpclassifyf^0,w,c
  4637   0025E2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4638   0025E4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4639   0025E6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4640   0025E8  B4D8               	btfsc	status,2,c
  4641   0025EA  EFF9  F012         	goto	u3111
  4642   0025EE  EFFC  F012         	goto	u3110
  4643   0025F2                     u3111:
  4644   0025F2  0E01               	movlw	1
  4645   0025F4  EFFD  F012         	goto	u3120
  4646   0025F8                     u3110:
  4647   0025F8  0E00               	movlw	0
  4648   0025FA                     u3120:
  4649   0025FA  6E01               	movwf	?___fpclassifyf^0,c
  4650   0025FC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4651   0025FE  EF05  F013         	goto	l988
  4652   002602                     l2914:
  4653   002602  0E00               	movlw	0
  4654   002604  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4655   002606  0E04               	movlw	4
  4656   002608  6E01               	movwf	?___fpclassifyf^0,c
  4657   00260A                     l988:
  4658   00260A  0012               	return		;funcret
  4659   00260C                     __end_of___fpclassifyf:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function ___fltol *****************
  4663 ;; Defined at:
  4664 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  f1              4    0[COMRAM] int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  exp1            1    9[COMRAM] unsigned char 
  4669 ;;  sign1           1    8[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  4    0[COMRAM] long 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4679 ;;      Params:         4       0       0       0       0       0       0
  4680 ;;      Locals:         2       0       0       0       0       0       0
  4681 ;;      Temps:          4       0       0       0       0       0       0
  4682 ;;      Totals:        10       0       0       0       0       0       0
  4683 ;;Total ram usage:       10 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_efgtoa
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text15
  4693   002206                     __ptext15:
  4694                           	callstack 0
  4695   002206                     ___fltol:
  4696                           	callstack 26
  4697   002206  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4698   002208  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4699   00220A  6E0A               	movwf	___fltol@exp1^0,c
  4700   00220C  500A               	movf	___fltol@exp1^0,w,c
  4701   00220E  A4D8               	btfss	status,2,c
  4702   002210  EF0C  F011         	goto	u2971
  4703   002214  EF0E  F011         	goto	u2970
  4704   002218                     u2971:
  4705   002218  EF18  F011         	goto	l2846
  4706   00221C                     u2970:
  4707   00221C                     l2842:
  4708   00221C  0E00               	movlw	0
  4709   00221E  6E01               	movwf	?___fltol^0,c
  4710   002220  0E00               	movlw	0
  4711   002222  6E02               	movwf	(?___fltol+1)^0,c
  4712   002224  0E00               	movlw	0
  4713   002226  6E03               	movwf	(?___fltol+2)^0,c
  4714   002228  0E00               	movlw	0
  4715   00222A  6E04               	movwf	(?___fltol+3)^0,c
  4716   00222C  EF85  F011         	goto	l479
  4717   002230                     l2846:
  4718   002230  C001  F005         	movff	___fltol@f1,??___fltol
  4719   002234  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4720   002238  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4721   00223C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4722   002240  0E20               	movlw	32
  4723   002242  EF28  F011         	goto	u2980
  4724   002246                     u2985:
  4725   002246  90D8               	bcf	status,0,c
  4726   002248  3208               	rrcf	(??___fltol+3)^0,f,c
  4727   00224A  3207               	rrcf	(??___fltol+2)^0,f,c
  4728   00224C  3206               	rrcf	(??___fltol+1)^0,f,c
  4729   00224E  3205               	rrcf	??___fltol^0,f,c
  4730   002250                     u2980:
  4731   002250  2EE8               	decfsz	wreg,f,c
  4732   002252  EF23  F011         	goto	u2985
  4733   002256  5005               	movf	??___fltol^0,w,c
  4734   002258  6E09               	movwf	___fltol@sign1^0,c
  4735   00225A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4736   00225C  0EFF               	movlw	255
  4737   00225E  1601               	andwf	___fltol@f1^0,f,c
  4738   002260  0EFF               	movlw	255
  4739   002262  1602               	andwf	(___fltol@f1+1)^0,f,c
  4740   002264  0EFF               	movlw	255
  4741   002266  1603               	andwf	(___fltol@f1+2)^0,f,c
  4742   002268  0E00               	movlw	0
  4743   00226A  1604               	andwf	(___fltol@f1+3)^0,f,c
  4744   00226C  0E96               	movlw	150
  4745   00226E  5E0A               	subwf	___fltol@exp1^0,f,c
  4746   002270  BE0A               	btfsc	___fltol@exp1^0,7,c
  4747   002272  EF3F  F011         	goto	u2990
  4748   002276  EF3D  F011         	goto	u2991
  4749   00227A                     u2991:
  4750   00227A  EF55  F011         	goto	l2866
  4751   00227E                     u2990:
  4752   00227E  500A               	movf	___fltol@exp1^0,w,c
  4753   002280  0A80               	xorlw	128
  4754   002282  0F97               	addlw	151
  4755   002284  B0D8               	btfsc	status,0,c
  4756   002286  EF47  F011         	goto	u3001
  4757   00228A  EF49  F011         	goto	u3000
  4758   00228E                     u3001:
  4759   00228E  EF4B  F011         	goto	l2862
  4760   002292                     u3000:
  4761   002292  EF0E  F011         	goto	l2842
  4762   002296                     l2862:
  4763   002296  90D8               	bcf	status,0,c
  4764   002298  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4765   00229A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4766   00229C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4767   00229E  3201               	rrcf	___fltol@f1^0,f,c
  4768   0022A0  3E0A               	incfsz	___fltol@exp1^0,f,c
  4769   0022A2  EF4B  F011         	goto	l2862
  4770   0022A6  EF6D  F011         	goto	l2876
  4771   0022AA                     l2866:
  4772   0022AA  0E1F               	movlw	31
  4773   0022AC  640A               	cpfsgt	___fltol@exp1^0,c
  4774   0022AE  EF5B  F011         	goto	u3011
  4775   0022B2  EF5D  F011         	goto	u3010
  4776   0022B6                     u3011:
  4777   0022B6  EF65  F011         	goto	l2874
  4778   0022BA                     u3010:
  4779   0022BA  EF0E  F011         	goto	l2842
  4780   0022BE                     l2872:
  4781   0022BE  90D8               	bcf	status,0,c
  4782   0022C0  3601               	rlcf	___fltol@f1^0,f,c
  4783   0022C2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4784   0022C4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4785   0022C6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4786   0022C8  060A               	decf	___fltol@exp1^0,f,c
  4787   0022CA                     l2874:
  4788   0022CA  500A               	movf	___fltol@exp1^0,w,c
  4789   0022CC  A4D8               	btfss	status,2,c
  4790   0022CE  EF6B  F011         	goto	u3021
  4791   0022D2  EF6D  F011         	goto	u3020
  4792   0022D6                     u3021:
  4793   0022D6  EF5F  F011         	goto	l2872
  4794   0022DA                     u3020:
  4795   0022DA                     l2876:
  4796   0022DA  5009               	movf	___fltol@sign1^0,w,c
  4797   0022DC  B4D8               	btfsc	status,2,c
  4798   0022DE  EF73  F011         	goto	u3031
  4799   0022E2  EF75  F011         	goto	u3030
  4800   0022E6                     u3031:
  4801   0022E6  EF7D  F011         	goto	l2880
  4802   0022EA                     u3030:
  4803   0022EA  1E04               	comf	(___fltol@f1+3)^0,f,c
  4804   0022EC  1E03               	comf	(___fltol@f1+2)^0,f,c
  4805   0022EE  1E02               	comf	(___fltol@f1+1)^0,f,c
  4806   0022F0  6C01               	negf	___fltol@f1^0,c
  4807   0022F2  0E00               	movlw	0
  4808   0022F4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4809   0022F6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4810   0022F8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4811   0022FA                     l2880:
  4812   0022FA  C001  F001         	movff	___fltol@f1,?___fltol
  4813   0022FE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4814   002302  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4815   002306  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4816   00230A                     l479:
  4817   00230A  0012               	return		;funcret
  4818   00230C                     __end_of___fltol:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function ___flsub *****************
  4822 ;; Defined at:
  4823 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  b               4   39[COMRAM] long 
  4826 ;;  a               4   43[COMRAM] long 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  4   39[COMRAM] long 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4838 ;;      Params:         8       0       0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0
  4841 ;;      Totals:         8       0       0       0       0       0       0
  4842 ;;Total ram usage:        8 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 1
  4845 ;; This function calls:
  4846 ;;		___fladd
  4847 ;; This function is called by:
  4848 ;;		_efgtoa
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text16
  4853   002AB8                     __ptext16:
  4854                           	callstack 0
  4855   002AB8                     ___flsub:
  4856                           	callstack 25
  4857   002AB8  0E00               	movlw	0
  4858   002ABA  1A2C               	xorwf	___flsub@a^0,f,c
  4859   002ABC  0E00               	movlw	0
  4860   002ABE  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4861   002AC0  0E00               	movlw	0
  4862   002AC2  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4863   002AC4  0E80               	movlw	128
  4864   002AC6  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4865   002AC8  C028  F001         	movff	___flsub@b,___fladd@b
  4866   002ACC  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4867   002AD0  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4868   002AD4  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4869   002AD8  C02C  F005         	movff	___flsub@a,___fladd@a
  4870   002ADC  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4871   002AE0  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4872   002AE4  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4873   002AE8  EC03  F008         	call	___fladd	;wreg free
  4874   002AEC  C001  F028         	movff	?___fladd,?___flsub
  4875   002AF0  C002  F029         	movff	?___fladd+1,?___flsub+1
  4876   002AF4  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4877   002AF8  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4878   002AFC  0012               	return		;funcret
  4879   002AFE                     __end_of___flsub:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function ___fladd *****************
  4883 ;; Defined at:
  4884 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  b               4    0[COMRAM] long 
  4887 ;;  a               4    4[COMRAM] long 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  grs             1   15[COMRAM] unsigned char 
  4890 ;;  bexp            1   14[COMRAM] unsigned char 
  4891 ;;  aexp            1   13[COMRAM] unsigned char 
  4892 ;;  signs           1   12[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  4    0[COMRAM] unsigned char 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4902 ;;      Params:         8       0       0       0       0       0       0
  4903 ;;      Locals:         4       0       0       0       0       0       0
  4904 ;;      Temps:          4       0       0       0       0       0       0
  4905 ;;      Totals:        16       0       0       0       0       0       0
  4906 ;;Total ram usage:       16 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		___flsub
  4912 ;;		_efgtoa
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text17
  4917   001006                     __ptext17:
  4918                           	callstack 0
  4919   001006                     ___fladd:
  4920                           	callstack 25
  4921   001006  5004               	movf	(___fladd@b+3)^0,w,c
  4922   001008  0B80               	andlw	128
  4923   00100A  6E0D               	movwf	___fladd@signs^0,c
  4924   00100C  5004               	movf	(___fladd@b+3)^0,w,c
  4925   00100E  2404               	addwf	(___fladd@b+3)^0,w,c
  4926   001010  6E0F               	movwf	___fladd@bexp^0,c
  4927   001012  AE03               	btfss	(___fladd@b+2)^0,7,c
  4928   001014  EF0E  F008         	goto	u2061
  4929   001018  EF10  F008         	goto	u2060
  4930   00101C                     u2061:
  4931   00101C  EF11  F008         	goto	l2328
  4932   001020                     u2060:
  4933   001020  800F               	bsf	___fladd@bexp^0,0,c
  4934   001022                     l2328:
  4935   001022  500F               	movf	___fladd@bexp^0,w,c
  4936   001024  B4D8               	btfsc	status,2,c
  4937   001026  EF17  F008         	goto	u2071
  4938   00102A  EF19  F008         	goto	u2070
  4939   00102E                     u2071:
  4940   00102E  EF2D  F008         	goto	l2338
  4941   001032                     u2070:
  4942   001032  280F               	incf	___fladd@bexp^0,w,c
  4943   001034  A4D8               	btfss	status,2,c
  4944   001036  EF1F  F008         	goto	u2081
  4945   00103A  EF21  F008         	goto	u2080
  4946   00103E                     u2081:
  4947   00103E  EF29  F008         	goto	l2334
  4948   001042                     u2080:
  4949   001042  0E00               	movlw	0
  4950   001044  6E01               	movwf	___fladd@b^0,c
  4951   001046  0E00               	movlw	0
  4952   001048  6E02               	movwf	(___fladd@b+1)^0,c
  4953   00104A  0E00               	movlw	0
  4954   00104C  6E03               	movwf	(___fladd@b+2)^0,c
  4955   00104E  0E00               	movlw	0
  4956   001050  6E04               	movwf	(___fladd@b+3)^0,c
  4957   001052                     l2334:
  4958   001052  8E03               	bsf	(___fladd@b+2)^0,7,c
  4959   001054  6A04               	clrf	(___fladd@b+3)^0,c
  4960   001056  EF35  F008         	goto	l2340
  4961   00105A                     l2338:
  4962   00105A  0E00               	movlw	0
  4963   00105C  6E01               	movwf	___fladd@b^0,c
  4964   00105E  0E00               	movlw	0
  4965   001060  6E02               	movwf	(___fladd@b+1)^0,c
  4966   001062  0E00               	movlw	0
  4967   001064  6E03               	movwf	(___fladd@b+2)^0,c
  4968   001066  0E00               	movlw	0
  4969   001068  6E04               	movwf	(___fladd@b+3)^0,c
  4970   00106A                     l2340:
  4971   00106A  5008               	movf	(___fladd@a+3)^0,w,c
  4972   00106C  0B80               	andlw	128
  4973   00106E  6E0E               	movwf	___fladd@aexp^0,c
  4974   001070  500D               	movf	___fladd@signs^0,w,c
  4975   001072  180E               	xorwf	___fladd@aexp^0,w,c
  4976   001074  B4D8               	btfsc	status,2,c
  4977   001076  EF3F  F008         	goto	u2091
  4978   00107A  EF41  F008         	goto	u2090
  4979   00107E                     u2091:
  4980   00107E  EF42  F008         	goto	l2346
  4981   001082                     u2090:
  4982   001082  8C0D               	bsf	___fladd@signs^0,6,c
  4983   001084                     l2346:
  4984   001084  5008               	movf	(___fladd@a+3)^0,w,c
  4985   001086  2408               	addwf	(___fladd@a+3)^0,w,c
  4986   001088  6E0E               	movwf	___fladd@aexp^0,c
  4987   00108A  AE07               	btfss	(___fladd@a+2)^0,7,c
  4988   00108C  EF4A  F008         	goto	u2101
  4989   001090  EF4C  F008         	goto	u2100
  4990   001094                     u2101:
  4991   001094  EF4D  F008         	goto	l2352
  4992   001098                     u2100:
  4993   001098  800E               	bsf	___fladd@aexp^0,0,c
  4994   00109A                     l2352:
  4995   00109A  500E               	movf	___fladd@aexp^0,w,c
  4996   00109C  B4D8               	btfsc	status,2,c
  4997   00109E  EF53  F008         	goto	u2111
  4998   0010A2  EF55  F008         	goto	u2110
  4999   0010A6                     u2111:
  5000   0010A6  EF69  F008         	goto	l2362
  5001   0010AA                     u2110:
  5002   0010AA  280E               	incf	___fladd@aexp^0,w,c
  5003   0010AC  A4D8               	btfss	status,2,c
  5004   0010AE  EF5B  F008         	goto	u2121
  5005   0010B2  EF5D  F008         	goto	u2120
  5006   0010B6                     u2121:
  5007   0010B6  EF65  F008         	goto	l2358
  5008   0010BA                     u2120:
  5009   0010BA  0E00               	movlw	0
  5010   0010BC  6E05               	movwf	___fladd@a^0,c
  5011   0010BE  0E00               	movlw	0
  5012   0010C0  6E06               	movwf	(___fladd@a+1)^0,c
  5013   0010C2  0E00               	movlw	0
  5014   0010C4  6E07               	movwf	(___fladd@a+2)^0,c
  5015   0010C6  0E00               	movlw	0
  5016   0010C8  6E08               	movwf	(___fladd@a+3)^0,c
  5017   0010CA                     l2358:
  5018   0010CA  8E07               	bsf	(___fladd@a+2)^0,7,c
  5019   0010CC  6A08               	clrf	(___fladd@a+3)^0,c
  5020   0010CE  EF71  F008         	goto	l2364
  5021   0010D2                     l2362:
  5022   0010D2  0E00               	movlw	0
  5023   0010D4  6E05               	movwf	___fladd@a^0,c
  5024   0010D6  0E00               	movlw	0
  5025   0010D8  6E06               	movwf	(___fladd@a+1)^0,c
  5026   0010DA  0E00               	movlw	0
  5027   0010DC  6E07               	movwf	(___fladd@a+2)^0,c
  5028   0010DE  0E00               	movlw	0
  5029   0010E0  6E08               	movwf	(___fladd@a+3)^0,c
  5030   0010E2                     l2364:
  5031   0010E2  500F               	movf	___fladd@bexp^0,w,c
  5032   0010E4  5C0E               	subwf	___fladd@aexp^0,w,c
  5033   0010E6  B0D8               	btfsc	status,0,c
  5034   0010E8  EF78  F008         	goto	u2131
  5035   0010EC  EF7A  F008         	goto	u2130
  5036   0010F0                     u2131:
  5037   0010F0  EFA1  F008         	goto	l2400
  5038   0010F4                     u2130:
  5039   0010F4  AC0D               	btfss	___fladd@signs^0,6,c
  5040   0010F6  EF7F  F008         	goto	u2141
  5041   0010FA  EF81  F008         	goto	u2140
  5042   0010FE                     u2141:
  5043   0010FE  EF83  F008         	goto	l2370
  5044   001102                     u2140:
  5045   001102  0E80               	movlw	128
  5046   001104  1A0D               	xorwf	___fladd@signs^0,f,c
  5047   001106                     l2370:
  5048   001106  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5049   00110A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5050   00110E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5051   001112  C001  F010         	movff	___fladd@b,___fladd@grs
  5052   001116  C005  F001         	movff	___fladd@a,___fladd@b
  5053   00111A  C010  F005         	movff	___fladd@grs,___fladd@a
  5054   00111E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5055   001122  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5056   001126  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5057   00112A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5058   00112E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5059   001132  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5060   001136  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5061   00113A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5062   00113E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5063   001142                     l2400:
  5064   001142  6A10               	clrf	___fladd@grs^0,c
  5065   001144  500F               	movf	___fladd@bexp^0,w,c
  5066   001146  C00E  F009         	movff	___fladd@aexp,??___fladd
  5067   00114A  6A0A               	clrf	(??___fladd+1)^0,c
  5068   00114C  5E09               	subwf	??___fladd^0,f,c
  5069   00114E  0E00               	movlw	0
  5070   001150  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5071   001152  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5072   001154  EFB5  F008         	goto	u2151
  5073   001158  500A               	movf	(??___fladd+1)^0,w,c
  5074   00115A  E109               	bnz	u2150
  5075   00115C  0E1A               	movlw	26
  5076   00115E  5C09               	subwf	??___fladd^0,w,c
  5077   001160  A0D8               	btfss	status,0,c
  5078   001162  EFB5  F008         	goto	u2151
  5079   001166  EFB7  F008         	goto	u2150
  5080   00116A                     u2151:
  5081   00116A  EFEE  F008         	goto	l711
  5082   00116E                     u2150:
  5083   00116E  5001               	movf	___fladd@b^0,w,c
  5084   001170  1002               	iorwf	(___fladd@b+1)^0,w,c
  5085   001172  1003               	iorwf	(___fladd@b+2)^0,w,c
  5086   001174  1004               	iorwf	(___fladd@b+3)^0,w,c
  5087   001176  A4D8               	btfss	status,2,c
  5088   001178  EFC0  F008         	goto	u2161
  5089   00117C  EFC3  F008         	goto	u2160
  5090   001180                     u2161:
  5091   001180  0E01               	movlw	1
  5092   001182  EFC4  F008         	goto	u2170
  5093   001186                     u2160:
  5094   001186  0E00               	movlw	0
  5095   001188                     u2170:
  5096   001188  6E10               	movwf	___fladd@grs^0,c
  5097   00118A  0E00               	movlw	0
  5098   00118C  6E01               	movwf	___fladd@b^0,c
  5099   00118E  0E00               	movlw	0
  5100   001190  6E02               	movwf	(___fladd@b+1)^0,c
  5101   001192  0E00               	movlw	0
  5102   001194  6E03               	movwf	(___fladd@b+2)^0,c
  5103   001196  0E00               	movlw	0
  5104   001198  6E04               	movwf	(___fladd@b+3)^0,c
  5105   00119A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5106   00119E  EFF7  F008         	goto	l710
  5107   0011A2                     l712:
  5108   0011A2  A010               	btfss	___fladd@grs^0,0,c
  5109   0011A4  EFD6  F008         	goto	u2181
  5110   0011A8  EFD8  F008         	goto	u2180
  5111   0011AC                     u2181:
  5112   0011AC  EFDE  F008         	goto	l2410
  5113   0011B0                     u2180:
  5114   0011B0  90D8               	bcf	status,0,c
  5115   0011B2  3010               	rrcf	___fladd@grs^0,w,c
  5116   0011B4  0901               	iorlw	1
  5117   0011B6  6E10               	movwf	___fladd@grs^0,c
  5118   0011B8  EFE0  F008         	goto	l2412
  5119   0011BC                     l2410:
  5120   0011BC  90D8               	bcf	status,0,c
  5121   0011BE  3210               	rrcf	___fladd@grs^0,f,c
  5122   0011C0                     l2412:
  5123   0011C0  A001               	btfss	___fladd@b^0,0,c
  5124   0011C2  EFE5  F008         	goto	u2191
  5125   0011C6  EFE7  F008         	goto	u2190
  5126   0011CA                     u2191:
  5127   0011CA  EFE8  F008         	goto	l2416
  5128   0011CE                     u2190:
  5129   0011CE  8E10               	bsf	___fladd@grs^0,7,c
  5130   0011D0                     l2416:
  5131   0011D0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5132   0011D2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5133   0011D4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5134   0011D6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5135   0011D8  3201               	rrcf	___fladd@b^0,f,c
  5136   0011DA  2A0F               	incf	___fladd@bexp^0,f,c
  5137   0011DC                     l711:
  5138   0011DC  500E               	movf	___fladd@aexp^0,w,c
  5139   0011DE  5C0F               	subwf	___fladd@bexp^0,w,c
  5140   0011E0  A0D8               	btfss	status,0,c
  5141   0011E2  EFF5  F008         	goto	u2201
  5142   0011E6  EFF7  F008         	goto	u2200
  5143   0011EA                     u2201:
  5144   0011EA  EFD1  F008         	goto	l712
  5145   0011EE                     u2200:
  5146   0011EE                     l710:
  5147   0011EE  BC0D               	btfsc	___fladd@signs^0,6,c
  5148   0011F0  EFFC  F008         	goto	u2211
  5149   0011F4  EFFE  F008         	goto	u2210
  5150   0011F8                     u2211:
  5151   0011F8  EF3E  F009         	goto	l2444
  5152   0011FC                     u2210:
  5153   0011FC  500F               	movf	___fladd@bexp^0,w,c
  5154   0011FE  A4D8               	btfss	status,2,c
  5155   001200  EF04  F009         	goto	u2221
  5156   001204  EF06  F009         	goto	u2220
  5157   001208                     u2221:
  5158   001208  EF10  F009         	goto	l2426
  5159   00120C                     u2220:
  5160   00120C  0E00               	movlw	0
  5161   00120E  6E01               	movwf	?___fladd^0,c
  5162   001210  0E00               	movlw	0
  5163   001212  6E02               	movwf	(?___fladd+1)^0,c
  5164   001214  0E00               	movlw	0
  5165   001216  6E03               	movwf	(?___fladd+2)^0,c
  5166   001218  0E00               	movlw	0
  5167   00121A  6E04               	movwf	(?___fladd+3)^0,c
  5168   00121C  EF5D  F00A         	goto	l719
  5169   001220                     l2426:
  5170   001220  5005               	movf	___fladd@a^0,w,c
  5171   001222  2601               	addwf	___fladd@b^0,f,c
  5172   001224  5006               	movf	(___fladd@a+1)^0,w,c
  5173   001226  2202               	addwfc	(___fladd@b+1)^0,f,c
  5174   001228  5007               	movf	(___fladd@a+2)^0,w,c
  5175   00122A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5176   00122C  5008               	movf	(___fladd@a+3)^0,w,c
  5177   00122E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5178   001230  A004               	btfss	(___fladd@b+3)^0,0,c
  5179   001232  EF1D  F009         	goto	u2231
  5180   001236  EF1F  F009         	goto	u2230
  5181   00123A                     u2231:
  5182   00123A  EFCB  F009         	goto	l724
  5183   00123E                     u2230:
  5184   00123E  A010               	btfss	___fladd@grs^0,0,c
  5185   001240  EF24  F009         	goto	u2241
  5186   001244  EF26  F009         	goto	u2240
  5187   001248                     u2241:
  5188   001248  EF2C  F009         	goto	l2434
  5189   00124C                     u2240:
  5190   00124C  90D8               	bcf	status,0,c
  5191   00124E  3010               	rrcf	___fladd@grs^0,w,c
  5192   001250  0901               	iorlw	1
  5193   001252  6E10               	movwf	___fladd@grs^0,c
  5194   001254  EF2E  F009         	goto	l2436
  5195   001258                     l2434:
  5196   001258  90D8               	bcf	status,0,c
  5197   00125A  3210               	rrcf	___fladd@grs^0,f,c
  5198   00125C                     l2436:
  5199   00125C  A001               	btfss	___fladd@b^0,0,c
  5200   00125E  EF33  F009         	goto	u2251
  5201   001262  EF35  F009         	goto	u2250
  5202   001266                     u2251:
  5203   001266  EF36  F009         	goto	l2440
  5204   00126A                     u2250:
  5205   00126A  8E10               	bsf	___fladd@grs^0,7,c
  5206   00126C                     l2440:
  5207   00126C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5208   00126E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5209   001270  3203               	rrcf	(___fladd@b+2)^0,f,c
  5210   001272  3202               	rrcf	(___fladd@b+1)^0,f,c
  5211   001274  3201               	rrcf	___fladd@b^0,f,c
  5212   001276  2A0F               	incf	___fladd@bexp^0,f,c
  5213   001278  EFCB  F009         	goto	l724
  5214   00127C                     l2444:
  5215   00127C  5005               	movf	___fladd@a^0,w,c
  5216   00127E  5C01               	subwf	___fladd@b^0,w,c
  5217   001280  5006               	movf	(___fladd@a+1)^0,w,c
  5218   001282  5802               	subwfb	(___fladd@b+1)^0,w,c
  5219   001284  5007               	movf	(___fladd@a+2)^0,w,c
  5220   001286  5803               	subwfb	(___fladd@b+2)^0,w,c
  5221   001288  5004               	movf	(___fladd@b+3)^0,w,c
  5222   00128A  0A80               	xorlw	128
  5223   00128C  6E09               	movwf	??___fladd^0,c
  5224   00128E  5008               	movf	(___fladd@a+3)^0,w,c
  5225   001290  0A80               	xorlw	128
  5226   001292  5809               	subwfb	??___fladd^0,w,c
  5227   001294  B0D8               	btfsc	status,0,c
  5228   001296  EF4F  F009         	goto	u2261
  5229   00129A  EF51  F009         	goto	u2260
  5230   00129E                     u2261:
  5231   00129E  EF7C  F009         	goto	l2454
  5232   0012A2                     u2260:
  5233   0012A2  5001               	movf	___fladd@b^0,w,c
  5234   0012A4  5C05               	subwf	___fladd@a^0,w,c
  5235   0012A6  6E09               	movwf	??___fladd^0,c
  5236   0012A8  5002               	movf	(___fladd@b+1)^0,w,c
  5237   0012AA  5806               	subwfb	(___fladd@a+1)^0,w,c
  5238   0012AC  6E0A               	movwf	(??___fladd+1)^0,c
  5239   0012AE  5003               	movf	(___fladd@b+2)^0,w,c
  5240   0012B0  5807               	subwfb	(___fladd@a+2)^0,w,c
  5241   0012B2  6E0B               	movwf	(??___fladd+2)^0,c
  5242   0012B4  5004               	movf	(___fladd@b+3)^0,w,c
  5243   0012B6  5808               	subwfb	(___fladd@a+3)^0,w,c
  5244   0012B8  6E0C               	movwf	(??___fladd+3)^0,c
  5245   0012BA  0EFF               	movlw	255
  5246   0012BC  2409               	addwf	??___fladd^0,w,c
  5247   0012BE  6E01               	movwf	___fladd@b^0,c
  5248   0012C0  0EFF               	movlw	255
  5249   0012C2  200A               	addwfc	(??___fladd+1)^0,w,c
  5250   0012C4  6E02               	movwf	(___fladd@b+1)^0,c
  5251   0012C6  0EFF               	movlw	255
  5252   0012C8  200B               	addwfc	(??___fladd+2)^0,w,c
  5253   0012CA  6E03               	movwf	(___fladd@b+2)^0,c
  5254   0012CC  0EFF               	movlw	255
  5255   0012CE  200C               	addwfc	(??___fladd+3)^0,w,c
  5256   0012D0  6E04               	movwf	(___fladd@b+3)^0,c
  5257   0012D2  0E80               	movlw	128
  5258   0012D4  1A0D               	xorwf	___fladd@signs^0,f,c
  5259   0012D6  6C10               	negf	___fladd@grs^0,c
  5260   0012D8  5010               	movf	___fladd@grs^0,w,c
  5261   0012DA  A4D8               	btfss	status,2,c
  5262   0012DC  EF72  F009         	goto	u2271
  5263   0012E0  EF74  F009         	goto	u2270
  5264   0012E4                     u2271:
  5265   0012E4  EF84  F009         	goto	l727
  5266   0012E8                     u2270:
  5267   0012E8  0E01               	movlw	1
  5268   0012EA  2601               	addwf	___fladd@b^0,f,c
  5269   0012EC  0E00               	movlw	0
  5270   0012EE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5271   0012F0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5272   0012F2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5273   0012F4  EF84  F009         	goto	l727
  5274   0012F8                     l2454:
  5275   0012F8  5005               	movf	___fladd@a^0,w,c
  5276   0012FA  5E01               	subwf	___fladd@b^0,f,c
  5277   0012FC  5006               	movf	(___fladd@a+1)^0,w,c
  5278   0012FE  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5279   001300  5007               	movf	(___fladd@a+2)^0,w,c
  5280   001302  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5281   001304  5008               	movf	(___fladd@a+3)^0,w,c
  5282   001306  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5283   001308                     l727:
  5284   001308  5001               	movf	___fladd@b^0,w,c
  5285   00130A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5286   00130C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5287   00130E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5288   001310  A4D8               	btfss	status,2,c
  5289   001312  EF8D  F009         	goto	u2281
  5290   001316  EF8F  F009         	goto	u2280
  5291   00131A                     u2281:
  5292   00131A  EFC4  F009         	goto	l2478
  5293   00131E                     u2280:
  5294   00131E  5010               	movf	___fladd@grs^0,w,c
  5295   001320  A4D8               	btfss	status,2,c
  5296   001322  EF95  F009         	goto	u2291
  5297   001326  EF97  F009         	goto	u2290
  5298   00132A                     u2291:
  5299   00132A  EFC4  F009         	goto	l2478
  5300   00132E                     u2290:
  5301   00132E  0E00               	movlw	0
  5302   001330  6E01               	movwf	?___fladd^0,c
  5303   001332  0E00               	movlw	0
  5304   001334  6E02               	movwf	(?___fladd+1)^0,c
  5305   001336  0E00               	movlw	0
  5306   001338  6E03               	movwf	(?___fladd+2)^0,c
  5307   00133A  0E00               	movlw	0
  5308   00133C  6E04               	movwf	(?___fladd+3)^0,c
  5309   00133E  EF5D  F00A         	goto	l719
  5310   001342                     l2462:
  5311   001342  90D8               	bcf	status,0,c
  5312   001344  3601               	rlcf	___fladd@b^0,f,c
  5313   001346  3602               	rlcf	(___fladd@b+1)^0,f,c
  5314   001348  3603               	rlcf	(___fladd@b+2)^0,f,c
  5315   00134A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5316   00134C  AE10               	btfss	___fladd@grs^0,7,c
  5317   00134E  EFAB  F009         	goto	u2301
  5318   001352  EFAD  F009         	goto	u2300
  5319   001356                     u2301:
  5320   001356  EFAE  F009         	goto	l2468
  5321   00135A                     u2300:
  5322   00135A  8001               	bsf	___fladd@b^0,0,c
  5323   00135C                     l2468:
  5324   00135C  A010               	btfss	___fladd@grs^0,0,c
  5325   00135E  EFB3  F009         	goto	u2311
  5326   001362  EFB5  F009         	goto	u2310
  5327   001366                     u2311:
  5328   001366  EFB9  F009         	goto	l2472
  5329   00136A                     u2310:
  5330   00136A  80D8               	bsf	status,0,c
  5331   00136C  3610               	rlcf	___fladd@grs^0,f,c
  5332   00136E  EFBB  F009         	goto	l2474
  5333   001372                     l2472:
  5334   001372  90D8               	bcf	status,0,c
  5335   001374  3610               	rlcf	___fladd@grs^0,f,c
  5336   001376                     l2474:
  5337   001376  500F               	movf	___fladd@bexp^0,w,c
  5338   001378  B4D8               	btfsc	status,2,c
  5339   00137A  EFC1  F009         	goto	u2321
  5340   00137E  EFC3  F009         	goto	u2320
  5341   001382                     u2321:
  5342   001382  EFC4  F009         	goto	l2478
  5343   001386                     u2320:
  5344   001386  060F               	decf	___fladd@bexp^0,f,c
  5345   001388                     l2478:
  5346   001388  AE03               	btfss	(___fladd@b+2)^0,7,c
  5347   00138A  EFC9  F009         	goto	u2331
  5348   00138E  EFCB  F009         	goto	u2330
  5349   001392                     u2331:
  5350   001392  EFA1  F009         	goto	l2462
  5351   001396                     u2330:
  5352   001396                     l724:
  5353   001396  6A0E               	clrf	___fladd@aexp^0,c
  5354   001398  AE10               	btfss	___fladd@grs^0,7,c
  5355   00139A  EFD1  F009         	goto	u2341
  5356   00139E  EFD3  F009         	goto	u2340
  5357   0013A2                     u2341:
  5358   0013A2  EFEB  F009         	goto	l736
  5359   0013A6                     u2340:
  5360   0013A6  C010  F009         	movff	___fladd@grs,??___fladd
  5361   0013AA  0E7F               	movlw	127
  5362   0013AC  1609               	andwf	??___fladd^0,f,c
  5363   0013AE  B4D8               	btfsc	status,2,c
  5364   0013B0  EFDC  F009         	goto	u2351
  5365   0013B4  EFDE  F009         	goto	u2350
  5366   0013B8                     u2351:
  5367   0013B8  EFE2  F009         	goto	l737
  5368   0013BC                     u2350:
  5369   0013BC                     l2482:
  5370   0013BC  0E01               	movlw	1
  5371   0013BE  6E0E               	movwf	___fladd@aexp^0,c
  5372   0013C0  EFEB  F009         	goto	l736
  5373   0013C4                     l737:
  5374   0013C4  A001               	btfss	___fladd@b^0,0,c
  5375   0013C6  EFE7  F009         	goto	u2361
  5376   0013CA  EFE9  F009         	goto	u2360
  5377   0013CE                     u2361:
  5378   0013CE  EFEB  F009         	goto	l736
  5379   0013D2                     u2360:
  5380   0013D2  EFDE  F009         	goto	l2482
  5381   0013D6                     l736:
  5382   0013D6  500E               	movf	___fladd@aexp^0,w,c
  5383   0013D8  B4D8               	btfsc	status,2,c
  5384   0013DA  EFF1  F009         	goto	u2371
  5385   0013DE  EFF3  F009         	goto	u2370
  5386   0013E2                     u2371:
  5387   0013E2  EF1E  F00A         	goto	l2494
  5388   0013E6                     u2370:
  5389   0013E6  0E01               	movlw	1
  5390   0013E8  2601               	addwf	___fladd@b^0,f,c
  5391   0013EA  0E00               	movlw	0
  5392   0013EC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5393   0013EE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5394   0013F0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5395   0013F2  A004               	btfss	(___fladd@b+3)^0,0,c
  5396   0013F4  EFFE  F009         	goto	u2381
  5397   0013F8  EF00  F00A         	goto	u2380
  5398   0013FC                     u2381:
  5399   0013FC  EF1E  F00A         	goto	l2494
  5400   001400                     u2380:
  5401   001400  C001  F009         	movff	___fladd@b,??___fladd
  5402   001404  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5403   001408  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5404   00140C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5405   001410  340C               	rlcf	(??___fladd+3)^0,w,c
  5406   001412  320C               	rrcf	(??___fladd+3)^0,f,c
  5407   001414  320B               	rrcf	(??___fladd+2)^0,f,c
  5408   001416  320A               	rrcf	(??___fladd+1)^0,f,c
  5409   001418  3209               	rrcf	??___fladd^0,f,c
  5410   00141A  C009  F001         	movff	??___fladd,___fladd@b
  5411   00141E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5412   001422  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5413   001426  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5414   00142A  280F               	incf	___fladd@bexp^0,w,c
  5415   00142C  B4D8               	btfsc	status,2,c
  5416   00142E  EF1B  F00A         	goto	u2391
  5417   001432  EF1D  F00A         	goto	u2390
  5418   001436                     u2391:
  5419   001436  EF1E  F00A         	goto	l2494
  5420   00143A                     u2390:
  5421   00143A  2A0F               	incf	___fladd@bexp^0,f,c
  5422   00143C                     l2494:
  5423   00143C  280F               	incf	___fladd@bexp^0,w,c
  5424   00143E  B4D8               	btfsc	status,2,c
  5425   001440  EF24  F00A         	goto	u2401
  5426   001444  EF26  F00A         	goto	u2400
  5427   001448                     u2401:
  5428   001448  EF2E  F00A         	goto	l2498
  5429   00144C                     u2400:
  5430   00144C  500F               	movf	___fladd@bexp^0,w,c
  5431   00144E  A4D8               	btfss	status,2,c
  5432   001450  EF2C  F00A         	goto	u2411
  5433   001454  EF2E  F00A         	goto	u2410
  5434   001458                     u2411:
  5435   001458  EF3F  F00A         	goto	l743
  5436   00145C                     u2410:
  5437   00145C                     l2498:
  5438   00145C  0E00               	movlw	0
  5439   00145E  6E01               	movwf	___fladd@b^0,c
  5440   001460  0E00               	movlw	0
  5441   001462  6E02               	movwf	(___fladd@b+1)^0,c
  5442   001464  0E00               	movlw	0
  5443   001466  6E03               	movwf	(___fladd@b+2)^0,c
  5444   001468  0E00               	movlw	0
  5445   00146A  6E04               	movwf	(___fladd@b+3)^0,c
  5446   00146C  500F               	movf	___fladd@bexp^0,w,c
  5447   00146E  A4D8               	btfss	status,2,c
  5448   001470  EF3C  F00A         	goto	u2421
  5449   001474  EF3E  F00A         	goto	u2420
  5450   001478                     u2421:
  5451   001478  EF3F  F00A         	goto	l743
  5452   00147C                     u2420:
  5453   00147C  6A0D               	clrf	___fladd@signs^0,c
  5454   00147E                     l743:
  5455   00147E  A00F               	btfss	___fladd@bexp^0,0,c
  5456   001480  EF44  F00A         	goto	u2431
  5457   001484  EF46  F00A         	goto	u2430
  5458   001488                     u2431:
  5459   001488  EF49  F00A         	goto	l2504
  5460   00148C                     u2430:
  5461   00148C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5462   00148E  EF4A  F00A         	goto	l2506
  5463   001492                     l2504:
  5464   001492  9E03               	bcf	(___fladd@b+2)^0,7,c
  5465   001494                     l2506:
  5466   001494  90D8               	bcf	status,0,c
  5467   001496  300F               	rrcf	___fladd@bexp^0,w,c
  5468   001498  6E04               	movwf	(___fladd@b+3)^0,c
  5469   00149A  AE0D               	btfss	___fladd@signs^0,7,c
  5470   00149C  EF52  F00A         	goto	u2441
  5471   0014A0  EF54  F00A         	goto	u2440
  5472   0014A4                     u2441:
  5473   0014A4  EF55  F00A         	goto	l2512
  5474   0014A8                     u2440:
  5475   0014A8  8E04               	bsf	(___fladd@b+3)^0,7,c
  5476   0014AA                     l2512:
  5477   0014AA  C001  F001         	movff	___fladd@b,?___fladd
  5478   0014AE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5479   0014B2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5480   0014B6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5481   0014BA                     l719:
  5482   0014BA  0012               	return		;funcret
  5483   0014BC                     __end_of___fladd:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function ___flneg *****************
  5487 ;; Defined at:
  5488 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  f1              4    0[COMRAM] unsigned char 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  4    0[COMRAM] unsigned char 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5502 ;;      Params:         4       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0
  5505 ;;      Totals:         4       0       0       0       0       0       0
  5506 ;;Total ram usage:        4 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_efgtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text18
  5516   002C34                     __ptext18:
  5517                           	callstack 0
  5518   002C34                     ___flneg:
  5519                           	callstack 26
  5520   002C34  5001               	movf	___flneg@f1^0,w,c
  5521   002C36  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5522   002C38  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5523   002C3A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5524   002C3C  B4D8               	btfsc	status,2,c
  5525   002C3E  EF23  F016         	goto	u2961
  5526   002C42  EF25  F016         	goto	u2960
  5527   002C46                     u2961:
  5528   002C46  EF2D  F016         	goto	l2836
  5529   002C4A                     u2960:
  5530   002C4A  0E00               	movlw	0
  5531   002C4C  1A01               	xorwf	___flneg@f1^0,f,c
  5532   002C4E  0E00               	movlw	0
  5533   002C50  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5534   002C52  0E00               	movlw	0
  5535   002C54  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5536   002C56  0E80               	movlw	128
  5537   002C58  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5538   002C5A                     l2836:
  5539   002C5A  C001  F001         	movff	___flneg@f1,?___flneg
  5540   002C5E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5541   002C62  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5542   002C66  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5543   002C6A  0012               	return		;funcret
  5544   002C6C                     __end_of___flneg:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function ___flge *****************
  5548 ;; Defined at:
  5549 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  ff1             4   39[COMRAM] unsigned char 
  5552 ;;  ff2             4   43[COMRAM] unsigned char 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;		None               void
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5564 ;;      Params:         8       0       0       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0       0       0
  5566 ;;      Temps:          4       0       0       0       0       0       0
  5567 ;;      Totals:        12       0       0       0       0       0       0
  5568 ;;Total ram usage:       12 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_efgtoa
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text19
  5578   00230C                     __ptext19:
  5579                           	callstack 0
  5580   00230C                     ___flge:
  5581                           	callstack 26
  5582   00230C  0E00               	movlw	0
  5583   00230E  1428               	andwf	___flge@ff1^0,w,c
  5584   002310  6E30               	movwf	??___flge^0,c
  5585   002312  0E00               	movlw	0
  5586   002314  1429               	andwf	(___flge@ff1+1)^0,w,c
  5587   002316  6E31               	movwf	(??___flge+1)^0,c
  5588   002318  0E80               	movlw	128
  5589   00231A  142A               	andwf	(___flge@ff1+2)^0,w,c
  5590   00231C  6E32               	movwf	(??___flge+2)^0,c
  5591   00231E  0E7F               	movlw	127
  5592   002320  142B               	andwf	(___flge@ff1+3)^0,w,c
  5593   002322  6E33               	movwf	(??___flge+3)^0,c
  5594   002324  5030               	movf	??___flge^0,w,c
  5595   002326  1031               	iorwf	(??___flge+1)^0,w,c
  5596   002328  1032               	iorwf	(??___flge+2)^0,w,c
  5597   00232A  1033               	iorwf	(??___flge+3)^0,w,c
  5598   00232C  A4D8               	btfss	status,2,c
  5599   00232E  EF9B  F011         	goto	u2911
  5600   002332  EF9D  F011         	goto	u2910
  5601   002336                     u2911:
  5602   002336  EFA5  F011         	goto	l2814
  5603   00233A                     u2910:
  5604   00233A  0E00               	movlw	0
  5605   00233C  6E28               	movwf	___flge@ff1^0,c
  5606   00233E  0E00               	movlw	0
  5607   002340  6E29               	movwf	(___flge@ff1+1)^0,c
  5608   002342  0E00               	movlw	0
  5609   002344  6E2A               	movwf	(___flge@ff1+2)^0,c
  5610   002346  0E00               	movlw	0
  5611   002348  6E2B               	movwf	(___flge@ff1+3)^0,c
  5612   00234A                     l2814:
  5613   00234A  0E00               	movlw	0
  5614   00234C  142C               	andwf	___flge@ff2^0,w,c
  5615   00234E  6E30               	movwf	??___flge^0,c
  5616   002350  0E00               	movlw	0
  5617   002352  142D               	andwf	(___flge@ff2+1)^0,w,c
  5618   002354  6E31               	movwf	(??___flge+1)^0,c
  5619   002356  0E80               	movlw	128
  5620   002358  142E               	andwf	(___flge@ff2+2)^0,w,c
  5621   00235A  6E32               	movwf	(??___flge+2)^0,c
  5622   00235C  0E7F               	movlw	127
  5623   00235E  142F               	andwf	(___flge@ff2+3)^0,w,c
  5624   002360  6E33               	movwf	(??___flge+3)^0,c
  5625   002362  5030               	movf	??___flge^0,w,c
  5626   002364  1031               	iorwf	(??___flge+1)^0,w,c
  5627   002366  1032               	iorwf	(??___flge+2)^0,w,c
  5628   002368  1033               	iorwf	(??___flge+3)^0,w,c
  5629   00236A  A4D8               	btfss	status,2,c
  5630   00236C  EFBA  F011         	goto	u2921
  5631   002370  EFBC  F011         	goto	u2920
  5632   002374                     u2921:
  5633   002374  EFC4  F011         	goto	l2818
  5634   002378                     u2920:
  5635   002378  0E00               	movlw	0
  5636   00237A  6E2C               	movwf	___flge@ff2^0,c
  5637   00237C  0E00               	movlw	0
  5638   00237E  6E2D               	movwf	(___flge@ff2+1)^0,c
  5639   002380  0E00               	movlw	0
  5640   002382  6E2E               	movwf	(___flge@ff2+2)^0,c
  5641   002384  0E00               	movlw	0
  5642   002386  6E2F               	movwf	(___flge@ff2+3)^0,c
  5643   002388                     l2818:
  5644   002388  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5645   00238A  EFC9  F011         	goto	u2931
  5646   00238E  EFCB  F011         	goto	u2930
  5647   002392                     u2931:
  5648   002392  EFD4  F011         	goto	l2822
  5649   002396                     u2930:
  5650   002396  6C28               	negf	___flge@ff1^0,c
  5651   002398  1E29               	comf	(___flge@ff1+1)^0,f,c
  5652   00239A  B0D8               	btfsc	status,0,c
  5653   00239C  2A29               	incf	(___flge@ff1+1)^0,f,c
  5654   00239E  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5655   0023A0  B0D8               	btfsc	status,0,c
  5656   0023A2  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5657   0023A4  0E80               	movlw	128
  5658   0023A6  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5659   0023A8                     l2822:
  5660   0023A8  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5661   0023AA  EFD9  F011         	goto	u2941
  5662   0023AE  EFDB  F011         	goto	u2940
  5663   0023B2                     u2941:
  5664   0023B2  EFE4  F011         	goto	l447
  5665   0023B6                     u2940:
  5666   0023B6  6C2C               	negf	___flge@ff2^0,c
  5667   0023B8  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5668   0023BA  B0D8               	btfsc	status,0,c
  5669   0023BC  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5670   0023BE  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5671   0023C0  B0D8               	btfsc	status,0,c
  5672   0023C2  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5673   0023C4  0E80               	movlw	128
  5674   0023C6  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5675   0023C8                     l447:
  5676   0023C8  0E00               	movlw	0
  5677   0023CA  1A28               	xorwf	___flge@ff1^0,f,c
  5678   0023CC  0E00               	movlw	0
  5679   0023CE  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5680   0023D0  0E00               	movlw	0
  5681   0023D2  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5682   0023D4  0E80               	movlw	128
  5683   0023D6  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5684   0023D8  0E00               	movlw	0
  5685   0023DA  1A2C               	xorwf	___flge@ff2^0,f,c
  5686   0023DC  0E00               	movlw	0
  5687   0023DE  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5688   0023E0  0E00               	movlw	0
  5689   0023E2  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5690   0023E4  0E80               	movlw	128
  5691   0023E6  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5692   0023E8  502C               	movf	___flge@ff2^0,w,c
  5693   0023EA  5C28               	subwf	___flge@ff1^0,w,c
  5694   0023EC  502D               	movf	(___flge@ff2+1)^0,w,c
  5695   0023EE  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5696   0023F0  502E               	movf	(___flge@ff2+2)^0,w,c
  5697   0023F2  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5698   0023F4  502F               	movf	(___flge@ff2+3)^0,w,c
  5699   0023F6  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5700   0023F8  B0D8               	btfsc	status,0,c
  5701   0023FA  EF01  F012         	goto	u2951
  5702   0023FE  EF03  F012         	goto	u2950
  5703   002402                     u2951:
  5704   002402  EF06  F012         	goto	l2828
  5705   002406                     u2950:
  5706   002406  90D8               	bcf	status,0,c
  5707   002408  EF07  F012         	goto	l452
  5708   00240C                     l2828:
  5709   00240C  80D8               	bsf	status,0,c
  5710   00240E                     l452:
  5711   00240E  0012               	return		;funcret
  5712   002410                     __end_of___flge:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function ___fleq *****************
  5716 ;; Defined at:
  5717 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  ff1             4    0[COMRAM] unsigned char 
  5720 ;;  ff2             4    4[COMRAM] unsigned char 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;		None               void
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5732 ;;      Params:         8       0       0       0       0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0       0
  5734 ;;      Temps:          4       0       0       0       0       0       0
  5735 ;;      Totals:        12       0       0       0       0       0       0
  5736 ;;Total ram usage:       12 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_efgtoa
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text20
  5746   0026B6                     __ptext20:
  5747                           	callstack 0
  5748   0026B6                     ___fleq:
  5749                           	callstack 26
  5750   0026B6  0E00               	movlw	0
  5751   0026B8  1401               	andwf	___fleq@ff1^0,w,c
  5752   0026BA  6E09               	movwf	??___fleq^0,c
  5753   0026BC  0E00               	movlw	0
  5754   0026BE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5755   0026C0  6E0A               	movwf	(??___fleq+1)^0,c
  5756   0026C2  0E80               	movlw	128
  5757   0026C4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5758   0026C6  6E0B               	movwf	(??___fleq+2)^0,c
  5759   0026C8  0E7F               	movlw	127
  5760   0026CA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5761   0026CC  6E0C               	movwf	(??___fleq+3)^0,c
  5762   0026CE  5009               	movf	??___fleq^0,w,c
  5763   0026D0  100A               	iorwf	(??___fleq+1)^0,w,c
  5764   0026D2  100B               	iorwf	(??___fleq+2)^0,w,c
  5765   0026D4  100C               	iorwf	(??___fleq+3)^0,w,c
  5766   0026D6  A4D8               	btfss	status,2,c
  5767   0026D8  EF70  F013         	goto	u2881
  5768   0026DC  EF72  F013         	goto	u2880
  5769   0026E0                     u2881:
  5770   0026E0  EF7A  F013         	goto	l2798
  5771   0026E4                     u2880:
  5772   0026E4  0E00               	movlw	0
  5773   0026E6  6E01               	movwf	___fleq@ff1^0,c
  5774   0026E8  0E00               	movlw	0
  5775   0026EA  6E02               	movwf	(___fleq@ff1+1)^0,c
  5776   0026EC  0E00               	movlw	0
  5777   0026EE  6E03               	movwf	(___fleq@ff1+2)^0,c
  5778   0026F0  0E00               	movlw	0
  5779   0026F2  6E04               	movwf	(___fleq@ff1+3)^0,c
  5780   0026F4                     l2798:
  5781   0026F4  0E00               	movlw	0
  5782   0026F6  1405               	andwf	___fleq@ff2^0,w,c
  5783   0026F8  6E09               	movwf	??___fleq^0,c
  5784   0026FA  0E00               	movlw	0
  5785   0026FC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5786   0026FE  6E0A               	movwf	(??___fleq+1)^0,c
  5787   002700  0E80               	movlw	128
  5788   002702  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5789   002704  6E0B               	movwf	(??___fleq+2)^0,c
  5790   002706  0E7F               	movlw	127
  5791   002708  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5792   00270A  6E0C               	movwf	(??___fleq+3)^0,c
  5793   00270C  5009               	movf	??___fleq^0,w,c
  5794   00270E  100A               	iorwf	(??___fleq+1)^0,w,c
  5795   002710  100B               	iorwf	(??___fleq+2)^0,w,c
  5796   002712  100C               	iorwf	(??___fleq+3)^0,w,c
  5797   002714  A4D8               	btfss	status,2,c
  5798   002716  EF8F  F013         	goto	u2891
  5799   00271A  EF91  F013         	goto	u2890
  5800   00271E                     u2891:
  5801   00271E  EF99  F013         	goto	l2802
  5802   002722                     u2890:
  5803   002722  0E00               	movlw	0
  5804   002724  6E05               	movwf	___fleq@ff2^0,c
  5805   002726  0E00               	movlw	0
  5806   002728  6E06               	movwf	(___fleq@ff2+1)^0,c
  5807   00272A  0E00               	movlw	0
  5808   00272C  6E07               	movwf	(___fleq@ff2+2)^0,c
  5809   00272E  0E00               	movlw	0
  5810   002730  6E08               	movwf	(___fleq@ff2+3)^0,c
  5811   002732                     l2802:
  5812   002732  5005               	movf	___fleq@ff2^0,w,c
  5813   002734  1801               	xorwf	___fleq@ff1^0,w,c
  5814   002736  E10F               	bnz	u2900
  5815   002738  5006               	movf	(___fleq@ff2+1)^0,w,c
  5816   00273A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5817   00273C  E10C               	bnz	u2900
  5818   00273E  5007               	movf	(___fleq@ff2+2)^0,w,c
  5819   002740  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5820   002742  E109               	bnz	u2900
  5821   002744  5008               	movf	(___fleq@ff2+3)^0,w,c
  5822   002746  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5823   002748  B4D8               	btfsc	status,2,c
  5824   00274A  EFA9  F013         	goto	u2901
  5825   00274E  EFAB  F013         	goto	u2900
  5826   002752                     u2901:
  5827   002752  EFAE  F013         	goto	l2806
  5828   002756                     u2900:
  5829   002756  90D8               	bcf	status,0,c
  5830   002758  EFAF  F013         	goto	l441
  5831   00275C                     l2806:
  5832   00275C  80D8               	bsf	status,0,c
  5833   00275E                     l441:
  5834   00275E  0012               	return		;funcret
  5835   002760                     __end_of___fleq:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function _lcd_string *****************
  5839 ;; Defined at:
  5840 ;;		line 40 in file "lcd.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  str             2    2[COMRAM] PTR const unsigned char 
  5843 ;;		 -> main@buffer(16), STR_2(6), STR_1(13), 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5855 ;;      Params:         2       0       0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0
  5858 ;;      Totals:         2       0       0       0       0       0       0
  5859 ;;Total ram usage:        2 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 2
  5862 ;; This function calls:
  5863 ;;		_lcd_data
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text21
  5870   00290A                     __ptext21:
  5871                           	callstack 0
  5872   00290A                     _lcd_string:
  5873                           	callstack 28
  5874   00290A                     
  5875                           ;lcd.c: 41:     while(*str) lcd_data(*str++);
  5876   00290A  EF9B  F014         	goto	l3366
  5877   00290E                     l3362:
  5878   00290E  C003  FFF6         	movff	lcd_string@str,tblptrl
  5879   002912  C004  FFF7         	movff	lcd_string@str+1,tblptrh
  5880   002916  6AF8               	clrf	tblptru,c
  5881   002918  0E05               	movlw	(high __ramtop+-1)
  5882   00291A  64F7               	cpfsgt	tblptrh,c
  5883   00291C  D003               	bra	u3747
  5884   00291E  0008               	tblrd		*
  5885   002920  50F5               	movf	tablat,w,c
  5886   002922  D005               	bra	u3740
  5887   002924                     u3747:
  5888   002924  CFF6 FFE1          	movff	tblptrl,fsr1l
  5889   002928  CFF7 FFE2          	movff	tblptrh,fsr1h
  5890   00292C  50E7               	movf	indf1,w,c
  5891   00292E                     u3740:
  5892   00292E  EC85  F016         	call	_lcd_data
  5893   002932  4A03               	infsnz	lcd_string@str^0,f,c
  5894   002934  2A04               	incf	(lcd_string@str+1)^0,f,c
  5895   002936                     l3366:
  5896   002936  C003  FFF6         	movff	lcd_string@str,tblptrl
  5897   00293A  C004  FFF7         	movff	lcd_string@str+1,tblptrh
  5898   00293E  6AF8               	clrf	tblptru,c
  5899   002940  0E05               	movlw	(high __ramtop+-1)
  5900   002942  64F7               	cpfsgt	tblptrh,c
  5901   002944  D003               	bra	u3757
  5902   002946  0008               	tblrd		*
  5903   002948  50F5               	movf	tablat,w,c
  5904   00294A  D005               	bra	u3750
  5905   00294C                     u3757:
  5906   00294C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5907   002950  CFF7 FFE2          	movff	tblptrh,fsr1h
  5908   002954  50E7               	movf	indf1,w,c
  5909   002956                     u3750:
  5910   002956  0900               	iorlw	0
  5911   002958  A4D8               	btfss	status,2,c
  5912   00295A  EFB1  F014         	goto	u3761
  5913   00295E  EFB3  F014         	goto	u3760
  5914   002962                     u3761:
  5915   002962  EF87  F014         	goto	l3362
  5916   002966                     u3760:
  5917   002966  0012               	return		;funcret
  5918   002968                     __end_of_lcd_string:
  5919                           	callstack 0
  5920                           
  5921 ;; *************** function _lcd_data *****************
  5922 ;; Defined at:
  5923 ;;		line 22 in file "lcd.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  data            1    wreg     unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  data            1    1[COMRAM] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      void 
  5930 ;; Registers used:
  5931 ;;		wreg, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5937 ;;      Params:         0       0       0       0       0       0       0
  5938 ;;      Locals:         1       0       0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0
  5940 ;;      Totals:         1       0       0       0       0       0       0
  5941 ;;Total ram usage:        1 bytes
  5942 ;; Hardware stack levels used: 1
  5943 ;; Hardware stack levels required when called: 1
  5944 ;; This function calls:
  5945 ;;		_lcd_enable
  5946 ;; This function is called by:
  5947 ;;		_lcd_string
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text22
  5952   002D0A                     __ptext22:
  5953                           	callstack 0
  5954   002D0A                     _lcd_data:
  5955                           	callstack 28
  5956                           
  5957                           ;incstack = 0
  5958                           ;lcd_data@data stored from wreg
  5959   002D0A  6E02               	movwf	lcd_data@data^0,c
  5960   002D0C                     
  5961                           ;lcd.c: 23:     PORTDbits.RD7 = 1;
  5962   002D0C  8E83               	bsf	131,7,c	;volatile
  5963   002D0E                     
  5964                           ;lcd.c: 24:     PORTB = data;
  5965   002D0E  C002  FF81         	movff	lcd_data@data,3969	;volatile
  5966   002D12                     
  5967                           ;lcd.c: 25:     lcd_enable();
  5968   002D12  EC79  F016         	call	_lcd_enable	;wreg free
  5969   002D16  0012               	return		;funcret
  5970   002D18                     __end_of_lcd_data:
  5971                           	callstack 0
  5972                           
  5973 ;; *************** function _lcd_set_cursor *****************
  5974 ;; Defined at:
  5975 ;;		line 44 in file "lcd.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  row             1    wreg     unsigned char 
  5978 ;;  col             1    2[COMRAM] unsigned char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  row             1    5[COMRAM] unsigned char 
  5981 ;;  positions       2    3[COMRAM] unsigned char [2]
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5991 ;;      Params:         1       0       0       0       0       0       0
  5992 ;;      Locals:         3       0       0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0
  5994 ;;      Totals:         4       0       0       0       0       0       0
  5995 ;;Total ram usage:        4 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 2
  5998 ;; This function calls:
  5999 ;;		_lcd_cmd
  6000 ;; This function is called by:
  6001 ;;		_main
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text23
  6006   002CD6                     __ptext23:
  6007                           	callstack 0
  6008   002CD6                     _lcd_set_cursor:
  6009                           	callstack 28
  6010                           
  6011                           ;incstack = 0
  6012                           ;lcd_set_cursor@row stored from wreg
  6013   002CD6  6E06               	movwf	lcd_set_cursor@row^0,c
  6014   002CD8                     
  6015                           ;lcd.c: 45:     unsigned char positions[] = {0x80, 0xC0};
  6016   002CD8  C07D  F004         	movff	lcd_set_cursor@F2720,lcd_set_cursor@positions
  6017   002CDC  C07E  F005         	movff	lcd_set_cursor@F2720+1,lcd_set_cursor@positions+1
  6018   002CE0                     
  6019                           ;lcd.c: 46:     lcd_cmd(positions[row] + col);
  6020   002CE0  5006               	movf	lcd_set_cursor@row^0,w,c
  6021   002CE2  0F04               	addlw	low lcd_set_cursor@positions
  6022   002CE4  6ED9               	movwf	fsr2l,c
  6023   002CE6  6ADA               	clrf	fsr2h,c
  6024   002CE8  50DF               	movf	indf2,w,c
  6025   002CEA  2403               	addwf	lcd_set_cursor@col^0,w,c
  6026   002CEC  EC8C  F016         	call	_lcd_cmd
  6027   002CF0  0012               	return		;funcret
  6028   002CF2                     __end_of_lcd_set_cursor:
  6029                           	callstack 0
  6030                           
  6031 ;; *************** function _lcd_init *****************
  6032 ;; Defined at:
  6033 ;;		line 28 in file "lcd.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6047 ;;      Params:         0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0
  6049 ;;      Temps:          1       0       0       0       0       0       0
  6050 ;;      Totals:         1       0       0       0       0       0       0
  6051 ;;Total ram usage:        1 bytes
  6052 ;; Hardware stack levels used: 1
  6053 ;; Hardware stack levels required when called: 2
  6054 ;; This function calls:
  6055 ;;		_lcd_cmd
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text24
  6062   002C6C                     __ptext24:
  6063                           	callstack 0
  6064   002C6C                     _lcd_init:
  6065                           	callstack 28
  6066   002C6C                     
  6067                           ;lcd.c: 29:     TRISB = 0x00;
  6068   002C6C  6A93               	clrf	147,c	;volatile
  6069                           
  6070                           ;lcd.c: 30:     TRISD7 = 0;
  6071   002C6E  9E95               	bcf	3989,7,c	;volatile
  6072                           
  6073                           ;lcd.c: 31:     TRISD1 = 0;
  6074   002C70  9295               	bcf	3989,1,c	;volatile
  6075   002C72                     
  6076                           ;lcd.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  6077   002C72  0E34               	movlw	52
  6078   002C74  6E03               	movwf	??_lcd_init^0,c
  6079   002C76  0EF2               	movlw	242
  6080   002C78                     u3857:
  6081   002C78  2EE8               	decfsz	wreg,f,c
  6082   002C7A  D7FE               	bra	u3857
  6083   002C7C  2E03               	decfsz	??_lcd_init^0,f,c
  6084   002C7E  D7FC               	bra	u3857
  6085   002C80                     
  6086                           ;lcd.c: 34:     lcd_cmd(0x38);
  6087   002C80  0E38               	movlw	56
  6088   002C82  EC8C  F016         	call	_lcd_cmd
  6089   002C86                     
  6090                           ;lcd.c: 35:     lcd_cmd(0x0C);
  6091   002C86  0E0C               	movlw	12
  6092   002C88  EC8C  F016         	call	_lcd_cmd
  6093   002C8C                     
  6094                           ;lcd.c: 36:     lcd_cmd(0x06);
  6095   002C8C  0E06               	movlw	6
  6096   002C8E  EC8C  F016         	call	_lcd_cmd
  6097   002C92                     
  6098                           ;lcd.c: 37:     lcd_cmd(0x01);
  6099   002C92  0E01               	movlw	1
  6100   002C94  EC8C  F016         	call	_lcd_cmd
  6101   002C98  0012               	return		;funcret
  6102   002C9A                     __end_of_lcd_init:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _lcd_cmd *****************
  6106 ;; Defined at:
  6107 ;;		line 16 in file "lcd.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  cmd             1    wreg     unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  cmd             1    1[COMRAM] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6121 ;;      Params:         0       0       0       0       0       0       0
  6122 ;;      Locals:         1       0       0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0
  6124 ;;      Totals:         1       0       0       0       0       0       0
  6125 ;;Total ram usage:        1 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; Hardware stack levels required when called: 1
  6128 ;; This function calls:
  6129 ;;		_lcd_enable
  6130 ;; This function is called by:
  6131 ;;		_lcd_init
  6132 ;;		_lcd_set_cursor
  6133 ;;		_lcd_clear
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text25
  6138   002D18                     __ptext25:
  6139                           	callstack 0
  6140   002D18                     _lcd_cmd:
  6141                           	callstack 28
  6142                           
  6143                           ;incstack = 0
  6144                           ;lcd_cmd@cmd stored from wreg
  6145   002D18  6E02               	movwf	lcd_cmd@cmd^0,c
  6146   002D1A                     
  6147                           ;lcd.c: 17:     PORTDbits.RD7 = 0;
  6148   002D1A  9E83               	bcf	131,7,c	;volatile
  6149   002D1C                     
  6150                           ;lcd.c: 18:     PORTB = cmd;
  6151   002D1C  C002  FF81         	movff	lcd_cmd@cmd,3969	;volatile
  6152   002D20                     
  6153                           ;lcd.c: 19:     lcd_enable();
  6154   002D20  EC79  F016         	call	_lcd_enable	;wreg free
  6155   002D24  0012               	return		;funcret
  6156   002D26                     __end_of_lcd_cmd:
  6157                           	callstack 0
  6158                           
  6159 ;; *************** function _lcd_enable *****************
  6160 ;; Defined at:
  6161 ;;		line 9 in file "lcd.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;		None
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  1    wreg      void 
  6168 ;; Registers used:
  6169 ;;		wreg
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6175 ;;      Params:         0       0       0       0       0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0
  6177 ;;      Temps:          1       0       0       0       0       0       0
  6178 ;;      Totals:         1       0       0       0       0       0       0
  6179 ;;Total ram usage:        1 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_lcd_cmd
  6185 ;;		_lcd_data
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text26
  6190   002CF2                     __ptext26:
  6191                           	callstack 0
  6192   002CF2                     _lcd_enable:
  6193                           	callstack 28
  6194   002CF2                     
  6195                           ;lcd.c: 10:     PORTDbits.RD1 = 1;
  6196   002CF2  8283               	bsf	131,1,c	;volatile
  6197                           
  6198                           ;lcd.c: 11:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  6199   002CF4  D000               	nop2		;2 cycle nop
  6200                           
  6201                           ;lcd.c: 12:     PORTDbits.RD1 = 0;
  6202   002CF6  9283               	bcf	131,1,c	;volatile
  6203   002CF8                     
  6204                           ;lcd.c: 13:     _delay((unsigned long)((2)*(8000000/4000.0)));
  6205   002CF8  0E06               	movlw	6
  6206   002CFA  6E01               	movwf	??_lcd_enable^0,c
  6207   002CFC  0E30               	movlw	48
  6208   002CFE                     u3867:
  6209   002CFE  2EE8               	decfsz	wreg,f,c
  6210   002D00  D7FE               	bra	u3867
  6211   002D02  2E01               	decfsz	??_lcd_enable^0,f,c
  6212   002D04  D7FC               	bra	u3867
  6213   002D06  D000               	nop2	
  6214   002D08  0012               	return		;funcret
  6215   002D0A                     __end_of_lcd_enable:
  6216                           	callstack 0
  6217                           
  6218 ;; *************** function _PWM_init *****************
  6219 ;; Defined at:
  6220 ;;		line 15 in file "pwm.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6234 ;;      Params:         0       0       0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0
  6237 ;;      Totals:         0       0       0       0       0       0       0
  6238 ;;Total ram usage:        0 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_main
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text27
  6248   002C9A                     __ptext27:
  6249                           	callstack 0
  6250   002C9A                     _PWM_init:
  6251                           	callstack 30
  6252   002C9A                     
  6253                           ;pwm.c: 18:     PR2 = (8000000 / (unsigned long)(500 * 4 * 16)) - 1;
  6254   002C9A  0EF9               	movlw	249
  6255   002C9C  6ECB               	movwf	203,c	;volatile
  6256                           
  6257                           ;pwm.c: 21:     CCP1CONbits.P1M = 0b00;
  6258   002C9E  0E3F               	movlw	-193
  6259   002CA0  16BD               	andwf	189,f,c	;volatile
  6260   002CA2                     
  6261                           ;pwm.c: 22:     TRISCbits.RC2 = 0;
  6262   002CA2  9494               	bcf	148,2,c	;volatile
  6263                           
  6264                           ;pwm.c: 25:     T2CONbits.T2CKPS = 0b10;
  6265   002CA4  50CA               	movf	202,w,c	;volatile
  6266   002CA6  0BFC               	andlw	-4
  6267   002CA8  0902               	iorlw	2
  6268   002CAA  6ECA               	movwf	202,c	;volatile
  6269   002CAC                     
  6270                           ;pwm.c: 26:     T2CONbits.TMR2ON = 1;
  6271   002CAC  84CA               	bsf	202,2,c	;volatile
  6272                           
  6273                           ;pwm.c: 29:     CCP1CONbits.CCP1M = 0b1100;
  6274   002CAE  50BD               	movf	189,w,c	;volatile
  6275   002CB0  0BF0               	andlw	-16
  6276   002CB2  090C               	iorlw	12
  6277   002CB4  6EBD               	movwf	189,c	;volatile
  6278   002CB6  0012               	return		;funcret
  6279   002CB8                     __end_of_PWM_init:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _PWM_control *****************
  6283 ;; Defined at:
  6284 ;;		line 32 in file "pwm.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  value           2    0[COMRAM] int 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6298 ;;      Params:         2       0       0       0       0       0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0
  6300 ;;      Temps:          2       0       0       0       0       0       0
  6301 ;;      Totals:         4       0       0       0       0       0       0
  6302 ;;Total ram usage:        4 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_main
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text28
  6312   002A14                     __ptext28:
  6313                           	callstack 0
  6314   002A14                     _PWM_control:
  6315                           	callstack 30
  6316   002A14                     
  6317                           ;pwm.c: 34:     if (value >= 0 && value <= 1023) {
  6318   002A14  BE02               	btfsc	(PWM_control@value+1)^0,7,c
  6319   002A16  EF0F  F015         	goto	u3791
  6320   002A1A  EF11  F015         	goto	u3790
  6321   002A1E                     u3791:
  6322   002A1E  EF33  F015         	goto	l88
  6323   002A22                     u3790:
  6324   002A22  BE02               	btfsc	(PWM_control@value+1)^0,7,c
  6325   002A24  EF1D  F015         	goto	u3800
  6326   002A28  0E04               	movlw	4
  6327   002A2A  5C02               	subwf	(PWM_control@value+1)^0,w,c
  6328   002A2C  B0D8               	btfsc	status,0,c
  6329   002A2E  EF1B  F015         	goto	u3801
  6330   002A32  EF1D  F015         	goto	u3800
  6331   002A36                     u3801:
  6332   002A36  EF33  F015         	goto	l88
  6333   002A3A                     u3800:
  6334   002A3A                     
  6335                           ;pwm.c: 35:         CCPR1L = (unsigned char)(value >> 2);
  6336   002A3A  C001  F003         	movff	PWM_control@value,??_PWM_control
  6337   002A3E  C002  F004         	movff	PWM_control@value+1,??_PWM_control+1
  6338   002A42  3404               	rlcf	(??_PWM_control+1)^0,w,c
  6339   002A44  3204               	rrcf	(??_PWM_control+1)^0,f,c
  6340   002A46  3203               	rrcf	??_PWM_control^0,f,c
  6341   002A48  3404               	rlcf	(??_PWM_control+1)^0,w,c
  6342   002A4A  3204               	rrcf	(??_PWM_control+1)^0,f,c
  6343   002A4C  3203               	rrcf	??_PWM_control^0,f,c
  6344   002A4E  5003               	movf	??_PWM_control^0,w,c
  6345   002A50  6EBE               	movwf	190,c	;volatile
  6346                           
  6347                           ;pwm.c: 36:         CCP1CONbits.DC1B = value & 0x03;
  6348   002A52  C001  F003         	movff	PWM_control@value,??_PWM_control
  6349   002A56  0E03               	movlw	3
  6350   002A58  1603               	andwf	??_PWM_control^0,f,c
  6351   002A5A  3A03               	swapf	??_PWM_control^0,f,c
  6352   002A5C  50BD               	movf	189,w,c	;volatile
  6353   002A5E  1803               	xorwf	??_PWM_control^0,w,c
  6354   002A60  0BCF               	andlw	-49
  6355   002A62  1803               	xorwf	??_PWM_control^0,w,c
  6356   002A64  6EBD               	movwf	189,c	;volatile
  6357   002A66                     l88:
  6358   002A66  0012               	return		;funcret
  6359   002A68                     __end_of_PWM_control:
  6360                           	callstack 0
  6361                           
  6362 ;; *************** function _ADC_read_temp *****************
  6363 ;; Defined at:
  6364 ;;		line 47 in file "adc.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  value           2   64[COMRAM] unsigned int 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  4   64[COMRAM] float 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6378 ;;      Params:         4       0       0       0       0       0       0
  6379 ;;      Locals:         4       0       0       0       0       0       0
  6380 ;;      Temps:          0       0       0       0       0       0       0
  6381 ;;      Totals:         8       0       0       0       0       0       0
  6382 ;;Total ram usage:        8 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 1
  6385 ;; This function calls:
  6386 ;;		___fldiv
  6387 ;;		___flmul
  6388 ;;		___xxtofl
  6389 ;; This function is called by:
  6390 ;;		_main
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text29
  6395   002804                     __ptext29:
  6396                           	callstack 0
  6397   002804                     _ADC_read_temp:
  6398                           	callstack 29
  6399   002804                     
  6400                           ;adc.c: 49:     return (value * 5.0 * 100.0) / 1023.0;
  6401   002804  0E00               	movlw	0
  6402   002806  6E13               	movwf	___flmul@a^0,c
  6403   002808  0E00               	movlw	0
  6404   00280A  6E14               	movwf	(___flmul@a+1)^0,c
  6405   00280C  0EA0               	movlw	160
  6406   00280E  6E15               	movwf	(___flmul@a+2)^0,c
  6407   002810  0E40               	movlw	64
  6408   002812  6E16               	movwf	(___flmul@a+3)^0,c
  6409   002814  C041  F001         	movff	ADC_read_temp@value,___xxtofl@val
  6410   002818  C042  F002         	movff	ADC_read_temp@value+1,___xxtofl@val+1
  6411   00281C  6A03               	clrf	(___xxtofl@val+2)^0,c
  6412   00281E  6A04               	clrf	(___xxtofl@val+3)^0,c
  6413   002820  0E00               	movlw	0
  6414   002822  EC29  F010         	call	___xxtofl
  6415   002826  C001  F00F         	movff	?___xxtofl,___flmul@b
  6416   00282A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6417   00282E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6418   002832  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6419   002836  EC5E  F00A         	call	___flmul	;wreg free
  6420   00283A  C00F  F045         	movff	?___flmul,_ADC_read_temp$1448
  6421   00283E  C010  F046         	movff	?___flmul+1,_ADC_read_temp$1448+1
  6422   002842  C011  F047         	movff	?___flmul+2,_ADC_read_temp$1448+2
  6423   002846  C012  F048         	movff	?___flmul+3,_ADC_read_temp$1448+3
  6424                           
  6425                           ;adc.c: 49:     return (value * 5.0 * 100.0) / 1023.0;
  6426   00284A  0E00               	movlw	0
  6427   00284C  6E13               	movwf	___flmul@a^0,c
  6428   00284E  0E00               	movlw	0
  6429   002850  6E14               	movwf	(___flmul@a+1)^0,c
  6430   002852  0EC8               	movlw	200
  6431   002854  6E15               	movwf	(___flmul@a+2)^0,c
  6432   002856  0E42               	movlw	66
  6433   002858  6E16               	movwf	(___flmul@a+3)^0,c
  6434   00285A  C045  F00F         	movff	_ADC_read_temp$1448,___flmul@b
  6435   00285E  C046  F010         	movff	_ADC_read_temp$1448+1,___flmul@b+1
  6436   002862  C047  F011         	movff	_ADC_read_temp$1448+2,___flmul@b+2
  6437   002866  C048  F012         	movff	_ADC_read_temp$1448+3,___flmul@b+3
  6438   00286A  EC5E  F00A         	call	___flmul	;wreg free
  6439   00286E  C00F  F028         	movff	?___flmul,___fldiv@b
  6440   002872  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  6441   002876  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  6442   00287A  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  6443   00287E  0E00               	movlw	0
  6444   002880  6E2C               	movwf	___fldiv@a^0,c
  6445   002882  0EC0               	movlw	192
  6446   002884  6E2D               	movwf	(___fldiv@a+1)^0,c
  6447   002886  0E7F               	movlw	127
  6448   002888  6E2E               	movwf	(___fldiv@a+2)^0,c
  6449   00288A  0E44               	movlw	68
  6450   00288C  6E2F               	movwf	(___fldiv@a+3)^0,c
  6451   00288E  EC71  F00C         	call	___fldiv	;wreg free
  6452   002892  C028  F041         	movff	?___fldiv,?_ADC_read_temp
  6453   002896  C029  F042         	movff	?___fldiv+1,?_ADC_read_temp+1
  6454   00289A  C02A  F043         	movff	?___fldiv+2,?_ADC_read_temp+2
  6455   00289E  C02B  F044         	movff	?___fldiv+3,?_ADC_read_temp+3
  6456   0028A2  0012               	return		;funcret
  6457   0028A4                     __end_of_ADC_read_temp:
  6458                           	callstack 0
  6459                           
  6460 ;; *************** function ___xxtofl *****************
  6461 ;; Defined at:
  6462 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  sign            1    wreg     unsigned char 
  6465 ;;  val             4    0[COMRAM] long 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  sign            1    8[COMRAM] unsigned char 
  6468 ;;  arg             4   10[COMRAM] unsigned long 
  6469 ;;  exp             1    9[COMRAM] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  4    0[COMRAM] unsigned char 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6479 ;;      Params:         4       0       0       0       0       0       0
  6480 ;;      Locals:         6       0       0       0       0       0       0
  6481 ;;      Temps:          4       0       0       0       0       0       0
  6482 ;;      Totals:        14       0       0       0       0       0       0
  6483 ;;Total ram usage:       14 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_ADC_read_temp
  6489 ;;		_ADC_read_lumi
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text30
  6494   002052                     __ptext30:
  6495                           	callstack 0
  6496   002052                     ___xxtofl:
  6497                           	callstack 29
  6498                           
  6499                           ;incstack = 0
  6500                           ;___xxtofl@sign stored from wreg
  6501   002052  6E09               	movwf	___xxtofl@sign^0,c
  6502   002054  5009               	movf	___xxtofl@sign^0,w,c
  6503   002056  B4D8               	btfsc	status,2,c
  6504   002058  EF30  F010         	goto	u3631
  6505   00205C  EF32  F010         	goto	u3630
  6506   002060                     u3631:
  6507   002060  EF54  F010         	goto	l837
  6508   002064                     u3630:
  6509   002064  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6510   002066  EF39  F010         	goto	u3640
  6511   00206A  EF37  F010         	goto	u3641
  6512   00206E                     u3641:
  6513   00206E  EF54  F010         	goto	l837
  6514   002072                     u3640:
  6515   002072  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6516   002076  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6517   00207A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6518   00207E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6519   002082  1E05               	comf	??___xxtofl^0,f,c
  6520   002084  1E06               	comf	(??___xxtofl+1)^0,f,c
  6521   002086  1E07               	comf	(??___xxtofl+2)^0,f,c
  6522   002088  1E08               	comf	(??___xxtofl+3)^0,f,c
  6523   00208A  2A05               	incf	??___xxtofl^0,f,c
  6524   00208C  0E00               	movlw	0
  6525   00208E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6526   002090  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6527   002092  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6528   002094  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6529   002098  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6530   00209C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6531   0020A0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6532   0020A4  EF5C  F010         	goto	l3282
  6533   0020A8                     l837:
  6534   0020A8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6535   0020AC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6536   0020B0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6537   0020B4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6538   0020B8                     l3282:
  6539   0020B8  5001               	movf	___xxtofl@val^0,w,c
  6540   0020BA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6541   0020BC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6542   0020BE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6543   0020C0  A4D8               	btfss	status,2,c
  6544   0020C2  EF65  F010         	goto	u3651
  6545   0020C6  EF67  F010         	goto	u3650
  6546   0020CA                     u3651:
  6547   0020CA  EF71  F010         	goto	l3288
  6548   0020CE                     u3650:
  6549   0020CE  0E00               	movlw	0
  6550   0020D0  6E01               	movwf	?___xxtofl^0,c
  6551   0020D2  0E00               	movlw	0
  6552   0020D4  6E02               	movwf	(?___xxtofl+1)^0,c
  6553   0020D6  0E00               	movlw	0
  6554   0020D8  6E03               	movwf	(?___xxtofl+2)^0,c
  6555   0020DA  0E00               	movlw	0
  6556   0020DC  6E04               	movwf	(?___xxtofl+3)^0,c
  6557   0020DE  EF02  F011         	goto	l840
  6558   0020E2                     l3288:
  6559   0020E2  0E96               	movlw	150
  6560   0020E4  6E0A               	movwf	___xxtofl@exp^0,c
  6561   0020E6  EF7B  F010         	goto	l3292
  6562   0020EA                     l3290:
  6563   0020EA  2A0A               	incf	___xxtofl@exp^0,f,c
  6564   0020EC  90D8               	bcf	status,0,c
  6565   0020EE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6566   0020F0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6567   0020F2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6568   0020F4  320B               	rrcf	___xxtofl@arg^0,f,c
  6569   0020F6                     l3292:
  6570   0020F6  0E00               	movlw	0
  6571   0020F8  140B               	andwf	___xxtofl@arg^0,w,c
  6572   0020FA  6E05               	movwf	??___xxtofl^0,c
  6573   0020FC  0E00               	movlw	0
  6574   0020FE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6575   002100  6E06               	movwf	(??___xxtofl+1)^0,c
  6576   002102  0E00               	movlw	0
  6577   002104  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6578   002106  6E07               	movwf	(??___xxtofl+2)^0,c
  6579   002108  0EFE               	movlw	254
  6580   00210A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6581   00210C  6E08               	movwf	(??___xxtofl+3)^0,c
  6582   00210E  5005               	movf	??___xxtofl^0,w,c
  6583   002110  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6584   002112  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6585   002114  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6586   002116  A4D8               	btfss	status,2,c
  6587   002118  EF90  F010         	goto	u3661
  6588   00211C  EF92  F010         	goto	u3660
  6589   002120                     u3661:
  6590   002120  EF75  F010         	goto	l3290
  6591   002124                     u3660:
  6592   002124  EFA0  F010         	goto	l844
  6593   002128                     l3294:
  6594   002128  2A0A               	incf	___xxtofl@exp^0,f,c
  6595   00212A  0E01               	movlw	1
  6596   00212C  260B               	addwf	___xxtofl@arg^0,f,c
  6597   00212E  0E00               	movlw	0
  6598   002130  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6599   002132  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6600   002134  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6601   002136  90D8               	bcf	status,0,c
  6602   002138  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6603   00213A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6604   00213C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6605   00213E  320B               	rrcf	___xxtofl@arg^0,f,c
  6606   002140                     l844:
  6607   002140  0E00               	movlw	0
  6608   002142  140B               	andwf	___xxtofl@arg^0,w,c
  6609   002144  6E05               	movwf	??___xxtofl^0,c
  6610   002146  0E00               	movlw	0
  6611   002148  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6612   00214A  6E06               	movwf	(??___xxtofl+1)^0,c
  6613   00214C  0E00               	movlw	0
  6614   00214E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6615   002150  6E07               	movwf	(??___xxtofl+2)^0,c
  6616   002152  0EFF               	movlw	255
  6617   002154  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6618   002156  6E08               	movwf	(??___xxtofl+3)^0,c
  6619   002158  5005               	movf	??___xxtofl^0,w,c
  6620   00215A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6621   00215C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6622   00215E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6623   002160  A4D8               	btfss	status,2,c
  6624   002162  EFB5  F010         	goto	u3671
  6625   002166  EFB7  F010         	goto	u3670
  6626   00216A                     u3671:
  6627   00216A  EF94  F010         	goto	l3294
  6628   00216E                     u3670:
  6629   00216E  EFBF  F010         	goto	l3302
  6630   002172                     l3300:
  6631   002172  060A               	decf	___xxtofl@exp^0,f,c
  6632   002174  90D8               	bcf	status,0,c
  6633   002176  360B               	rlcf	___xxtofl@arg^0,f,c
  6634   002178  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6635   00217A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6636   00217C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6637   00217E                     l3302:
  6638   00217E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6639   002180  EFC4  F010         	goto	u3681
  6640   002184  EFC6  F010         	goto	u3680
  6641   002188                     u3681:
  6642   002188  EFCE  F010         	goto	l851
  6643   00218C                     u3680:
  6644   00218C  0E02               	movlw	2
  6645   00218E  600A               	cpfslt	___xxtofl@exp^0,c
  6646   002190  EFCC  F010         	goto	u3691
  6647   002194  EFCE  F010         	goto	u3690
  6648   002198                     u3691:
  6649   002198  EFB9  F010         	goto	l3300
  6650   00219C                     u3690:
  6651   00219C                     l851:
  6652   00219C  B00A               	btfsc	___xxtofl@exp^0,0,c
  6653   00219E  EFD3  F010         	goto	u3701
  6654   0021A2  EFD5  F010         	goto	u3700
  6655   0021A6                     u3701:
  6656   0021A6  EFD6  F010         	goto	l3308
  6657   0021AA                     u3700:
  6658   0021AA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6659   0021AC                     l3308:
  6660   0021AC  90D8               	bcf	status,0,c
  6661   0021AE  320A               	rrcf	___xxtofl@exp^0,f,c
  6662   0021B0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6663   0021B4  6A06               	clrf	(??___xxtofl+1)^0,c
  6664   0021B6  6A07               	clrf	(??___xxtofl+2)^0,c
  6665   0021B8  6A08               	clrf	(??___xxtofl+3)^0,c
  6666   0021BA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6667   0021BE  6A07               	clrf	(??___xxtofl+2)^0,c
  6668   0021C0  6A06               	clrf	(??___xxtofl+1)^0,c
  6669   0021C2  6A05               	clrf	??___xxtofl^0,c
  6670   0021C4  5005               	movf	??___xxtofl^0,w,c
  6671   0021C6  120B               	iorwf	___xxtofl@arg^0,f,c
  6672   0021C8  5006               	movf	(??___xxtofl+1)^0,w,c
  6673   0021CA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6674   0021CC  5007               	movf	(??___xxtofl+2)^0,w,c
  6675   0021CE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6676   0021D0  5008               	movf	(??___xxtofl+3)^0,w,c
  6677   0021D2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6678   0021D4  5009               	movf	___xxtofl@sign^0,w,c
  6679   0021D6  B4D8               	btfsc	status,2,c
  6680   0021D8  EFF0  F010         	goto	u3711
  6681   0021DC  EFF2  F010         	goto	u3710
  6682   0021E0                     u3711:
  6683   0021E0  EFFA  F010         	goto	l3318
  6684   0021E4                     u3710:
  6685   0021E4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6686   0021E6  EFF9  F010         	goto	u3720
  6687   0021EA  EFF7  F010         	goto	u3721
  6688   0021EE                     u3721:
  6689   0021EE  EFFA  F010         	goto	l3318
  6690   0021F2                     u3720:
  6691   0021F2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6692   0021F4                     l3318:
  6693   0021F4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6694   0021F8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6695   0021FC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6696   002200  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6697   002204                     l840:
  6698   002204  0012               	return		;funcret
  6699   002206                     __end_of___xxtofl:
  6700                           	callstack 0
  6701                           
  6702 ;; *************** function ___flmul *****************
  6703 ;; Defined at:
  6704 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  b               4   14[COMRAM] unsigned char 
  6707 ;;  a               4   18[COMRAM] unsigned char 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  prod            4   33[COMRAM] struct .
  6710 ;;  grs             4   27[COMRAM] unsigned long 
  6711 ;;  temp            2   37[COMRAM] struct .
  6712 ;;  bexp            1   32[COMRAM] unsigned char 
  6713 ;;  aexp            1   31[COMRAM] unsigned char 
  6714 ;;  sign            1   26[COMRAM] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  4   14[COMRAM] unsigned char 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, prodl, prodh
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6724 ;;      Params:         8       0       0       0       0       0       0
  6725 ;;      Locals:        13       0       0       0       0       0       0
  6726 ;;      Temps:          4       0       0       0       0       0       0
  6727 ;;      Totals:        25       0       0       0       0       0       0
  6728 ;;Total ram usage:       25 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_ADC_read_temp
  6734 ;;		_efgtoa
  6735 ;;		_ADC_read_lumi
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text31
  6740   0014BC                     __ptext31:
  6741                           	callstack 0
  6742   0014BC                     ___flmul:
  6743                           	callstack 26
  6744   0014BC  5012               	movf	(___flmul@b+3)^0,w,c
  6745   0014BE  0B80               	andlw	128
  6746   0014C0  6E1B               	movwf	___flmul@sign^0,c
  6747   0014C2  5012               	movf	(___flmul@b+3)^0,w,c
  6748   0014C4  2412               	addwf	(___flmul@b+3)^0,w,c
  6749   0014C6  6E21               	movwf	___flmul@bexp^0,c
  6750   0014C8  AE11               	btfss	(___flmul@b+2)^0,7,c
  6751   0014CA  EF69  F00A         	goto	u2691
  6752   0014CE  EF6B  F00A         	goto	u2690
  6753   0014D2                     u2691:
  6754   0014D2  EF6C  F00A         	goto	l2666
  6755   0014D6                     u2690:
  6756   0014D6  8021               	bsf	___flmul@bexp^0,0,c
  6757   0014D8                     l2666:
  6758   0014D8  5021               	movf	___flmul@bexp^0,w,c
  6759   0014DA  B4D8               	btfsc	status,2,c
  6760   0014DC  EF72  F00A         	goto	u2701
  6761   0014E0  EF74  F00A         	goto	u2700
  6762   0014E4                     u2701:
  6763   0014E4  EF87  F00A         	goto	l2674
  6764   0014E8                     u2700:
  6765   0014E8  2821               	incf	___flmul@bexp^0,w,c
  6766   0014EA  A4D8               	btfss	status,2,c
  6767   0014EC  EF7A  F00A         	goto	u2711
  6768   0014F0  EF7C  F00A         	goto	u2710
  6769   0014F4                     u2711:
  6770   0014F4  EF84  F00A         	goto	l2672
  6771   0014F8                     u2710:
  6772   0014F8  0E00               	movlw	0
  6773   0014FA  6E0F               	movwf	___flmul@b^0,c
  6774   0014FC  0E00               	movlw	0
  6775   0014FE  6E10               	movwf	(___flmul@b+1)^0,c
  6776   001500  0E00               	movlw	0
  6777   001502  6E11               	movwf	(___flmul@b+2)^0,c
  6778   001504  0E00               	movlw	0
  6779   001506  6E12               	movwf	(___flmul@b+3)^0,c
  6780   001508                     l2672:
  6781   001508  8E11               	bsf	(___flmul@b+2)^0,7,c
  6782   00150A  EF8F  F00A         	goto	l2676
  6783   00150E                     l2674:
  6784   00150E  0E00               	movlw	0
  6785   001510  6E0F               	movwf	___flmul@b^0,c
  6786   001512  0E00               	movlw	0
  6787   001514  6E10               	movwf	(___flmul@b+1)^0,c
  6788   001516  0E00               	movlw	0
  6789   001518  6E11               	movwf	(___flmul@b+2)^0,c
  6790   00151A  0E00               	movlw	0
  6791   00151C  6E12               	movwf	(___flmul@b+3)^0,c
  6792   00151E                     l2676:
  6793   00151E  5016               	movf	(___flmul@a+3)^0,w,c
  6794   001520  0B80               	andlw	128
  6795   001522  1A1B               	xorwf	___flmul@sign^0,f,c
  6796   001524  5016               	movf	(___flmul@a+3)^0,w,c
  6797   001526  2416               	addwf	(___flmul@a+3)^0,w,c
  6798   001528  6E20               	movwf	___flmul@aexp^0,c
  6799   00152A  AE15               	btfss	(___flmul@a+2)^0,7,c
  6800   00152C  EF9A  F00A         	goto	u2721
  6801   001530  EF9C  F00A         	goto	u2720
  6802   001534                     u2721:
  6803   001534  EF9D  F00A         	goto	l2684
  6804   001538                     u2720:
  6805   001538  8020               	bsf	___flmul@aexp^0,0,c
  6806   00153A                     l2684:
  6807   00153A  5020               	movf	___flmul@aexp^0,w,c
  6808   00153C  B4D8               	btfsc	status,2,c
  6809   00153E  EFA3  F00A         	goto	u2731
  6810   001542  EFA5  F00A         	goto	u2730
  6811   001546                     u2731:
  6812   001546  EFB8  F00A         	goto	l2692
  6813   00154A                     u2730:
  6814   00154A  2820               	incf	___flmul@aexp^0,w,c
  6815   00154C  A4D8               	btfss	status,2,c
  6816   00154E  EFAB  F00A         	goto	u2741
  6817   001552  EFAD  F00A         	goto	u2740
  6818   001556                     u2741:
  6819   001556  EFB5  F00A         	goto	l2690
  6820   00155A                     u2740:
  6821   00155A  0E00               	movlw	0
  6822   00155C  6E13               	movwf	___flmul@a^0,c
  6823   00155E  0E00               	movlw	0
  6824   001560  6E14               	movwf	(___flmul@a+1)^0,c
  6825   001562  0E00               	movlw	0
  6826   001564  6E15               	movwf	(___flmul@a+2)^0,c
  6827   001566  0E00               	movlw	0
  6828   001568  6E16               	movwf	(___flmul@a+3)^0,c
  6829   00156A                     l2690:
  6830   00156A  8E15               	bsf	(___flmul@a+2)^0,7,c
  6831   00156C  EFC0  F00A         	goto	l796
  6832   001570                     l2692:
  6833   001570  0E00               	movlw	0
  6834   001572  6E13               	movwf	___flmul@a^0,c
  6835   001574  0E00               	movlw	0
  6836   001576  6E14               	movwf	(___flmul@a+1)^0,c
  6837   001578  0E00               	movlw	0
  6838   00157A  6E15               	movwf	(___flmul@a+2)^0,c
  6839   00157C  0E00               	movlw	0
  6840   00157E  6E16               	movwf	(___flmul@a+3)^0,c
  6841   001580                     l796:
  6842   001580  5020               	movf	___flmul@aexp^0,w,c
  6843   001582  B4D8               	btfsc	status,2,c
  6844   001584  EFC6  F00A         	goto	u2751
  6845   001588  EFC8  F00A         	goto	u2750
  6846   00158C                     u2751:
  6847   00158C  EFD0  F00A         	goto	l2696
  6848   001590                     u2750:
  6849   001590  5021               	movf	___flmul@bexp^0,w,c
  6850   001592  A4D8               	btfss	status,2,c
  6851   001594  EFCE  F00A         	goto	u2761
  6852   001598  EFD0  F00A         	goto	u2760
  6853   00159C                     u2761:
  6854   00159C  EFDA  F00A         	goto	l2700
  6855   0015A0                     u2760:
  6856   0015A0                     l2696:
  6857   0015A0  0E00               	movlw	0
  6858   0015A2  6E0F               	movwf	?___flmul^0,c
  6859   0015A4  0E00               	movlw	0
  6860   0015A6  6E10               	movwf	(?___flmul+1)^0,c
  6861   0015A8  0E00               	movlw	0
  6862   0015AA  6E11               	movwf	(?___flmul+2)^0,c
  6863   0015AC  0E00               	movlw	0
  6864   0015AE  6E12               	movwf	(?___flmul+3)^0,c
  6865   0015B0  EF70  F00C         	goto	l800
  6866   0015B4                     l2700:
  6867   0015B4  5015               	movf	(___flmul@a+2)^0,w,c
  6868   0015B6  020F               	mulwf	___flmul@b^0,c
  6869   0015B8  CFF3 F026          	movff	prodl,___flmul@temp
  6870   0015BC  CFF4 F027          	movff	prodh,___flmul@temp+1
  6871   0015C0  5026               	movf	___flmul@temp^0,w,c
  6872   0015C2  6E1C               	movwf	___flmul@grs^0,c
  6873   0015C4  6A1D               	clrf	(___flmul@grs+1)^0,c
  6874   0015C6  6A1E               	clrf	(___flmul@grs+2)^0,c
  6875   0015C8  6A1F               	clrf	(___flmul@grs+3)^0,c
  6876   0015CA  5027               	movf	(___flmul@temp+1)^0,w,c
  6877   0015CC  6E22               	movwf	___flmul@prod^0,c
  6878   0015CE  6A23               	clrf	(___flmul@prod+1)^0,c
  6879   0015D0  6A24               	clrf	(___flmul@prod+2)^0,c
  6880   0015D2  6A25               	clrf	(___flmul@prod+3)^0,c
  6881   0015D4  5014               	movf	(___flmul@a+1)^0,w,c
  6882   0015D6  0210               	mulwf	(___flmul@b+1)^0,c
  6883   0015D8  CFF3 F026          	movff	prodl,___flmul@temp
  6884   0015DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  6885   0015E0  5026               	movf	___flmul@temp^0,w,c
  6886   0015E2  261C               	addwf	___flmul@grs^0,f,c
  6887   0015E4  0E00               	movlw	0
  6888   0015E6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6889   0015E8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6890   0015EA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6891   0015EC  5027               	movf	(___flmul@temp+1)^0,w,c
  6892   0015EE  2622               	addwf	___flmul@prod^0,f,c
  6893   0015F0  0E00               	movlw	0
  6894   0015F2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6895   0015F4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6896   0015F6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6897   0015F8  5013               	movf	___flmul@a^0,w,c
  6898   0015FA  0211               	mulwf	(___flmul@b+2)^0,c
  6899   0015FC  CFF3 F026          	movff	prodl,___flmul@temp
  6900   001600  CFF4 F027          	movff	prodh,___flmul@temp+1
  6901   001604  5026               	movf	___flmul@temp^0,w,c
  6902   001606  261C               	addwf	___flmul@grs^0,f,c
  6903   001608  0E00               	movlw	0
  6904   00160A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6905   00160C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6906   00160E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6907   001610  5027               	movf	(___flmul@temp+1)^0,w,c
  6908   001612  2622               	addwf	___flmul@prod^0,f,c
  6909   001614  0E00               	movlw	0
  6910   001616  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6911   001618  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6912   00161A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6913   00161C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6914   001620  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6915   001624  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6916   001628  6A1C               	clrf	___flmul@grs^0,c
  6917   00162A  5013               	movf	___flmul@a^0,w,c
  6918   00162C  0210               	mulwf	(___flmul@b+1)^0,c
  6919   00162E  CFF3 F026          	movff	prodl,___flmul@temp
  6920   001632  CFF4 F027          	movff	prodh,___flmul@temp+1
  6921   001636  5026               	movf	___flmul@temp^0,w,c
  6922   001638  261C               	addwf	___flmul@grs^0,f,c
  6923   00163A  5027               	movf	(___flmul@temp+1)^0,w,c
  6924   00163C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6925   00163E  0E00               	movlw	0
  6926   001640  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6927   001642  0E00               	movlw	0
  6928   001644  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6929   001646  5014               	movf	(___flmul@a+1)^0,w,c
  6930   001648  020F               	mulwf	___flmul@b^0,c
  6931   00164A  CFF3 F026          	movff	prodl,___flmul@temp
  6932   00164E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6933   001652  5026               	movf	___flmul@temp^0,w,c
  6934   001654  261C               	addwf	___flmul@grs^0,f,c
  6935   001656  5027               	movf	(___flmul@temp+1)^0,w,c
  6936   001658  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6937   00165A  0E00               	movlw	0
  6938   00165C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6939   00165E  0E00               	movlw	0
  6940   001660  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6941   001662  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6942   001666  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6943   00166A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6944   00166E  6A1C               	clrf	___flmul@grs^0,c
  6945   001670  5013               	movf	___flmul@a^0,w,c
  6946   001672  020F               	mulwf	___flmul@b^0,c
  6947   001674  CFF3 F026          	movff	prodl,___flmul@temp
  6948   001678  CFF4 F027          	movff	prodh,___flmul@temp+1
  6949   00167C  5026               	movf	___flmul@temp^0,w,c
  6950   00167E  261C               	addwf	___flmul@grs^0,f,c
  6951   001680  5027               	movf	(___flmul@temp+1)^0,w,c
  6952   001682  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6953   001684  0E00               	movlw	0
  6954   001686  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6955   001688  0E00               	movlw	0
  6956   00168A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6957   00168C  5015               	movf	(___flmul@a+2)^0,w,c
  6958   00168E  0210               	mulwf	(___flmul@b+1)^0,c
  6959   001690  CFF3 F026          	movff	prodl,___flmul@temp
  6960   001694  CFF4 F027          	movff	prodh,___flmul@temp+1
  6961   001698  5026               	movf	___flmul@temp^0,w,c
  6962   00169A  2622               	addwf	___flmul@prod^0,f,c
  6963   00169C  5027               	movf	(___flmul@temp+1)^0,w,c
  6964   00169E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6965   0016A0  0E00               	movlw	0
  6966   0016A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6967   0016A4  0E00               	movlw	0
  6968   0016A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6969   0016A8  5014               	movf	(___flmul@a+1)^0,w,c
  6970   0016AA  0211               	mulwf	(___flmul@b+2)^0,c
  6971   0016AC  CFF3 F026          	movff	prodl,___flmul@temp
  6972   0016B0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6973   0016B4  5026               	movf	___flmul@temp^0,w,c
  6974   0016B6  2622               	addwf	___flmul@prod^0,f,c
  6975   0016B8  5027               	movf	(___flmul@temp+1)^0,w,c
  6976   0016BA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6977   0016BC  0E00               	movlw	0
  6978   0016BE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6979   0016C0  0E00               	movlw	0
  6980   0016C2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6981   0016C4  5015               	movf	(___flmul@a+2)^0,w,c
  6982   0016C6  0211               	mulwf	(___flmul@b+2)^0,c
  6983   0016C8  CFF3 F026          	movff	prodl,___flmul@temp
  6984   0016CC  CFF4 F027          	movff	prodh,___flmul@temp+1
  6985   0016D0  5026               	movf	___flmul@temp^0,w,c
  6986   0016D2  6E17               	movwf	??___flmul^0,c
  6987   0016D4  5027               	movf	(___flmul@temp+1)^0,w,c
  6988   0016D6  6E18               	movwf	(??___flmul+1)^0,c
  6989   0016D8  6A19               	clrf	(??___flmul+2)^0,c
  6990   0016DA  6A1A               	clrf	(??___flmul+3)^0,c
  6991   0016DC  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6992   0016E0  C018  F019         	movff	??___flmul+1,??___flmul+2
  6993   0016E4  C017  F018         	movff	??___flmul,??___flmul+1
  6994   0016E8  6A17               	clrf	??___flmul^0,c
  6995   0016EA  5017               	movf	??___flmul^0,w,c
  6996   0016EC  2622               	addwf	___flmul@prod^0,f,c
  6997   0016EE  5018               	movf	(??___flmul+1)^0,w,c
  6998   0016F0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6999   0016F2  5019               	movf	(??___flmul+2)^0,w,c
  7000   0016F4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7001   0016F6  501A               	movf	(??___flmul+3)^0,w,c
  7002   0016F8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7003   0016FA  C01C  F017         	movff	___flmul@grs,??___flmul
  7004   0016FE  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7005   001702  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7006   001706  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7007   00170A  0E19               	movlw	25
  7008   00170C  EF8D  F00B         	goto	u2770
  7009   001710                     u2775:
  7010   001710  90D8               	bcf	status,0,c
  7011   001712  321A               	rrcf	(??___flmul+3)^0,f,c
  7012   001714  3219               	rrcf	(??___flmul+2)^0,f,c
  7013   001716  3218               	rrcf	(??___flmul+1)^0,f,c
  7014   001718  3217               	rrcf	??___flmul^0,f,c
  7015   00171A                     u2770:
  7016   00171A  2EE8               	decfsz	wreg,f,c
  7017   00171C  EF88  F00B         	goto	u2775
  7018   001720  5017               	movf	??___flmul^0,w,c
  7019   001722  2622               	addwf	___flmul@prod^0,f,c
  7020   001724  5018               	movf	(??___flmul+1)^0,w,c
  7021   001726  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7022   001728  5019               	movf	(??___flmul+2)^0,w,c
  7023   00172A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7024   00172C  501A               	movf	(??___flmul+3)^0,w,c
  7025   00172E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7026   001730  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7027   001734  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7028   001738  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7029   00173C  6A1C               	clrf	___flmul@grs^0,c
  7030   00173E  5020               	movf	___flmul@aexp^0,w,c
  7031   001740  C021  F017         	movff	___flmul@bexp,??___flmul
  7032   001744  6A18               	clrf	(??___flmul+1)^0,c
  7033   001746  2617               	addwf	??___flmul^0,f,c
  7034   001748  0E00               	movlw	0
  7035   00174A  2218               	addwfc	(??___flmul+1)^0,f,c
  7036   00174C  0E82               	movlw	130
  7037   00174E  2417               	addwf	??___flmul^0,w,c
  7038   001750  6E26               	movwf	___flmul@temp^0,c
  7039   001752  0EFF               	movlw	255
  7040   001754  2018               	addwfc	(??___flmul+1)^0,w,c
  7041   001756  6E27               	movwf	(___flmul@temp+1)^0,c
  7042   001758  EFC3  F00B         	goto	l2748
  7043   00175C                     l2742:
  7044   00175C  90D8               	bcf	status,0,c
  7045   00175E  3622               	rlcf	___flmul@prod^0,f,c
  7046   001760  3623               	rlcf	(___flmul@prod+1)^0,f,c
  7047   001762  3624               	rlcf	(___flmul@prod+2)^0,f,c
  7048   001764  3625               	rlcf	(___flmul@prod+3)^0,f,c
  7049   001766  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7050   001768  EFB8  F00B         	goto	u2781
  7051   00176C  EFBA  F00B         	goto	u2780
  7052   001770                     u2781:
  7053   001770  EFBB  F00B         	goto	l803
  7054   001774                     u2780:
  7055   001774  8022               	bsf	___flmul@prod^0,0,c
  7056   001776                     l803:
  7057   001776  90D8               	bcf	status,0,c
  7058   001778  361C               	rlcf	___flmul@grs^0,f,c
  7059   00177A  361D               	rlcf	(___flmul@grs+1)^0,f,c
  7060   00177C  361E               	rlcf	(___flmul@grs+2)^0,f,c
  7061   00177E  361F               	rlcf	(___flmul@grs+3)^0,f,c
  7062   001780  0626               	decf	___flmul@temp^0,f,c
  7063   001782  A0D8               	btfss	status,0,c
  7064   001784  0627               	decf	(___flmul@temp+1)^0,f,c
  7065   001786                     l2748:
  7066   001786  AE24               	btfss	(___flmul@prod+2)^0,7,c
  7067   001788  EFC8  F00B         	goto	u2791
  7068   00178C  EFCA  F00B         	goto	u2790
  7069   001790                     u2791:
  7070   001790  EFAE  F00B         	goto	l2742
  7071   001794                     u2790:
  7072   001794  6A20               	clrf	___flmul@aexp^0,c
  7073   001796  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7074   001798  EFD0  F00B         	goto	u2801
  7075   00179C  EFD2  F00B         	goto	u2800
  7076   0017A0                     u2801:
  7077   0017A0  EFF6  F00B         	goto	l805
  7078   0017A4                     u2800:
  7079   0017A4  0EFF               	movlw	255
  7080   0017A6  141C               	andwf	___flmul@grs^0,w,c
  7081   0017A8  6E17               	movwf	??___flmul^0,c
  7082   0017AA  0EFF               	movlw	255
  7083   0017AC  141D               	andwf	(___flmul@grs+1)^0,w,c
  7084   0017AE  6E18               	movwf	(??___flmul+1)^0,c
  7085   0017B0  0EFF               	movlw	255
  7086   0017B2  141E               	andwf	(___flmul@grs+2)^0,w,c
  7087   0017B4  6E19               	movwf	(??___flmul+2)^0,c
  7088   0017B6  0E7F               	movlw	127
  7089   0017B8  141F               	andwf	(___flmul@grs+3)^0,w,c
  7090   0017BA  6E1A               	movwf	(??___flmul+3)^0,c
  7091   0017BC  5017               	movf	??___flmul^0,w,c
  7092   0017BE  1018               	iorwf	(??___flmul+1)^0,w,c
  7093   0017C0  1019               	iorwf	(??___flmul+2)^0,w,c
  7094   0017C2  101A               	iorwf	(??___flmul+3)^0,w,c
  7095   0017C4  B4D8               	btfsc	status,2,c
  7096   0017C6  EFE7  F00B         	goto	u2811
  7097   0017CA  EFE9  F00B         	goto	u2810
  7098   0017CE                     u2811:
  7099   0017CE  EFED  F00B         	goto	l806
  7100   0017D2                     u2810:
  7101   0017D2                     l2752:
  7102   0017D2  0E01               	movlw	1
  7103   0017D4  6E20               	movwf	___flmul@aexp^0,c
  7104   0017D6  EFF6  F00B         	goto	l805
  7105   0017DA                     l806:
  7106   0017DA  A022               	btfss	___flmul@prod^0,0,c
  7107   0017DC  EFF2  F00B         	goto	u2821
  7108   0017E0  EFF4  F00B         	goto	u2820
  7109   0017E4                     u2821:
  7110   0017E4  EFF6  F00B         	goto	l805
  7111   0017E8                     u2820:
  7112   0017E8  EFE9  F00B         	goto	l2752
  7113   0017EC                     l805:
  7114   0017EC  5020               	movf	___flmul@aexp^0,w,c
  7115   0017EE  B4D8               	btfsc	status,2,c
  7116   0017F0  EFFC  F00B         	goto	u2831
  7117   0017F4  EFFE  F00B         	goto	u2830
  7118   0017F8                     u2831:
  7119   0017F8  EF22  F00C         	goto	l2764
  7120   0017FC                     u2830:
  7121   0017FC  0E01               	movlw	1
  7122   0017FE  2622               	addwf	___flmul@prod^0,f,c
  7123   001800  0E00               	movlw	0
  7124   001802  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7125   001804  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7126   001806  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7127   001808  A025               	btfss	(___flmul@prod+3)^0,0,c
  7128   00180A  EF09  F00C         	goto	u2841
  7129   00180E  EF0B  F00C         	goto	u2840
  7130   001812                     u2841:
  7131   001812  EF22  F00C         	goto	l2764
  7132   001816                     u2840:
  7133   001816  C022  F017         	movff	___flmul@prod,??___flmul
  7134   00181A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  7135   00181E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  7136   001822  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  7137   001826  341A               	rlcf	(??___flmul+3)^0,w,c
  7138   001828  321A               	rrcf	(??___flmul+3)^0,f,c
  7139   00182A  3219               	rrcf	(??___flmul+2)^0,f,c
  7140   00182C  3218               	rrcf	(??___flmul+1)^0,f,c
  7141   00182E  3217               	rrcf	??___flmul^0,f,c
  7142   001830  C017  F022         	movff	??___flmul,___flmul@prod
  7143   001834  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7144   001838  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7145   00183C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7146   001840  4A26               	infsnz	___flmul@temp^0,f,c
  7147   001842  2A27               	incf	(___flmul@temp+1)^0,f,c
  7148   001844                     l2764:
  7149   001844  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7150   001846  EF2D  F00C         	goto	u2851
  7151   00184A  5027               	movf	(___flmul@temp+1)^0,w,c
  7152   00184C  E108               	bnz	u2850
  7153   00184E  2826               	incf	___flmul@temp^0,w,c
  7154   001850  A0D8               	btfss	status,0,c
  7155   001852  EF2D  F00C         	goto	u2851
  7156   001856  EF2F  F00C         	goto	u2850
  7157   00185A                     u2851:
  7158   00185A  EF39  F00C         	goto	l2768
  7159   00185E                     u2850:
  7160   00185E  0E00               	movlw	0
  7161   001860  6E22               	movwf	___flmul@prod^0,c
  7162   001862  0E00               	movlw	0
  7163   001864  6E23               	movwf	(___flmul@prod+1)^0,c
  7164   001866  0E80               	movlw	128
  7165   001868  6E24               	movwf	(___flmul@prod+2)^0,c
  7166   00186A  0E7F               	movlw	127
  7167   00186C  6E25               	movwf	(___flmul@prod+3)^0,c
  7168   00186E  EF66  F00C         	goto	l2782
  7169   001872                     l2768:
  7170   001872  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7171   001874  EF46  F00C         	goto	u2860
  7172   001878  5027               	movf	(___flmul@temp+1)^0,w,c
  7173   00187A  E106               	bnz	u2861
  7174   00187C  0426               	decf	___flmul@temp^0,w,c
  7175   00187E  B0D8               	btfsc	status,0,c
  7176   001880  EF44  F00C         	goto	u2861
  7177   001884  EF46  F00C         	goto	u2860
  7178   001888                     u2861:
  7179   001888  EF51  F00C         	goto	l813
  7180   00188C                     u2860:
  7181   00188C  0E00               	movlw	0
  7182   00188E  6E22               	movwf	___flmul@prod^0,c
  7183   001890  0E00               	movlw	0
  7184   001892  6E23               	movwf	(___flmul@prod+1)^0,c
  7185   001894  0E00               	movlw	0
  7186   001896  6E24               	movwf	(___flmul@prod+2)^0,c
  7187   001898  0E00               	movlw	0
  7188   00189A  6E25               	movwf	(___flmul@prod+3)^0,c
  7189   00189C  6A1B               	clrf	___flmul@sign^0,c
  7190   00189E  EF66  F00C         	goto	l2782
  7191   0018A2                     l813:
  7192   0018A2  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7193   0018A6  0EFF               	movlw	255
  7194   0018A8  1622               	andwf	___flmul@prod^0,f,c
  7195   0018AA  0EFF               	movlw	255
  7196   0018AC  1623               	andwf	(___flmul@prod+1)^0,f,c
  7197   0018AE  0E7F               	movlw	127
  7198   0018B0  1624               	andwf	(___flmul@prod+2)^0,f,c
  7199   0018B2  0E00               	movlw	0
  7200   0018B4  1625               	andwf	(___flmul@prod+3)^0,f,c
  7201   0018B6  A021               	btfss	___flmul@bexp^0,0,c
  7202   0018B8  EF60  F00C         	goto	u2871
  7203   0018BC  EF62  F00C         	goto	u2870
  7204   0018C0                     u2871:
  7205   0018C0  EF63  F00C         	goto	l2780
  7206   0018C4                     u2870:
  7207   0018C4  8E24               	bsf	(___flmul@prod+2)^0,7,c
  7208   0018C6                     l2780:
  7209   0018C6  90D8               	bcf	status,0,c
  7210   0018C8  3021               	rrcf	___flmul@bexp^0,w,c
  7211   0018CA  6E25               	movwf	(___flmul@prod+3)^0,c
  7212   0018CC                     l2782:
  7213   0018CC  501B               	movf	___flmul@sign^0,w,c
  7214   0018CE  1225               	iorwf	(___flmul@prod+3)^0,f,c
  7215   0018D0  C022  F00F         	movff	___flmul@prod,?___flmul
  7216   0018D4  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7217   0018D8  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7218   0018DC  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7219   0018E0                     l800:
  7220   0018E0  0012               	return		;funcret
  7221   0018E2                     __end_of___flmul:
  7222                           	callstack 0
  7223                           
  7224 ;; *************** function ___fldiv *****************
  7225 ;; Defined at:
  7226 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  b               4   39[COMRAM] unsigned char 
  7229 ;;  a               4   43[COMRAM] unsigned char 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  grs             4   58[COMRAM] unsigned long 
  7232 ;;  rem             4   51[COMRAM] unsigned long 
  7233 ;;  new_exp         2   56[COMRAM] short 
  7234 ;;  aexp            1   63[COMRAM] unsigned char 
  7235 ;;  bexp            1   62[COMRAM] unsigned char 
  7236 ;;  sign            1   55[COMRAM] unsigned char 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  4   39[COMRAM] unsigned char 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7246 ;;      Params:         8       0       0       0       0       0       0
  7247 ;;      Locals:        13       0       0       0       0       0       0
  7248 ;;      Temps:          4       0       0       0       0       0       0
  7249 ;;      Totals:        25       0       0       0       0       0       0
  7250 ;;Total ram usage:       25 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_ADC_read_temp
  7256 ;;		_efgtoa
  7257 ;;		_ADC_read_lumi
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text32
  7262   0018E2                     __ptext32:
  7263                           	callstack 0
  7264   0018E2                     ___fldiv:
  7265                           	callstack 26
  7266   0018E2  502B               	movf	(___fldiv@b+3)^0,w,c
  7267   0018E4  0B80               	andlw	128
  7268   0018E6  6E38               	movwf	___fldiv@sign^0,c
  7269   0018E8  502B               	movf	(___fldiv@b+3)^0,w,c
  7270   0018EA  242B               	addwf	(___fldiv@b+3)^0,w,c
  7271   0018EC  6E3F               	movwf	___fldiv@bexp^0,c
  7272   0018EE  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7273   0018F0  EF7C  F00C         	goto	u2461
  7274   0018F4  EF7E  F00C         	goto	u2460
  7275   0018F8                     u2461:
  7276   0018F8  EF7F  F00C         	goto	l2530
  7277   0018FC                     u2460:
  7278   0018FC  803F               	bsf	___fldiv@bexp^0,0,c
  7279   0018FE                     l2530:
  7280   0018FE  503F               	movf	___fldiv@bexp^0,w,c
  7281   001900  B4D8               	btfsc	status,2,c
  7282   001902  EF85  F00C         	goto	u2471
  7283   001906  EF87  F00C         	goto	u2470
  7284   00190A                     u2471:
  7285   00190A  EF9B  F00C         	goto	l2540
  7286   00190E                     u2470:
  7287   00190E  283F               	incf	___fldiv@bexp^0,w,c
  7288   001910  A4D8               	btfss	status,2,c
  7289   001912  EF8D  F00C         	goto	u2481
  7290   001916  EF8F  F00C         	goto	u2480
  7291   00191A                     u2481:
  7292   00191A  EF97  F00C         	goto	l2536
  7293   00191E                     u2480:
  7294   00191E  0E00               	movlw	0
  7295   001920  6E28               	movwf	___fldiv@b^0,c
  7296   001922  0E00               	movlw	0
  7297   001924  6E29               	movwf	(___fldiv@b+1)^0,c
  7298   001926  0E00               	movlw	0
  7299   001928  6E2A               	movwf	(___fldiv@b+2)^0,c
  7300   00192A  0E00               	movlw	0
  7301   00192C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7302   00192E                     l2536:
  7303   00192E  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7304   001930  6A2B               	clrf	(___fldiv@b+3)^0,c
  7305   001932  EFA3  F00C         	goto	l2542
  7306   001936                     l2540:
  7307   001936  0E00               	movlw	0
  7308   001938  6E28               	movwf	___fldiv@b^0,c
  7309   00193A  0E00               	movlw	0
  7310   00193C  6E29               	movwf	(___fldiv@b+1)^0,c
  7311   00193E  0E00               	movlw	0
  7312   001940  6E2A               	movwf	(___fldiv@b+2)^0,c
  7313   001942  0E00               	movlw	0
  7314   001944  6E2B               	movwf	(___fldiv@b+3)^0,c
  7315   001946                     l2542:
  7316   001946  502F               	movf	(___fldiv@a+3)^0,w,c
  7317   001948  0B80               	andlw	128
  7318   00194A  1A38               	xorwf	___fldiv@sign^0,f,c
  7319   00194C  502F               	movf	(___fldiv@a+3)^0,w,c
  7320   00194E  242F               	addwf	(___fldiv@a+3)^0,w,c
  7321   001950  6E40               	movwf	___fldiv@aexp^0,c
  7322   001952  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7323   001954  EFAE  F00C         	goto	u2491
  7324   001958  EFB0  F00C         	goto	u2490
  7325   00195C                     u2491:
  7326   00195C  EFB1  F00C         	goto	l2550
  7327   001960                     u2490:
  7328   001960  8040               	bsf	___fldiv@aexp^0,0,c
  7329   001962                     l2550:
  7330   001962  5040               	movf	___fldiv@aexp^0,w,c
  7331   001964  B4D8               	btfsc	status,2,c
  7332   001966  EFB7  F00C         	goto	u2501
  7333   00196A  EFB9  F00C         	goto	u2500
  7334   00196E                     u2501:
  7335   00196E  EFCD  F00C         	goto	l2560
  7336   001972                     u2500:
  7337   001972  2840               	incf	___fldiv@aexp^0,w,c
  7338   001974  A4D8               	btfss	status,2,c
  7339   001976  EFBF  F00C         	goto	u2511
  7340   00197A  EFC1  F00C         	goto	u2510
  7341   00197E                     u2511:
  7342   00197E  EFC9  F00C         	goto	l2556
  7343   001982                     u2510:
  7344   001982  0E00               	movlw	0
  7345   001984  6E2C               	movwf	___fldiv@a^0,c
  7346   001986  0E00               	movlw	0
  7347   001988  6E2D               	movwf	(___fldiv@a+1)^0,c
  7348   00198A  0E00               	movlw	0
  7349   00198C  6E2E               	movwf	(___fldiv@a+2)^0,c
  7350   00198E  0E00               	movlw	0
  7351   001990  6E2F               	movwf	(___fldiv@a+3)^0,c
  7352   001992                     l2556:
  7353   001992  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7354   001994  6A2F               	clrf	(___fldiv@a+3)^0,c
  7355   001996  EFD5  F00C         	goto	l2562
  7356   00199A                     l2560:
  7357   00199A  0E00               	movlw	0
  7358   00199C  6E2C               	movwf	___fldiv@a^0,c
  7359   00199E  0E00               	movlw	0
  7360   0019A0  6E2D               	movwf	(___fldiv@a+1)^0,c
  7361   0019A2  0E00               	movlw	0
  7362   0019A4  6E2E               	movwf	(___fldiv@a+2)^0,c
  7363   0019A6  0E00               	movlw	0
  7364   0019A8  6E2F               	movwf	(___fldiv@a+3)^0,c
  7365   0019AA                     l2562:
  7366   0019AA  502C               	movf	___fldiv@a^0,w,c
  7367   0019AC  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7368   0019AE  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7369   0019B0  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7370   0019B2  A4D8               	btfss	status,2,c
  7371   0019B4  EFDE  F00C         	goto	u2521
  7372   0019B8  EFE0  F00C         	goto	u2520
  7373   0019BC                     u2521:
  7374   0019BC  EFF8  F00C         	goto	l2574
  7375   0019C0                     u2520:
  7376   0019C0  0E00               	movlw	0
  7377   0019C2  6E28               	movwf	___fldiv@b^0,c
  7378   0019C4  0E00               	movlw	0
  7379   0019C6  6E29               	movwf	(___fldiv@b+1)^0,c
  7380   0019C8  0E00               	movlw	0
  7381   0019CA  6E2A               	movwf	(___fldiv@b+2)^0,c
  7382   0019CC  0E00               	movlw	0
  7383   0019CE  6E2B               	movwf	(___fldiv@b+3)^0,c
  7384   0019D0  0E80               	movlw	128
  7385   0019D2  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7386   0019D4  0E7F               	movlw	127
  7387   0019D6  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7388   0019D8                     l2568:
  7389   0019D8  5038               	movf	___fldiv@sign^0,w,c
  7390   0019DA  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7391   0019DC  C028  F028         	movff	___fldiv@b,?___fldiv
  7392   0019E0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7393   0019E4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7394   0019E8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7395   0019EC  EF38  F00E         	goto	l764
  7396   0019F0                     l2574:
  7397   0019F0  503F               	movf	___fldiv@bexp^0,w,c
  7398   0019F2  A4D8               	btfss	status,2,c
  7399   0019F4  EFFE  F00C         	goto	u2531
  7400   0019F8  EF00  F00D         	goto	u2530
  7401   0019FC                     u2531:
  7402   0019FC  EF0A  F00D         	goto	l2582
  7403   001A00                     u2530:
  7404   001A00  0E00               	movlw	0
  7405   001A02  6E28               	movwf	?___fldiv^0,c
  7406   001A04  0E00               	movlw	0
  7407   001A06  6E29               	movwf	(?___fldiv+1)^0,c
  7408   001A08  0E00               	movlw	0
  7409   001A0A  6E2A               	movwf	(?___fldiv+2)^0,c
  7410   001A0C  0E00               	movlw	0
  7411   001A0E  6E2B               	movwf	(?___fldiv+3)^0,c
  7412   001A10  EF38  F00E         	goto	l764
  7413   001A14                     l2582:
  7414   001A14  5040               	movf	___fldiv@aexp^0,w,c
  7415   001A16  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7416   001A1A  6A31               	clrf	(??___fldiv+1)^0,c
  7417   001A1C  5E30               	subwf	??___fldiv^0,f,c
  7418   001A1E  0E00               	movlw	0
  7419   001A20  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7420   001A22  0E7F               	movlw	127
  7421   001A24  2430               	addwf	??___fldiv^0,w,c
  7422   001A26  6E39               	movwf	___fldiv@new_exp^0,c
  7423   001A28  0E00               	movlw	0
  7424   001A2A  2031               	addwfc	(??___fldiv+1)^0,w,c
  7425   001A2C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7426   001A2E  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7427   001A32  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7428   001A36  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7429   001A3A  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7430   001A3E  0E00               	movlw	0
  7431   001A40  6E28               	movwf	___fldiv@b^0,c
  7432   001A42  0E00               	movlw	0
  7433   001A44  6E29               	movwf	(___fldiv@b+1)^0,c
  7434   001A46  0E00               	movlw	0
  7435   001A48  6E2A               	movwf	(___fldiv@b+2)^0,c
  7436   001A4A  0E00               	movlw	0
  7437   001A4C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7438   001A4E  0E00               	movlw	0
  7439   001A50  6E3B               	movwf	___fldiv@grs^0,c
  7440   001A52  0E00               	movlw	0
  7441   001A54  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7442   001A56  0E00               	movlw	0
  7443   001A58  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7444   001A5A  0E00               	movlw	0
  7445   001A5C  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7446   001A5E  6A40               	clrf	___fldiv@aexp^0,c
  7447   001A60  EF6A  F00D         	goto	l766
  7448   001A64                     l2592:
  7449   001A64  5040               	movf	___fldiv@aexp^0,w,c
  7450   001A66  B4D8               	btfsc	status,2,c
  7451   001A68  EF38  F00D         	goto	u2541
  7452   001A6C  EF3A  F00D         	goto	u2540
  7453   001A70                     u2541:
  7454   001A70  EF51  F00D         	goto	l2600
  7455   001A74                     u2540:
  7456   001A74  90D8               	bcf	status,0,c
  7457   001A76  3634               	rlcf	___fldiv@rem^0,f,c
  7458   001A78  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7459   001A7A  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7460   001A7C  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7461   001A7E  90D8               	bcf	status,0,c
  7462   001A80  3628               	rlcf	___fldiv@b^0,f,c
  7463   001A82  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7464   001A84  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7465   001A86  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7466   001A88  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7467   001A8A  EF49  F00D         	goto	u2551
  7468   001A8E  EF4B  F00D         	goto	u2550
  7469   001A92                     u2551:
  7470   001A92  EF4C  F00D         	goto	l769
  7471   001A96                     u2550:
  7472   001A96  8028               	bsf	___fldiv@b^0,0,c
  7473   001A98                     l769:
  7474   001A98  90D8               	bcf	status,0,c
  7475   001A9A  363B               	rlcf	___fldiv@grs^0,f,c
  7476   001A9C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7477   001A9E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7478   001AA0  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7479   001AA2                     l2600:
  7480   001AA2  502C               	movf	___fldiv@a^0,w,c
  7481   001AA4  5C34               	subwf	___fldiv@rem^0,w,c
  7482   001AA6  502D               	movf	(___fldiv@a+1)^0,w,c
  7483   001AA8  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7484   001AAA  502E               	movf	(___fldiv@a+2)^0,w,c
  7485   001AAC  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7486   001AAE  502F               	movf	(___fldiv@a+3)^0,w,c
  7487   001AB0  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7488   001AB2  A0D8               	btfss	status,0,c
  7489   001AB4  EF5E  F00D         	goto	u2561
  7490   001AB8  EF60  F00D         	goto	u2560
  7491   001ABC                     u2561:
  7492   001ABC  EF69  F00D         	goto	l2606
  7493   001AC0                     u2560:
  7494   001AC0  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7495   001AC2  502C               	movf	___fldiv@a^0,w,c
  7496   001AC4  5E34               	subwf	___fldiv@rem^0,f,c
  7497   001AC6  502D               	movf	(___fldiv@a+1)^0,w,c
  7498   001AC8  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7499   001ACA  502E               	movf	(___fldiv@a+2)^0,w,c
  7500   001ACC  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7501   001ACE  502F               	movf	(___fldiv@a+3)^0,w,c
  7502   001AD0  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7503   001AD2                     l2606:
  7504   001AD2  2A40               	incf	___fldiv@aexp^0,f,c
  7505   001AD4                     l766:
  7506   001AD4  0E19               	movlw	25
  7507   001AD6  6440               	cpfsgt	___fldiv@aexp^0,c
  7508   001AD8  EF70  F00D         	goto	u2571
  7509   001ADC  EF72  F00D         	goto	u2570
  7510   001AE0                     u2571:
  7511   001AE0  EF32  F00D         	goto	l2592
  7512   001AE4                     u2570:
  7513   001AE4  5034               	movf	___fldiv@rem^0,w,c
  7514   001AE6  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7515   001AE8  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7516   001AEA  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7517   001AEC  B4D8               	btfsc	status,2,c
  7518   001AEE  EF7B  F00D         	goto	u2581
  7519   001AF2  EF7D  F00D         	goto	u2580
  7520   001AF6                     u2581:
  7521   001AF6  EF95  F00D         	goto	l2618
  7522   001AFA                     u2580:
  7523   001AFA  803B               	bsf	___fldiv@grs^0,0,c
  7524   001AFC  EF95  F00D         	goto	l2618
  7525   001B00                     l2612:
  7526   001B00  90D8               	bcf	status,0,c
  7527   001B02  3628               	rlcf	___fldiv@b^0,f,c
  7528   001B04  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7529   001B06  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7530   001B08  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7531   001B0A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7532   001B0C  EF8A  F00D         	goto	u2591
  7533   001B10  EF8C  F00D         	goto	u2590
  7534   001B14                     u2591:
  7535   001B14  EF8D  F00D         	goto	l775
  7536   001B18                     u2590:
  7537   001B18  8028               	bsf	___fldiv@b^0,0,c
  7538   001B1A                     l775:
  7539   001B1A  90D8               	bcf	status,0,c
  7540   001B1C  363B               	rlcf	___fldiv@grs^0,f,c
  7541   001B1E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7542   001B20  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7543   001B22  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7544   001B24  0639               	decf	___fldiv@new_exp^0,f,c
  7545   001B26  A0D8               	btfss	status,0,c
  7546   001B28  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7547   001B2A                     l2618:
  7548   001B2A  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7549   001B2C  EF9A  F00D         	goto	u2601
  7550   001B30  EF9C  F00D         	goto	u2600
  7551   001B34                     u2601:
  7552   001B34  EF80  F00D         	goto	l2612
  7553   001B38                     u2600:
  7554   001B38  6A40               	clrf	___fldiv@aexp^0,c
  7555   001B3A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7556   001B3C  EFA2  F00D         	goto	u2611
  7557   001B40  EFA4  F00D         	goto	u2610
  7558   001B44                     u2611:
  7559   001B44  EFC8  F00D         	goto	l777
  7560   001B48                     u2610:
  7561   001B48  0EFF               	movlw	255
  7562   001B4A  143B               	andwf	___fldiv@grs^0,w,c
  7563   001B4C  6E30               	movwf	??___fldiv^0,c
  7564   001B4E  0EFF               	movlw	255
  7565   001B50  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7566   001B52  6E31               	movwf	(??___fldiv+1)^0,c
  7567   001B54  0EFF               	movlw	255
  7568   001B56  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7569   001B58  6E32               	movwf	(??___fldiv+2)^0,c
  7570   001B5A  0E7F               	movlw	127
  7571   001B5C  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7572   001B5E  6E33               	movwf	(??___fldiv+3)^0,c
  7573   001B60  5030               	movf	??___fldiv^0,w,c
  7574   001B62  1031               	iorwf	(??___fldiv+1)^0,w,c
  7575   001B64  1032               	iorwf	(??___fldiv+2)^0,w,c
  7576   001B66  1033               	iorwf	(??___fldiv+3)^0,w,c
  7577   001B68  B4D8               	btfsc	status,2,c
  7578   001B6A  EFB9  F00D         	goto	u2621
  7579   001B6E  EFBB  F00D         	goto	u2620
  7580   001B72                     u2621:
  7581   001B72  EFBF  F00D         	goto	l778
  7582   001B76                     u2620:
  7583   001B76                     l2622:
  7584   001B76  0E01               	movlw	1
  7585   001B78  6E40               	movwf	___fldiv@aexp^0,c
  7586   001B7A  EFC8  F00D         	goto	l777
  7587   001B7E                     l778:
  7588   001B7E  A028               	btfss	___fldiv@b^0,0,c
  7589   001B80  EFC4  F00D         	goto	u2631
  7590   001B84  EFC6  F00D         	goto	u2630
  7591   001B88                     u2631:
  7592   001B88  EFC8  F00D         	goto	l777
  7593   001B8C                     u2630:
  7594   001B8C  EFBB  F00D         	goto	l2622
  7595   001B90                     l777:
  7596   001B90  5040               	movf	___fldiv@aexp^0,w,c
  7597   001B92  B4D8               	btfsc	status,2,c
  7598   001B94  EFCE  F00D         	goto	u2641
  7599   001B98  EFD0  F00D         	goto	u2640
  7600   001B9C                     u2641:
  7601   001B9C  EFF4  F00D         	goto	l2634
  7602   001BA0                     u2640:
  7603   001BA0  0E01               	movlw	1
  7604   001BA2  2628               	addwf	___fldiv@b^0,f,c
  7605   001BA4  0E00               	movlw	0
  7606   001BA6  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7607   001BA8  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7608   001BAA  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7609   001BAC  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7610   001BAE  EFDB  F00D         	goto	u2651
  7611   001BB2  EFDD  F00D         	goto	u2650
  7612   001BB6                     u2651:
  7613   001BB6  EFF4  F00D         	goto	l2634
  7614   001BBA                     u2650:
  7615   001BBA  C028  F030         	movff	___fldiv@b,??___fldiv
  7616   001BBE  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7617   001BC2  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7618   001BC6  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7619   001BCA  3433               	rlcf	(??___fldiv+3)^0,w,c
  7620   001BCC  3233               	rrcf	(??___fldiv+3)^0,f,c
  7621   001BCE  3232               	rrcf	(??___fldiv+2)^0,f,c
  7622   001BD0  3231               	rrcf	(??___fldiv+1)^0,f,c
  7623   001BD2  3230               	rrcf	??___fldiv^0,f,c
  7624   001BD4  C030  F028         	movff	??___fldiv,___fldiv@b
  7625   001BD8  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7626   001BDC  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7627   001BE0  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7628   001BE4  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7629   001BE6  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7630   001BE8                     l2634:
  7631   001BE8  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7632   001BEA  EFFF  F00D         	goto	u2661
  7633   001BEE  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7634   001BF0  E108               	bnz	u2660
  7635   001BF2  2839               	incf	___fldiv@new_exp^0,w,c
  7636   001BF4  A0D8               	btfss	status,0,c
  7637   001BF6  EFFF  F00D         	goto	u2661
  7638   001BFA  EF01  F00E         	goto	u2660
  7639   001BFE                     u2661:
  7640   001BFE  EF0C  F00E         	goto	l2638
  7641   001C02                     u2660:
  7642   001C02  0E00               	movlw	0
  7643   001C04  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7644   001C06  6839               	setf	___fldiv@new_exp^0,c
  7645   001C08  0E00               	movlw	0
  7646   001C0A  6E28               	movwf	___fldiv@b^0,c
  7647   001C0C  0E00               	movlw	0
  7648   001C0E  6E29               	movwf	(___fldiv@b+1)^0,c
  7649   001C10  0E00               	movlw	0
  7650   001C12  6E2A               	movwf	(___fldiv@b+2)^0,c
  7651   001C14  0E00               	movlw	0
  7652   001C16  6E2B               	movwf	(___fldiv@b+3)^0,c
  7653   001C18                     l2638:
  7654   001C18  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7655   001C1A  EF19  F00E         	goto	u2670
  7656   001C1E  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7657   001C20  E106               	bnz	u2671
  7658   001C22  0439               	decf	___fldiv@new_exp^0,w,c
  7659   001C24  B0D8               	btfsc	status,0,c
  7660   001C26  EF17  F00E         	goto	u2671
  7661   001C2A  EF19  F00E         	goto	u2670
  7662   001C2E                     u2671:
  7663   001C2E  EF26  F00E         	goto	l2644
  7664   001C32                     u2670:
  7665   001C32  0E00               	movlw	0
  7666   001C34  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7667   001C36  0E00               	movlw	0
  7668   001C38  6E39               	movwf	___fldiv@new_exp^0,c
  7669   001C3A  0E00               	movlw	0
  7670   001C3C  6E28               	movwf	___fldiv@b^0,c
  7671   001C3E  0E00               	movlw	0
  7672   001C40  6E29               	movwf	(___fldiv@b+1)^0,c
  7673   001C42  0E00               	movlw	0
  7674   001C44  6E2A               	movwf	(___fldiv@b+2)^0,c
  7675   001C46  0E00               	movlw	0
  7676   001C48  6E2B               	movwf	(___fldiv@b+3)^0,c
  7677   001C4A  6A38               	clrf	___fldiv@sign^0,c
  7678   001C4C                     l2644:
  7679   001C4C  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7680   001C50  A03F               	btfss	___fldiv@bexp^0,0,c
  7681   001C52  EF2D  F00E         	goto	u2681
  7682   001C56  EF2F  F00E         	goto	u2680
  7683   001C5A                     u2681:
  7684   001C5A  EF32  F00E         	goto	l2650
  7685   001C5E                     u2680:
  7686   001C5E  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7687   001C60  EF33  F00E         	goto	l2652
  7688   001C64                     l2650:
  7689   001C64  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7690   001C66                     l2652:
  7691   001C66  90D8               	bcf	status,0,c
  7692   001C68  303F               	rrcf	___fldiv@bexp^0,w,c
  7693   001C6A  6E2B               	movwf	(___fldiv@b+3)^0,c
  7694   001C6C  EFEC  F00C         	goto	l2568
  7695   001C70                     l764:
  7696   001C70  0012               	return		;funcret
  7697   001C72                     __end_of___fldiv:
  7698                           	callstack 0
  7699                           
  7700 ;; *************** function _ADC_read *****************
  7701 ;; Defined at:
  7702 ;;		line 29 in file "adc.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  channel         1    wreg     unsigned char 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  channel         1    4[COMRAM] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  2    0[COMRAM] unsigned int 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7716 ;;      Params:         2       0       0       0       0       0       0
  7717 ;;      Locals:         1       0       0       0       0       0       0
  7718 ;;      Temps:          2       0       0       0       0       0       0
  7719 ;;      Totals:         5       0       0       0       0       0       0
  7720 ;;Total ram usage:        5 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_main
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text33
  7730   0029BE                     __ptext33:
  7731                           	callstack 0
  7732   0029BE                     _ADC_read:
  7733                           	callstack 30
  7734                           
  7735                           ;incstack = 0
  7736                           ;ADC_read@channel stored from wreg
  7737   0029BE  6E05               	movwf	ADC_read@channel^0,c
  7738   0029C0                     
  7739                           ;adc.c: 30:     if (channel > 13) return 0;
  7740   0029C0  0E0D               	movlw	13
  7741   0029C2  6405               	cpfsgt	ADC_read@channel^0,c
  7742   0029C4  EFE6  F014         	goto	u3771
  7743   0029C8  EFE8  F014         	goto	u3770
  7744   0029CC                     u3771:
  7745   0029CC  EFEE  F014         	goto	l3374
  7746   0029D0                     u3770:
  7747   0029D0  0E00               	movlw	0
  7748   0029D2  6E02               	movwf	(?_ADC_read+1)^0,c
  7749   0029D4  0E00               	movlw	0
  7750   0029D6  6E01               	movwf	?_ADC_read^0,c
  7751   0029D8  EF09  F015         	goto	l113
  7752   0029DC                     l3374:
  7753                           
  7754                           ;adc.c: 32:     ADCON0 &= 0xC5;
  7755   0029DC  0EC5               	movlw	197
  7756   0029DE  16C2               	andwf	194,f,c	;volatile
  7757                           
  7758                           ;adc.c: 33:     ADCON0 |= channel << 2;
  7759   0029E0  4405               	rlncf	ADC_read@channel^0,w,c	;volatile
  7760   0029E2  46E8               	rlncf	wreg,f,c
  7761   0029E4  0BFC               	andlw	252
  7762   0029E6  12C2               	iorwf	194,f,c	;volatile
  7763   0029E8                     
  7764                           ;adc.c: 34:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  7765   0029E8  0E03               	movlw	3
  7766   0029EA                     u3877:
  7767   0029EA  2EE8               	decfsz	wreg,f,c
  7768   0029EC  D7FE               	bra	u3877
  7769   0029EE  0000               	nop	
  7770   0029F0                     
  7771                           ;adc.c: 36:     GO_DONE = 1;
  7772   0029F0  82C2               	bsf	4034,1,c	;volatile
  7773   0029F2                     l114:
  7774   0029F2  B2C2               	btfsc	4034,1,c	;volatile
  7775   0029F4  EFFE  F014         	goto	u3781
  7776   0029F8  EF00  F015         	goto	u3780
  7777   0029FC                     u3781:
  7778   0029FC  EFF9  F014         	goto	l114
  7779   002A00                     u3780:
  7780   002A00                     
  7781                           ;adc.c: 39:     return (unsigned int)((ADRESH << 8) + ADRESL);
  7782   002A00  50C4               	movf	196,w,c	;volatile
  7783   002A02  6E04               	movwf	(??_ADC_read+1)^0,c
  7784   002A04  6A03               	clrf	??_ADC_read^0,c
  7785   002A06  50C3               	movf	195,w,c	;volatile
  7786   002A08  2403               	addwf	??_ADC_read^0,w,c
  7787   002A0A  6E01               	movwf	?_ADC_read^0,c
  7788   002A0C  0E00               	movlw	0
  7789   002A0E  2004               	addwfc	(??_ADC_read+1)^0,w,c
  7790   002A10  6E02               	movwf	(?_ADC_read+1)^0,c
  7791   002A12                     l113:
  7792   002A12  0012               	return		;funcret
  7793   002A14                     __end_of_ADC_read:
  7794                           	callstack 0
  7795                           
  7796 ;; *************** function _ADC_init *****************
  7797 ;; Defined at:
  7798 ;;		line 12 in file "adc.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7812 ;;      Params:         0       0       0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_main
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text34
  7826   002CB8                     __ptext34:
  7827                           	callstack 0
  7828   002CB8                     _ADC_init:
  7829                           	callstack 30
  7830   002CB8                     
  7831                           ;adc.c: 14:     TRISA = 0b00001100;
  7832   002CB8  0E0C               	movlw	12
  7833   002CBA  6E92               	movwf	146,c	;volatile
  7834                           
  7835                           ;adc.c: 17:     ADCON0bits.CHS = 0b000;
  7836   002CBC  0EC3               	movlw	-61
  7837   002CBE  16C2               	andwf	194,f,c	;volatile
  7838   002CC0                     
  7839                           ;adc.c: 18:     ADCON0bits.ADON = 1;
  7840   002CC0  80C2               	bsf	194,0,c	;volatile
  7841                           
  7842                           ;adc.c: 21:     ADCON1 = 0b00001100;
  7843   002CC2  0E0C               	movlw	12
  7844   002CC4  6EC1               	movwf	193,c	;volatile
  7845   002CC6                     
  7846                           ;adc.c: 24:     ADCON2bits.ADFM = 1;
  7847   002CC6  8EC0               	bsf	192,7,c	;volatile
  7848                           
  7849                           ;adc.c: 25:     ADCON2bits.ACQT = 0b001;
  7850   002CC8  50C0               	movf	192,w,c	;volatile
  7851   002CCA  0BC7               	andlw	-57
  7852   002CCC  0908               	iorlw	8
  7853   002CCE  6EC0               	movwf	192,c	;volatile
  7854                           
  7855                           ;adc.c: 26:     ADCON2bits.ADCS = 0b000;
  7856   002CD0  0EF8               	movlw	-8
  7857   002CD2  16C0               	andwf	192,f,c	;volatile
  7858   002CD4  0012               	return		;funcret
  7859   002CD6                     __end_of_ADC_init:
  7860                           	callstack 0
  7861                           
  7862                           	psect	rparam
  7863   000001                     ___rparam_used  equ	1
  7864   000000                     ___param_bank   equ	0
  7865   000000                     __Lparam        equ	__Lrparam
  7866   000000                     __Hparam        equ	__Hrparam
  7867                           
  7868                           	psect	config
  7869                           
  7870                           ; Padding undefined space
  7871   300000                     	org	3145728
  7872   300000  FF                 	db	255
  7873                           
  7874                           ;Config register CONFIG1H @ 0x300001
  7875                           ;	Oscillator Selection bits
  7876                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7877                           ;	Fail-Safe Clock Monitor Enable bit
  7878                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7879                           ;	Internal/External Oscillator Switchover bit
  7880                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7881   300001                     	org	3145729
  7882   300001  08                 	db	8
  7883                           
  7884                           ;Config register CONFIG2L @ 0x300002
  7885                           ;	Power-up Timer Enable bit
  7886                           ;	PWRT = OFF, PWRT disabled
  7887                           ;	Brown-out Reset Enable bits
  7888                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7889                           ;	Brown Out Reset Voltage bits
  7890                           ;	BORV = 3, Minimum setting
  7891   300002                     	org	3145730
  7892   300002  19                 	db	25
  7893                           
  7894                           ;Config register CONFIG2H @ 0x300003
  7895                           ;	Watchdog Timer Enable bit
  7896                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7897                           ;	Watchdog Timer Postscale Select bits
  7898                           ;	WDTPS = 32768, 1:32768
  7899   300003                     	org	3145731
  7900   300003  1E                 	db	30
  7901                           
  7902                           ; Padding undefined space
  7903   300004                     	org	3145732
  7904   300004  FF                 	db	255
  7905                           
  7906                           ;Config register CONFIG3H @ 0x300005
  7907                           ;	CCP2 MUX bit
  7908                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7909                           ;	PORTB A/D Enable bit
  7910                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7911                           ;	Low-Power Timer1 Oscillator Enable bit
  7912                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7913                           ;	MCLR Pin Enable bit
  7914                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7915   300005                     	org	3145733
  7916   300005  81                 	db	129
  7917                           
  7918                           ;Config register CONFIG4L @ 0x300006
  7919                           ;	Stack Full/Underflow Reset Enable bit
  7920                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7921                           ;	Single-Supply ICSP Enable bit
  7922                           ;	LVP = OFF, Single-Supply ICSP disabled
  7923                           ;	Extended Instruction Set Enable bit
  7924                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7925                           ;	Background Debugger Enable bit
  7926                           ;	DEBUG = 0x1, unprogrammed default
  7927   300006                     	org	3145734
  7928   300006  80                 	db	128
  7929                           
  7930                           ; Padding undefined space
  7931   300007                     	org	3145735
  7932   300007  FF                 	db	255
  7933                           
  7934                           ;Config register CONFIG5L @ 0x300008
  7935                           ;	Code Protection bit
  7936                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7937                           ;	Code Protection bit
  7938                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7939                           ;	Code Protection bit
  7940                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7941                           ;	Code Protection bit
  7942                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7943   300008                     	org	3145736
  7944   300008  0F                 	db	15
  7945                           
  7946                           ;Config register CONFIG5H @ 0x300009
  7947                           ;	Boot Block Code Protection bit
  7948                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7949                           ;	Data EEPROM Code Protection bit
  7950                           ;	CPD = OFF, Data EEPROM not code-protected
  7951   300009                     	org	3145737
  7952   300009  C0                 	db	192
  7953                           
  7954                           ;Config register CONFIG6L @ 0x30000A
  7955                           ;	Write Protection bit
  7956                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7957                           ;	Write Protection bit
  7958                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7959                           ;	Write Protection bit
  7960                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7961                           ;	Write Protection bit
  7962                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7963   30000A                     	org	3145738
  7964   30000A  0F                 	db	15
  7965                           
  7966                           ;Config register CONFIG6H @ 0x30000B
  7967                           ;	Configuration Register Write Protection bit
  7968                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7969                           ;	Boot Block Write Protection bit
  7970                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7971                           ;	Data EEPROM Write Protection bit
  7972                           ;	WRTD = OFF, Data EEPROM not write-protected
  7973   30000B                     	org	3145739
  7974   30000B  E0                 	db	224
  7975                           
  7976                           ;Config register CONFIG7L @ 0x30000C
  7977                           ;	Table Read Protection bit
  7978                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7979                           ;	Table Read Protection bit
  7980                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7981                           ;	Table Read Protection bit
  7982                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7983                           ;	Table Read Protection bit
  7984                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7985   30000C                     	org	3145740
  7986   30000C  0F                 	db	15
  7987                           
  7988                           ;Config register CONFIG7H @ 0x30000D
  7989                           ;	Boot Block Table Read Protection bit
  7990                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7991   30000D                     	org	3145741
  7992   30000D  40                 	db	64
  7993                           tosu	equ	0xFFF
  7994                           tosh	equ	0xFFE
  7995                           tosl	equ	0xFFD
  7996                           stkptr	equ	0xFFC
  7997                           pclatu	equ	0xFFB
  7998                           pclath	equ	0xFFA
  7999                           pcl	equ	0xFF9
  8000                           tblptru	equ	0xFF8
  8001                           tblptrh	equ	0xFF7
  8002                           tblptrl	equ	0xFF6
  8003                           tablat	equ	0xFF5
  8004                           prodh	equ	0xFF4
  8005                           prodl	equ	0xFF3
  8006                           indf0	equ	0xFEF
  8007                           postinc0	equ	0xFEE
  8008                           postdec0	equ	0xFED
  8009                           preinc0	equ	0xFEC
  8010                           plusw0	equ	0xFEB
  8011                           fsr0h	equ	0xFEA
  8012                           fsr0l	equ	0xFE9
  8013                           wreg	equ	0xFE8
  8014                           indf1	equ	0xFE7
  8015                           postinc1	equ	0xFE6
  8016                           postdec1	equ	0xFE5
  8017                           preinc1	equ	0xFE4
  8018                           plusw1	equ	0xFE3
  8019                           fsr1h	equ	0xFE2
  8020                           fsr1l	equ	0xFE1
  8021                           bsr	equ	0xFE0
  8022                           indf2	equ	0xFDF
  8023                           postinc2	equ	0xFDE
  8024                           postdec2	equ	0xFDD
  8025                           preinc2	equ	0xFDC
  8026                           plusw2	equ	0xFDB
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    0
    Data        2
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    115     126
    BANK0           128     81      85
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_string@str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), STR_1(CODE[13]), STR_2(CODE[6]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1013$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    S1013$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _lcd_string->_lcd_data
    _lcd_data->_lcd_enable
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_enable
    _ADC_read_temp->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   15794
                                             53 BANK0     28    28      0
                           _ADC_init
                           _ADC_read
                      _ADC_read_temp
                        _PWM_control
                           _PWM_init
                           _lcd_init
                     _lcd_set_cursor
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   12182
                                            103 COMRAM    12    12      0
                                             47 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   11977
                                            102 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   11843
                                             92 COMRAM    10     7      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   10913
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     707
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     331
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     190
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           2     0      2      77
                                              2 COMRAM     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0      29
                                              1 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       4     3      1     106
                                              2 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      29
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      29
                                              1 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_enable                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_control                                          4     2      2      89
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read_temp                                        8     4      4    3003
                                             64 COMRAM     8     4      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     338
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1484
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1135
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             5     3      2      58
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _ADC_read_temp
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _PWM_control
   _PWM_init
   _lcd_init
     _lcd_cmd
       _lcd_enable
   _lcd_set_cursor
     _lcd_cmd
   _lcd_string
     _lcd_data
       _lcd_enable
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBANK0           128      0       0      0.0%
BANK0              128     81      85     66.4%
BITCOMRAM          127      0       0      0.0%
COMRAM             127    115     126     99.2%
BITBIGSFRh          66      0       0      0.0%
BITBIGSFRlh         39      0       0      0.0%
BITBIGSFRllh        18      0       0      0.0%
BITBIGSFRlll         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     290      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 16 21:22:19 2025

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                lcd_data@data 0002  
              ___fldiv@sign 0038                          l51 2D24                          l54 2D16  
                        l63 2966                          l48 2D08                          l57 2C98  
                        l84 2CB6                          l68 2CF0                          l88 2A66  
                       l113 2A12                         l114 29F2                         l122 28A2  
                       l109 2CD4                         l441 275E                         l452 240E  
                       l710 11EE                         l447 23C8                         l711 11DC  
                       l800 18E0                         l456 2C6A                         l712 11A2  
                       l803 1776                         l804 1794                         l724 1396  
                       l813 18A2                         l805 17EC                         l806 17DA  
                       l902 1004                         l743 147E                         l727 1308  
                       l719 14BA                         l479 230A                         l840 2204  
                       l736 13D6                         l752 2AFC                         l737 13C4  
                       l905 09A6                         l851 219C                         l907 07EC  
                       l764 1C70                         l844 2140                         l860 2C32  
                       l837 20A8                         l766 1AD4                         l775 1B1A  
                       l935 0DEC                         l951 2802                         l776 1B38  
                       l777 1B90                         l769 1A98                         l961 1F28  
                       l778 1B7E                         l891 2908                         l947 27FA  
                       l971 2050                         l796 1580                         l887 28BA  
                       l978 2B80                         l995 1E82                         l988 260A  
                       l998 1DC6                         _PR2 0FCB          ADC_read_temp@value 0041  
                       _pad 28A4                         wreg 0FE8                ___flmul@aexp 0020  
              ___flmul@bexp 0021                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022             ?_lcd_set_cursor 0003                ___fltol@exp1 000A  
                      l1015 2AB6                        l1009 29BC                        l1027 26B4  
                      l1035 2BC0                        l1044 2BFA                        l1038 2D28  
                      l3000 06F8                        l3002 0700                        l3010 073A  
                      l3100 0C1E                        l3020 0784                        l3012 0760  
                      l3004 0714                        l2310 261C                        l3110 0CCE  
                      l3102 0C2E                        l3030 07B6                        l3014 0772  
                      l3006 071E                        l2400 1142                        l2312 262C  
                      l3120 0D32                        l3112 0D02                        l3104 0C3E  
                      l3040 0874                        l3016 0776                        l3200 27CC  
                      l2410 11BC                        l2402 116E                        l2330 1032  
                      l2322 1006                        l2314 2636                        l3130 0DE2  
                      l3122 0D36                        l3114 0D16                        l3106 0C72  
                      l3050 0934                        l3042 08A6                        l3034 07FC  
                      l3018 077C                        l3202 27D4                        l3210 1EA6  
                      l3300 2172                        l3204 2CF2                        l2500 147C  
                      l2420 11FC                        l2412 11C0                        l2404 118A  
                      l2340 106A                        l2332 1042                        l2324 1012  
                      l2316 2652                        l2308 260C                        l3140 0E26  
                      l3132 0DFE                        l3124 0D3E                        l3108 0CC8  
                      l3116 0D1A                        l3060 09CA                        l3044 08E4  
                      l3036 0802                        l3028 079C                        l3220 1EEA  
                      l3212 1EAE                        l3310 21B0                        l3302 217E  
                      l3206 2CF8                        l2510 14A8                        l2502 148C  
                      l2430 123E                        l2422 120C                        l2414 11CE  
                      l2406 119A                        l2350 1098                        l2342 1070  
                      l2334 1052                        l2326 1020                        l2318 2684  
                      l3142 0E2E                        l3134 0E0C                        l3150 0E4E  
                      l3126 0D4A                        l3118 0D2A                        l3070 09FE  
                      l3062 09D2                        l3046 08F8                        l3054 0974  
                      l3038 0836                        l3222 1EFE                        l3214 1EBC  
                      l2600 1AA2                        l3312 21D4                        l3304 218C  
                      l2512 14AA                        l2504 1492                        l2440 126C  
                      l2432 124C                        l2416 11D0                        l2408 11B0  
                      l2360 10CC                        l2352 109A                        l2344 1082  
                      l2336 1054                        l2328 1022                        l2520 2B9C  
                      l3160 0ED4                        l3152 0E60                        l3144 0E3E  
                      l3136 0E1C                        l3128 0DC2                        l3080 0A48  
                      l3072 0A16                        l3064 09DA                        l3056 09AE  
                      l3048 092C                        l3232 1F2E                        l3224 1F08  
                      l3216 1EC0                        l3208 1E84                        l3400 2C14  
                      l2610 1AFA                        l2602 1AC0                        l2530 18FE  
                      l3314 21E4                        l3306 21AA                        l2506 1494  
                      l2450 12D8                        l2442 1276                        l2434 1258  
                      l2426 1220                        l2418 11DA                        l2370 1106  
                      l2354 10AA                        l2362 10D2                        l2346 1084  
                      l2338 105A                        l2522 2BA0                        l3170 0F4E  
                      l3162 0F08                        l3154 0E72                        l3146 0E42  
                      l3138 0E20                        l3082 0A5C                        l3090 0B52  
                      l3074 0A28                        l3066 09DE                        l3058 09BE  
                      l3242 1FBC                        l3234 1F4C                        l3226 1F1A  
                      l3218 1EE2                        l3322 2B42                        l3402 2C26  
                      l3332 2CB8                        l2620 1B48                        l2612 1B00  
                      l2604 1AC2                        l2532 190E                        l2540 1936  
                      l2524 18E2                        l2700 15B4                        l3316 21F2  
                      l3308 21AC                        l3340 2CA2                        l2508 149A  
                      l2452 12E8                        l2436 125C                        l2428 1230  
                      l2444 127C                        l2380 111A                        l2372 110A  
                      l2364 10E2                        l2356 10BA                        l2348 108A  
                      l2516 2B82                        l3180 0FBA                        l3172 0F56  
                      l3164 0F10                        l3156 0E76                        l3148 0E48  
                      l3092 0B70                        l3084 0AC0                        l3068 09F0  
                      l3076 0A30                        l3252 200A                        l3244 1FD2  
                      l3236 1F6C                        l3228 1F20                        l3324 2B4A  
                      l3334 2CC0                        l2630 1BBA                        l2622 1B76  
                      l2614 1B0A                        l2606 1AD2                        l2550 1962  
                      l2542 1946                        l2534 191E                        l2526 18EE  
                      l2710 1604                        l2702 15C0                        l3318 21F4  
                      l3342 2CAC                        l3350 2C86                        l3270 2D0C  
                      l2470 136A                        l2462 1342                        l2446 12A2  
                      l2454 12F8                        l2438 126A                        l2390 112E  
                      l2382 111E                        l2374 110E                        l2366 10F4  
                      l2358 10CA                        l2518 2B8E                        l3182 0FCA  
                      l3174 0F64                        l3158 0E7C                        l3166 0F14  
                      l3094 0BA4                        l3086 0B18                        l3078 0A38  
                      l3190 2760                        l3246 1FE0                        l3238 1F94  
                      l3254 2022                        l3326 2B5A                        l3336 2CC6  
                      l2640 1C32                        l2632 1BE4                        l2616 1B18  
                      l2608 1AE4                        l2552 1972                        l2560 199A  
                      l2544 194C                        l2536 192E                        l2528 18FC  
                      l2720 1646                        l2712 1610                        l2704 15CA  
                      l3280 2072                        l3264 2D1A                        l3352 2C8C  
                      l3344 2C6C                        l3272 2D0E                        l3360 290A  
                      l2800 2722                        l2480 13A6                        l2472 1372  
                      l2464 134C                        l2456 131E                        l2448 12D6  
                      l2392 1132                        l2384 1122                        l2376 1112  
                      l2368 1102                        l3184 0FE0                        l3176 0F94  
                      l3168 0F32                        l3096 0BD6                        l3088 0B4C  
                      l3192 2768                        l3328 2B76                        l3370 29D0  
                      l2650 1C64                        l2642 1C4A                        l2626 1BA0  
                      l2634 1BE8                        l2618 1B2A                        l2570 19DC  
                      l2562 19AA                        l2554 1982                        l2546 1952  
                      l2538 1930                        l2730 16A8                        l2722 1652  
                      l2714 161C                        l2706 15E0                        l3290 20EA  
                      l3282 20B8                        l3338 2C9A                        l3266 2D1C  
                      l3354 2C92                        l3346 2C72                        l3274 2D12  
                      l3362 290E                        l2802 2732                        l2810 230C  
                      l2490 1400                        l2482 13BC                        l2474 1376  
                      l2466 135A                        l2458 132E                        l2394 1136  
                      l2386 1126                        l2378 1116                        l3186 0FE8  
                      l3178 0FA2                        l3098 0BEC                        l3194 278A  
                      l3258 202E                        l3380 2A00                        l2652 1C66  
                      l2644 1C4C                        l2636 1C02                        l2628 1BAC  
                      l2564 19C0                        l2556 1992                        l2548 1960  
                      l2740 173E                        l2732 16B4                        l2724 1662  
                      l2716 162A                        l2708 15EC                        l2660 14BC  
                      l3292 20F6                        l3284 20CE                        l3276 2054  
                      l3268 2D20                        l3348 2C80                        l3356 2CD8  
                      l3364 2932                        l2804 2756                        l2820 2396  
                      l2812 233A                        l2492 143A                        l2476 1386  
                      l2468 135C                        l2396 113A                        l2388 112A  
                      l2900 256C                        l3196 2792                        l3460 2420  
                      l3452 2410                        l3374 29DC                        l2646 1C50  
                      l2638 1C18                        l2590 1A5E                        l2582 1A14  
                      l2566 19D0                        l2574 19F0                        l2558 1994  
                      l2750 17A4                        l2742 175C                        l2734 16D0  
                      l2726 167C                        l2718 1636                        l2670 14F8  
                      l2662 14C8                        l3294 2128                        l3278 2064  
                      l3390 2A22                        l3358 2CE0                        l3366 2936  
                      l2806 275C                        l2822 23A8                        l2814 234A  
                      l2486 13E6                        l2494 143C                        l2478 1388  
                      l2398 113E                        l2910 25BE                        l2902 2594  
                      l3198 27AE                        l3470 247E                        l3462 242A  
                      l3454 2414                        l3376 29E8                        l3368 29C0  
                      l2648 1C5E                        l2592 1A64                        l2584 1A2E  
                      l2576 1A00                        l2568 19D8                        l2760 1816  
                      l2752 17D2                        l2744 1766                        l2736 16FA  
                      l2728 168C                        l2680 152A                        l2672 1508  
                      l2664 14D6                        l3296 212A                        l3288 20E2  
                      l3384 2804                        l3392 2A3A                        l2824 23B6  
                      l2816 2378                        l2832 2C34                        l2496 144C  
                      l2488 13F2                        l2840 2206                        l2904 25A0  
                      l2920 2BCA                        l3480 24AC                        l3472 2486  
                      l3464 243A                        l3456 2418                        l3378 29F0  
                      l2594 1A74                        l2586 1A3E                        l2578 1A00  
                      l2770 188C                        l2762 1840                        l2746 1774  
                      l2738 1730                        l2690 156A                        l2682 1538  
                      l2674 150E                        l2666 14D8                        l3298 2136  
                      l2826 2406                        l2818 2388                        l2834 2C4A  
                      l2498 145C                        l2850 225C                        l2842 221C  
                      l2914 2602                        l2930 1C72                        l2922 2968  
                      l3394 2BFC                        l3482 24B6                        l3474 249A  
                      l3466 2454                        l3458 241C                        l2596 1A88  
                      l2588 1A4E                        l2780 18C6                        l2772 189C  
                      l2756 17FC                        l2764 1844                        l2748 1786  
                      l2692 1570                        l2684 153A                        l2676 151E  
                      l2668 14E8                        l3388 2A14                        l2828 240C  
                      l2836 2C5A                        l2852 226C                        l2908 25AC  
                      l2932 1C92                        l2924 2976                        l3396 2C04  
                      l3484 24C6                        l3468 2462                        l2598 1A96  
                      l2774 18A6                        l2782 18CC                        l2766 185E  
                      l2758 1808                        l2694 1590                        l2686 154A  
                      l2678 1524                        l2790 2AC8                        l2862 2296  
                      l2854 2270                        l2846 2230                        l2950 1E3A  
                      l2942 1D7A                        l2934 1CE8                        l2926 298A  
                      l2918 2BC2                        l3398 2C0C                        l3486 24E4  
                      l3478 24A0                        ?_pad 000F                        l2784 18D0  
                      l2776 18B6                        l2768 1872                        l2696 15A0  
                      l2688 155A                        l2880 22FA                        l2872 22BE  
                      l2864 22A0                        l2856 227E                        l2848 225A  
                      l2952 1E62                        l2944 1DB6                        l2936 1CFC  
                      l2960 2A7C                        l3488 24EE                        l2778 18C4  
                      l2794 26B6                        l2874 22CA                        l2866 22AA  
                      l2954 1E72                        l2938 1D0A                        l2946 1DEA  
                      l2962 2A88                        l2890 28D6                        l2970 0622  
                      l2796 26E4                        l2788 2AB8                        l2876 22DA  
                      l2948 1E26                        l2964 2A8C                        l2892 28DA  
                      l2884 28A4                        l2980 0676                        l2972 0636  
                      l2798 26F4                        l2878 22EA                        l2966 2A98  
                      l2958 2A68                        l2894 28F8                        l2886 28B2  
                      l2990 06B2                        l2982 067E                        l2974 0644  
                      l2896 250E                        l2968 2A9C                        l2888 28C6  
                      l2984 068E                        l2992 06B6                        l2976 0648  
                      l2898 252E                        l2994 06DC                        l2986 069E  
                      l2978 066C                        l2996 06EE                        l2988 06AA  
                      l2998 06F2                        STR_1 0601                        STR_2 060E  
                      STR_3 0614                        STR_4 0619                        STR_7 061D  
                      u2100 1098                        u2020 261C                        u2101 1094  
                      u2021 2618                        u2110 10AA                        u2030 262C  
                      u2111 10A6                        u2031 2628                        u2200 11EE  
                      u2120 10BA                        u3000 2292                        u2040 2652  
                      u2201 11EA                        u2121 10B6                        u3001 228E  
                      u2041 264E                        u2210 11FC                        u2130 10F4  
                      u3010 22BA                        u2050 2684                        u2211 11F8  
                      u2131 10F0                        u3011 22B6                        u2051 2680  
                      u2300 135A                        u2220 120C                        u2140 1102  
                      u2060 1020                        u3020 22DA                        u2301 1356  
                      u2221 1208                        u2141 10FE                        u2061 101C  
                      u3021 22D6                        u2310 136A                        u2230 123E  
                      u2150 116E                        u2070 1032                        u3030 22EA  
                      u3110 25F8                        u2311 1366                        u2231 123A  
                      u2151 116A                        u2071 102E                        u3031 22E6  
                      u3111 25F2                        u2400 144C                        u2320 1386  
                      u2240 124C                        u2160 1186                        u2080 1042  
                      u3120 25FA                        u3200 1D9A                        u3040 28B2  
                      u2401 1448                        u2321 1382                        u2241 1248  
                      u2161 1180                        u2081 103E                        u3105 25D0  
                      u3041 28AE                        u2410 145C                        u2330 1396  
                      u2250 126A                        u2170 1188                        u2090 1082  
                      u3210 1DB6                        u3050 28F8                        u3130 2BFA  
                      u2411 1458                        u2331 1392                        u2251 1266  
                      u2091 107E                        u3211 1DB2                        u3051 28F4  
                      u3131 2BF6                        u2500 1972                        u2420 147C  
                      u2340 13A6                        u2260 12A2                        u2180 11B0  
                      u3060 254E                        u3220 1E0A                        u3140 2976  
                      u3300 06EE                        u2501 196E                        u2421 1478  
                      u2341 13A2                        u2261 129E                        u2181 11AC  
                      u3205 1D90                        u3141 2972                        u3301 06EA  
                      u2510 1982                        u2430 148C                        u2350 13BC  
                      u2270 12E8                        u2190 11CE                        u3070 256C  
                      u3230 1E26                        u3150 1CBA                        u3310 0760  
                      u2511 197E                        u2431 1488                        u2351 13B8  
                      u2271 12E4                        u2191 11CA                        u3071 2568  
                      u3231 1E22                        u3311 075C                        u2600 1B38  
                      u2520 19C0                        u2440 14A8                        u2360 13D2  
                      u2280 131E                        u3080 2594                        u3240 1E62  
                      u3160 1CE8                        u3400 09F0                        u3320 0772  
                      u2601 1B34                        u2521 19BC                        u2441 14A4  
                      u2361 13CE                        u2281 131A                        u3081 2590  
                      u3065 2544                        u3241 1E5E                        u3225 1E00  
                      u3161 1CE4                        u3401 09EC                        u3321 076E  
                      u2610 1B48                        u2530 1A00                        u2370 13E6  
                      u2290 132E                        u3090 25BE                        u3170 1D0A  
                      u3250 2AB6                        u2450 2BC0                        u3410 09FE  
                      u3330 07E8                        u2611 1B44                        u2531 19FC  
                      u2371 13E2                        u2291 132A                        u3091 25BA  
                      u3171 1D06                        u3155 1CB0                        u3251 2AB2  
                      u2451 2BBC                        u3411 09FA                        u3331 07E4  
                      u2620 1B76                        u2540 1A74                        u2460 18FC  
                      u2700 14E8                        u2380 1400                        u3500 0DFE  
                      u3420 0A28                        u3340 0874                        u3260 0644  
                      u2621 1B72                        u2541 1A70                        u2461 18F8  
                      u2701 14E4                        u2381 13FC                        u3501 0DFA  
                      u3421 0A24                        u3341 0870                        u3261 0640  
                      u2630 1B8C                        u2550 1A96                        u2470 190E  
                      u2710 14F8                        u2390 143A                        u3190 1D76  
                      u3510 0E0C                        u3430 0B70                        u3350 08A6  
                      u3270 068E                        u2631 1B88                        u2551 1A92  
                      u2471 190A                        u2711 14F4                        u2391 1436  
                      u3191 1D72                        u3511 0E08                        u3431 0B6C  
                      u3351 08A2                        u3271 068A                        u2640 1BA0  
                      u2560 1AC0                        u2480 191E                        u2800 17A4  
                      u2720 1538                        u3520 0E60                        u3440 0BD6  
                      u3360 08E4                        u3280 069E                        u3600 1EA6  
                      u2641 1B9C                        u2561 1ABC                        u2481 191A  
                      u2801 17A0                        u2721 1534                        u3185 1D1E  
                      u3521 0E5C                        u3441 0BD2                        u3361 08E0  
                      u3281 069A                        u3601 1EA2                        u2650 1BBA  
                      u2570 1AE4                        u2490 1960                        u2810 17D2  
                      u2730 154A                        u3186 1D28                        u3530 0F32  
                      u3450 0C1E                        u3370 0970                        u3290 06DC  
                      u3610 1EE2                        u2651 1BB6                        u2571 1AE0  
                      u2491 195C                        u2811 17CE                        u2731 1546  
                      u3187 1D38                        u3531 0F2E                        u3451 0C1A  
                      u3371 096C                        u3291 06D8                        u3611 1EDE  
                      u2660 1C02                        u2580 1AFA                        u2820 17E8  
                      u2740 155A                        u3700 21AA                        u2900 2756  
                      u3540 0F4E                        u3460 0C2E                        u3380 09A6  
                      u3620 1F68                        u2661 1BFE                        u2581 1AF6  
                      u2821 17E4                        u2741 1556                        u3701 21A6  
                      u2901 2752                        u3541 0F4A                        u3461 0C2A  
                      u3381 09A2                        u3621 1F64                        u2670 1C32  
                      u2590 1B18                        u2830 17FC                        u2750 1590  
                      u3710 21E4                        u3630 2064                        u2910 233A  
                      u3550 0FB4                        u3470 0CC8                        u3390 09BE  
                      u2671 1C2E                        u2591 1B14                        u2831 17F8  
                      u2751 158C                        u3711 21E0                        u3631 2060  
                      u2911 2336                        u3551 0FAE                        u3471 0CC4  
                      u3391 09BA                        u2680 1C5E                        u2840 1816  
                      u2760 15A0                        u3720 21F2                        u3640 2072  
                      u3800 2A3A                        u2920 2378                        u3560 0FB6  
                      u3480 0D16                        u2681 1C5A                        u2841 1812  
                      u2761 159C                        u3721 21EE                        u3641 206E  
                      u3801 2A36                        u2921 2374                        u3481 0D12  
                      u2850 185E                        u2770 171A                        u2690 14D6  
                      u3650 20CE                        u2930 2396                        u3570 0FCA  
                      u3490 0DC2                        u3730 2B76                        u2851 185A  
                      u2691 14D2                        u3651 20CA                        u2931 2392  
                      u3571 0FC6                        u3491 0DBE                        u3731 2B72  
                      u2860 188C                        u2780 1774                        u3660 2124  
                      u3740 292E                        u2940 23B6                        u3580 278A  
                      u3820 249A                        u2861 1888                        u2781 1770  
                      u3661 2120                        u2941 23B2                        u3581 2786  
                      u3821 2496                        u2870 18C4                        u2790 1794  
                      u3670 216E                        u3750 2956                        u2950 2406  
                      u3590 27FA                        u2871 18C0                        u2791 1790  
                      u2775 1710                        u3671 216A                        u2951 2402  
                      u3591 27F6                        u3680 218C                        u3760 2966  
                      u2880 26E4                        u2960 2C4A                        u3681 2188  
                      u3761 2962                        u2881 26E0                        u2961 2C46  
                      u3770 29D0                        u3690 219C                        u2890 2722  
                      u2970 221C                        u3771 29CC                        u3691 2198  
                      u3747 2924                        u2891 271E                        u2971 2218  
                      u3780 2A00                        u2980 2250                        u3781 29FC  
                      u3757 294C                        u3837 2446                        u3790 2A22  
                      u2990 227E                        u3791 2A1E                        u2991 227A  
                      u3847 24FA                        u3857 2C78                        u2985 2246  
                      u3867 2CFE                        u3877 29EA                        _dbuf 0100  
                      _labs 2968                        _main 2410                        _prec 00D3  
                      pad@i 0015                        pad@p 0012                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                 _PWM_control 2A14  
             ___fpclassifyf 250E                        prodh 0FF4                        prodl 0FF3  
                      start 7FFC            __end_of_ADC_init 2CD6            __end_of_ADC_read 2A14  
           ___fldiv@new_exp 0039                ___param_bank 0000                       ??_pad 0014  
             ___fltol@sign1 0009                       ?_labs 0001             __end_of___fladd 14BC  
                     ?_main 0001             __end_of___fldiv 1C72             __end_of___flneg 2C6C  
           __end_of___flmul 18E2             __end_of___flsub 2AFE             __end_of___fltol 230C  
              vfpfcnvrt@fmt 005E                       _PORTB 0F81                       _TRISA 0F92  
                     _TRISB 0F93             __end_of_lcd_cmd 2D26                       _flags 007C  
       read_prec_or_width@c 0005         read_prec_or_width@n 0006                       _fputc 260C  
                     _fputs 2B82                       labs@a 0001                       pad@fp 000F  
                     _width 00D1                       _putch 2D28                       tablat 0FF5  
          __end_of_PWM_init 2CB8                       status 0FD8             __end_of_sprintf 2C34  
            ?___fpclassifyf 0001             __initialization 2AFE                __end_of_labs 29BE  
              __end_of_main 250E                      ??_labs 0005                      ??_main 00B5  
             __activetblptr 0002  __end_of_read_prec_or_width 2804          _ADC_read_temp$1448 0045  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      ?_fputc 0001  
                    ?_fputs 0009                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE                      ?_putch 0001                      _OSCCON 0FD3  
                    _TRISD1 7CA9                      _TRISD7 7CAF            __end_of___xxtofl 2206  
          __end_of_lcd_data 2D18                vfprintf@cfmt 0067            __end_of_lcd_init 2C9A  
                    ___flge 230C                      ___fleq 26B6                   ??___fladd 0009  
                 ??___fldiv 0030                   ??___flneg 0005                   ??___flmul 0017  
                 ??___flsub 0030                   ??___fltol 0005                      _efgtoa 0622  
                    _floorf 1C72                      _memcpy 2A68        read_prec_or_width@ap 0002  
                    clear_0 2B1C                      clear_1 2B32                      isa$std 0001  
                    pad@buf 0010                   ??_lcd_cmd 0002                      _strcpy 2BC2  
            main@lm35_value 00C9                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                __pdataCOMRAM 007D                      fputs@s 0009  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0600                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                   ?_ADC_init 0001                   ?_ADC_read 0001  
                    putch@c 0001            __end_of_vfprintf 2B82                   ??_sprintf 0068  
                ___flge@ff1 0028                  ___flge@ff2 002C             ??___fpclassifyf 0005  
              ___xxtofl@arg 000B               lcd_string@str 0003                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0080     __end_of__initialization 2B38                  ___flneg@f1 0001  
             ___rparam_used 0001                  ___fltol@f1 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 26B6               __end_of_fputs 2BC2               __end_of_putch 2D2A  
          ??_lcd_set_cursor 0004                   ?_PWM_init 0001             ADC_read@channel 0005  
                ??_ADC_init 0001                  ??_ADC_read 0003                     ??_fputc 0004  
                   ??_fputs 000C                     ??_putch 0001                  __pbssBANK0 00D1  
                __pbssBANK1 0100                ?_PWM_control 0001                     ?___flge 0028  
                   ?___fleq 0001                     ?_efgtoa 0055                     ?_floorf 0041  
                   ?_memcpy 0001                     ?_strcpy 0001                  ??_PWM_init 0001  
                 ?___xxtofl 0001                  _lcd_enable 2CF2                     _GO_DONE 7E11  
                 ?_lcd_data 0001                  _lcd_string 290A                   ?_lcd_init 0001  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 1006  
                   ___fldiv 18E2                     ___flneg 2C34                     ___flmul 14BC  
                   ___flsub 2AB8                     ___fltol 2206                   ?_vfprintf 00AC  
              __psmallconst 0600               _ADC_read_temp 2804                     __pcinit 2AFE  
                   __ramtop 0600                     __ptext0 2410                     __ptext1 2BFC  
                   __ptext2 2B42                     __ptext3 1E84                     __ptext4 2760  
                   __ptext5 0622                     __ptext6 2BC2                     __ptext7 28A4  
                   __ptext8 2B82                     __ptext9 260C                     _lcd_cmd 2D18  
                 _T2CONbits 0FCA       read_prec_or_width@fmt 0001                  ??___xxtofl 0005  
                   efgtoa@c 005A                     efgtoa@d 008B                     efgtoa@e 008F  
                   efgtoa@f 0056                     efgtoa@g 00A4                     efgtoa@h 0099  
                   efgtoa@i 0097                     efgtoa@l 009D                     efgtoa@m 008D  
                   efgtoa@n 00A2                     efgtoa@p 0082                     efgtoa@t 0084  
                   efgtoa@u 00A8                     efgtoa@w 0091                  ??_lcd_data 0002  
                   _sprintf 2BFC                  ??_lcd_init 0003        end_of_initialization 2B38  
                   floorf@e 004F                     floorf@m 004B                     floorf@u 0051  
                   floorf@x 0041                     memcpy@d 0007                     memcpy@n 0005  
                   memcpy@s 0009                     fputc@fp 0003               __Lmediumconst 0000  
                   fputs@fp 000B          _read_prec_or_width 2760           __end_of_vfpfcnvrt 2052  
                efgtoa@mode 0089                  efgtoa@sign 00A1     lcd_set_cursor@positions 0004  
                   postdec2 0FDD         ?_read_prec_or_width 0001                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0061  
            ?_ADC_read_temp 0041                  ??_vfprintf 0067                     strcpy@d 0005  
                 _PORTCbits 0F82                   _PORTDbits 0F83                 ___fladd@grs 0010  
               ?_lcd_enable 0001               ___xxtofl@sign 0009                   _TRISCbits 0F94  
                lcd_cmd@cmd 0002        ??_read_prec_or_width 0003                 ___fldiv@grs 003B  
               ___fldiv@rem 0034                 ?_lcd_string 0003                 ___flmul@grs 001C  
               _CCP1CONbits 0FBD                  main@buffer 00B7          main@pwm_duty_cycle 00CF  
            __end_of___flge 2410              __end_of___fleq 2760                 vfpfcnvrt@ap 005F  
               vfpfcnvrt@cp 0066                 vfpfcnvrt@fp 005D          main@lm35_raw_value 00CD  
             __pidataCOMRAM 2D26              __end_of_efgtoa 1006              __end_of_floorf 1E84  
            __end_of_memcpy 2AB8                  floorf@F521 0074              __end_of_strcpy 2BFC  
       start_initialization 2AFE                 __end_of_pad 290A       __end_of___fpclassifyf 260C  
               vfprintf@fmt 00AD             ??_ADC_read_temp 0045                    ??___flge 0030  
                  ??___fleq 0009                    ??_efgtoa 005B                    ??_floorf 0045  
                  ??_memcpy 0007                    ??_strcpy 0004                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 002C                   ___fldiv@b 0028  
       lcd_set_cursor@F2720 007D                   ___flmul@a 0013                   ___flmul@b 000F  
               __pbssCOMRAM 0074                   ___flsub@a 002C                   ___flsub@b 0028  
             __pcstackBANK0 0080                 _efgtoa$1138 0086                    ?___fladd 0001  
                  ?___fldiv 0028                    ?___flneg 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0001                    ?_lcd_cmd 0001  
               __smallconst 0600                    _ADC_init 2CB8                    _ADC_read 29BE  
                  ?_sprintf 00AF            PWM_control@value 0001                   _vfpfcnvrt 1E84  
                _ADCON0bits 0FC2                  _ADCON2bits 0FC0                    _PWM_init 2C9A  
              ??_lcd_enable 0001                ??_lcd_string 0005                  vfpfcnvrt@c 0065  
                  __Hrparam 0000                   memcpy@tmp 000B                  vfprintf@ap 00AE  
                  __Lrparam 0000                  vfprintf@fp 00AC          __end_of_lcd_enable 2D0A  
                ?_vfpfcnvrt 005D          __end_of_lcd_string 2968          ___fpclassifyf@F465 0078  
                sprintf@fmt 00B0                    ___xxtofl 2052                    __ptext10 2D28  
                  __ptext11 2A68                    __ptext20 26B6                    __ptext12 2968  
                  __ptext21 290A                    __ptext13 1C72                    __ptext30 2052  
                  __ptext22 2D0A                    __ptext14 250E                    __ptext31 14BC  
                  __ptext23 2CD6                    __ptext15 2206                    __ptext32 18E2  
                  __ptext24 2C6C                    __ptext16 2AB8                    __ptext33 29BE  
                  __ptext25 2D18                    __ptext17 1006                    __ptext34 2CB8  
                  __ptext26 2CF2                    __ptext18 2C34                    __ptext27 2C9A  
                  __ptext19 230C                    __ptext28 2A14                    __ptext29 2804  
                  _lcd_data 2D0A                    _lcd_init 2C6C                  strcpy@dest 0001  
             ??_PWM_control 0003                    efgtoa@fp 0055                    efgtoa@ne 0080  
                  efgtoa@pp 0088                    efgtoa@ou 0093                    isa$xinst 0000  
                  _vfprintf 2B42                    memcpy@d1 0001                    memcpy@s1 0003  
            _lcd_set_cursor 2CD6           lcd_set_cursor@col 0003                   sprintf@ap 0068  
         lcd_set_cursor@row 0006                   strcpy@src 0003                 efgtoa@nmode 008A  
       __end_of_PWM_control 2A68       __end_of_ADC_read_temp 28A4                 ??_vfpfcnvrt 0060  
         main@ldr_raw_value 00C7                    sprintf@f 0069                    sprintf@s 00AF  
    __end_of_lcd_set_cursor 2CF2               ___fladd@signs 000D                ___fladd@aexp 000E  
              ___fladd@bexp 000F  
