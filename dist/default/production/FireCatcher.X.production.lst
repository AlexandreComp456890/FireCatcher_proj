

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 14:11:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 17/01/2025 GMT
    66                           ; 
    67                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4520 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000FE0                     bsr             equ	4064
   100   000FE9                     fsr0            equ	4073
   101   000FEA                     fsr0h           equ	4074
   102   000FE9                     fsr0l           equ	4073
   103   000FE1                     fsr1            equ	4065
   104   000FE2                     fsr1h           equ	4066
   105   000FE1                     fsr1l           equ	4065
   106   000FD9                     fsr2            equ	4057
   107   000FDA                     fsr2h           equ	4058
   108   000FD9                     fsr2l           equ	4057
   109   000FEF                     indf0           equ	4079
   110   000FE7                     indf1           equ	4071
   111   000FDF                     indf2           equ	4063
   112   000FF2                     intcon          equ	4082
   113   000000                     nvmcon          equ	0
   114   000FF9                     pcl             equ	4089
   115   000FFA                     pclath          equ	4090
   116   000FFB                     pclatu          equ	4091
   117   000FEB                     plusw0          equ	4075
   118   000FE3                     plusw1          equ	4067
   119   000FDB                     plusw2          equ	4059
   120   000FED                     postdec0        equ	4077
   121   000FE5                     postdec1        equ	4069
   122   000FDD                     postdec2        equ	4061
   123   000FEE                     postinc0        equ	4078
   124   000FE6                     postinc1        equ	4070
   125   000FDE                     postinc2        equ	4062
   126   000FEC                     preinc0         equ	4076
   127   000FE4                     preinc1         equ	4068
   128   000FDC                     preinc2         equ	4060
   129   000FF3                     prod            equ	4083
   130   000FF4                     prodh           equ	4084
   131   000FF3                     prodl           equ	4083
   132   000FD8                     status          equ	4056
   133   000FF5                     tablat          equ	4085
   134   000FF6                     tblptr          equ	4086
   135   000FF7                     tblptrh         equ	4087
   136   000FF6                     tblptrl         equ	4086
   137   000FF8                     tblptru         equ	4088
   138   000FFD                     tosl            equ	4093
   139   000FE8                     wreg            equ	4072
   140   000F80                     PORTA           equ	3968	;# 
   141   000F81                     PORTB           equ	3969	;# 
   142   000F82                     PORTC           equ	3970	;# 
   143   000F83                     PORTD           equ	3971	;# 
   144   000F84                     PORTE           equ	3972	;# 
   145   000F89                     LATA            equ	3977	;# 
   146   000F8A                     LATB            equ	3978	;# 
   147   000F8B                     LATC            equ	3979	;# 
   148   000F8C                     LATD            equ	3980	;# 
   149   000F8D                     LATE            equ	3981	;# 
   150   000F92                     TRISA           equ	3986	;# 
   151   000F92                     DDRA            equ	3986	;# 
   152   000F93                     TRISB           equ	3987	;# 
   153   000F93                     DDRB            equ	3987	;# 
   154   000F94                     TRISC           equ	3988	;# 
   155   000F94                     DDRC            equ	3988	;# 
   156   000F95                     TRISD           equ	3989	;# 
   157   000F95                     DDRD            equ	3989	;# 
   158   000F96                     TRISE           equ	3990	;# 
   159   000F96                     DDRE            equ	3990	;# 
   160   000F9B                     OSCTUNE         equ	3995	;# 
   161   000F9D                     PIE1            equ	3997	;# 
   162   000F9E                     PIR1            equ	3998	;# 
   163   000F9F                     IPR1            equ	3999	;# 
   164   000FA0                     PIE2            equ	4000	;# 
   165   000FA1                     PIR2            equ	4001	;# 
   166   000FA2                     IPR2            equ	4002	;# 
   167   000FA6                     EECON1          equ	4006	;# 
   168   000FA7                     EECON2          equ	4007	;# 
   169   000FA8                     EEDATA          equ	4008	;# 
   170   000FA9                     EEADR           equ	4009	;# 
   171   000FAB                     RCSTA           equ	4011	;# 
   172   000FAB                     RCSTA1          equ	4011	;# 
   173   000FAC                     TXSTA           equ	4012	;# 
   174   000FAC                     TXSTA1          equ	4012	;# 
   175   000FAD                     TXREG           equ	4013	;# 
   176   000FAD                     TXREG1          equ	4013	;# 
   177   000FAE                     RCREG           equ	4014	;# 
   178   000FAE                     RCREG1          equ	4014	;# 
   179   000FAF                     SPBRG           equ	4015	;# 
   180   000FAF                     SPBRG1          equ	4015	;# 
   181   000FB0                     SPBRGH          equ	4016	;# 
   182   000FB1                     T3CON           equ	4017	;# 
   183   000FB2                     TMR3            equ	4018	;# 
   184   000FB2                     TMR3L           equ	4018	;# 
   185   000FB3                     TMR3H           equ	4019	;# 
   186   000FB4                     CMCON           equ	4020	;# 
   187   000FB5                     CVRCON          equ	4021	;# 
   188   000FB6                     ECCP1AS         equ	4022	;# 
   189   000FB6                     ECCPAS          equ	4022	;# 
   190   000FB7                     PWM1CON         equ	4023	;# 
   191   000FB7                     ECCP1DEL        equ	4023	;# 
   192   000FB8                     BAUDCON         equ	4024	;# 
   193   000FB8                     BAUDCTL         equ	4024	;# 
   194   000FBA                     CCP2CON         equ	4026	;# 
   195   000FBB                     CCPR2           equ	4027	;# 
   196   000FBB                     CCPR2L          equ	4027	;# 
   197   000FBC                     CCPR2H          equ	4028	;# 
   198   000FBD                     CCP1CON         equ	4029	;# 
   199   000FBE                     CCPR1           equ	4030	;# 
   200   000FBE                     CCPR1L          equ	4030	;# 
   201   000FBF                     CCPR1H          equ	4031	;# 
   202   000FC0                     ADCON2          equ	4032	;# 
   203   000FC1                     ADCON1          equ	4033	;# 
   204   000FC2                     ADCON0          equ	4034	;# 
   205   000FC3                     ADRES           equ	4035	;# 
   206   000FC3                     ADRESL          equ	4035	;# 
   207   000FC4                     ADRESH          equ	4036	;# 
   208   000FC5                     SSPCON2         equ	4037	;# 
   209   000FC6                     SSPCON1         equ	4038	;# 
   210   000FC7                     SSPSTAT         equ	4039	;# 
   211   000FC8                     SSPADD          equ	4040	;# 
   212   000FC9                     SSPBUF          equ	4041	;# 
   213   000FCA                     T2CON           equ	4042	;# 
   214   000FCB                     PR2             equ	4043	;# 
   215   000FCB                     MEMCON          equ	4043	;# 
   216   000FCC                     TMR2            equ	4044	;# 
   217   000FCD                     T1CON           equ	4045	;# 
   218   000FCE                     TMR1            equ	4046	;# 
   219   000FCE                     TMR1L           equ	4046	;# 
   220   000FCF                     TMR1H           equ	4047	;# 
   221   000FD0                     RCON            equ	4048	;# 
   222   000FD1                     WDTCON          equ	4049	;# 
   223   000FD2                     HLVDCON         equ	4050	;# 
   224   000FD2                     LVDCON          equ	4050	;# 
   225   000FD3                     OSCCON          equ	4051	;# 
   226   000FD5                     T0CON           equ	4053	;# 
   227   000FD6                     TMR0            equ	4054	;# 
   228   000FD6                     TMR0L           equ	4054	;# 
   229   000FD7                     TMR0H           equ	4055	;# 
   230   000FD8                     STATUS          equ	4056	;# 
   231   000FD9                     FSR2            equ	4057	;# 
   232   000FD9                     FSR2L           equ	4057	;# 
   233   000FDA                     FSR2H           equ	4058	;# 
   234   000FDB                     PLUSW2          equ	4059	;# 
   235   000FDC                     PREINC2         equ	4060	;# 
   236   000FDD                     POSTDEC2        equ	4061	;# 
   237   000FDE                     POSTINC2        equ	4062	;# 
   238   000FDF                     INDF2           equ	4063	;# 
   239   000FE0                     BSR             equ	4064	;# 
   240   000FE1                     FSR1            equ	4065	;# 
   241   000FE1                     FSR1L           equ	4065	;# 
   242   000FE2                     FSR1H           equ	4066	;# 
   243   000FE3                     PLUSW1          equ	4067	;# 
   244   000FE4                     PREINC1         equ	4068	;# 
   245   000FE5                     POSTDEC1        equ	4069	;# 
   246   000FE6                     POSTINC1        equ	4070	;# 
   247   000FE7                     INDF1           equ	4071	;# 
   248   000FE8                     WREG            equ	4072	;# 
   249   000FE9                     FSR0            equ	4073	;# 
   250   000FE9                     FSR0L           equ	4073	;# 
   251   000FEA                     FSR0H           equ	4074	;# 
   252   000FEB                     PLUSW0          equ	4075	;# 
   253   000FEC                     PREINC0         equ	4076	;# 
   254   000FED                     POSTDEC0        equ	4077	;# 
   255   000FEE                     POSTINC0        equ	4078	;# 
   256   000FEF                     INDF0           equ	4079	;# 
   257   000FF0                     INTCON3         equ	4080	;# 
   258   000FF1                     INTCON2         equ	4081	;# 
   259   000FF2                     INTCON          equ	4082	;# 
   260   000FF3                     PROD            equ	4083	;# 
   261   000FF3                     PRODL           equ	4083	;# 
   262   000FF4                     PRODH           equ	4084	;# 
   263   000FF5                     TABLAT          equ	4085	;# 
   264   000FF6                     TBLPTR          equ	4086	;# 
   265   000FF6                     TBLPTRL         equ	4086	;# 
   266   000FF7                     TBLPTRH         equ	4087	;# 
   267   000FF8                     TBLPTRU         equ	4088	;# 
   268   000FF9                     PCLAT           equ	4089	;# 
   269   000FF9                     PC              equ	4089	;# 
   270   000FF9                     PCL             equ	4089	;# 
   271   000FFA                     PCLATH          equ	4090	;# 
   272   000FFB                     PCLATU          equ	4091	;# 
   273   000FFC                     STKPTR          equ	4092	;# 
   274   000FFD                     TOS             equ	4093	;# 
   275   000FFD                     TOSL            equ	4093	;# 
   276   000FFE                     TOSH            equ	4094	;# 
   277   000FFF                     TOSU            equ	4095	;# 
   278   000F80                     PORTA           equ	3968	;# 
   279   000F81                     PORTB           equ	3969	;# 
   280   000F82                     PORTC           equ	3970	;# 
   281   000F83                     PORTD           equ	3971	;# 
   282   000F84                     PORTE           equ	3972	;# 
   283   000F89                     LATA            equ	3977	;# 
   284   000F8A                     LATB            equ	3978	;# 
   285   000F8B                     LATC            equ	3979	;# 
   286   000F8C                     LATD            equ	3980	;# 
   287   000F8D                     LATE            equ	3981	;# 
   288   000F92                     TRISA           equ	3986	;# 
   289   000F92                     DDRA            equ	3986	;# 
   290   000F93                     TRISB           equ	3987	;# 
   291   000F93                     DDRB            equ	3987	;# 
   292   000F94                     TRISC           equ	3988	;# 
   293   000F94                     DDRC            equ	3988	;# 
   294   000F95                     TRISD           equ	3989	;# 
   295   000F95                     DDRD            equ	3989	;# 
   296   000F96                     TRISE           equ	3990	;# 
   297   000F96                     DDRE            equ	3990	;# 
   298   000F9B                     OSCTUNE         equ	3995	;# 
   299   000F9D                     PIE1            equ	3997	;# 
   300   000F9E                     PIR1            equ	3998	;# 
   301   000F9F                     IPR1            equ	3999	;# 
   302   000FA0                     PIE2            equ	4000	;# 
   303   000FA1                     PIR2            equ	4001	;# 
   304   000FA2                     IPR2            equ	4002	;# 
   305   000FA6                     EECON1          equ	4006	;# 
   306   000FA7                     EECON2          equ	4007	;# 
   307   000FA8                     EEDATA          equ	4008	;# 
   308   000FA9                     EEADR           equ	4009	;# 
   309   000FAB                     RCSTA           equ	4011	;# 
   310   000FAB                     RCSTA1          equ	4011	;# 
   311   000FAC                     TXSTA           equ	4012	;# 
   312   000FAC                     TXSTA1          equ	4012	;# 
   313   000FAD                     TXREG           equ	4013	;# 
   314   000FAD                     TXREG1          equ	4013	;# 
   315   000FAE                     RCREG           equ	4014	;# 
   316   000FAE                     RCREG1          equ	4014	;# 
   317   000FAF                     SPBRG           equ	4015	;# 
   318   000FAF                     SPBRG1          equ	4015	;# 
   319   000FB0                     SPBRGH          equ	4016	;# 
   320   000FB1                     T3CON           equ	4017	;# 
   321   000FB2                     TMR3            equ	4018	;# 
   322   000FB2                     TMR3L           equ	4018	;# 
   323   000FB3                     TMR3H           equ	4019	;# 
   324   000FB4                     CMCON           equ	4020	;# 
   325   000FB5                     CVRCON          equ	4021	;# 
   326   000FB6                     ECCP1AS         equ	4022	;# 
   327   000FB6                     ECCPAS          equ	4022	;# 
   328   000FB7                     PWM1CON         equ	4023	;# 
   329   000FB7                     ECCP1DEL        equ	4023	;# 
   330   000FB8                     BAUDCON         equ	4024	;# 
   331   000FB8                     BAUDCTL         equ	4024	;# 
   332   000FBA                     CCP2CON         equ	4026	;# 
   333   000FBB                     CCPR2           equ	4027	;# 
   334   000FBB                     CCPR2L          equ	4027	;# 
   335   000FBC                     CCPR2H          equ	4028	;# 
   336   000FBD                     CCP1CON         equ	4029	;# 
   337   000FBE                     CCPR1           equ	4030	;# 
   338   000FBE                     CCPR1L          equ	4030	;# 
   339   000FBF                     CCPR1H          equ	4031	;# 
   340   000FC0                     ADCON2          equ	4032	;# 
   341   000FC1                     ADCON1          equ	4033	;# 
   342   000FC2                     ADCON0          equ	4034	;# 
   343   000FC3                     ADRES           equ	4035	;# 
   344   000FC3                     ADRESL          equ	4035	;# 
   345   000FC4                     ADRESH          equ	4036	;# 
   346   000FC5                     SSPCON2         equ	4037	;# 
   347   000FC6                     SSPCON1         equ	4038	;# 
   348   000FC7                     SSPSTAT         equ	4039	;# 
   349   000FC8                     SSPADD          equ	4040	;# 
   350   000FC9                     SSPBUF          equ	4041	;# 
   351   000FCA                     T2CON           equ	4042	;# 
   352   000FCB                     PR2             equ	4043	;# 
   353   000FCB                     MEMCON          equ	4043	;# 
   354   000FCC                     TMR2            equ	4044	;# 
   355   000FCD                     T1CON           equ	4045	;# 
   356   000FCE                     TMR1            equ	4046	;# 
   357   000FCE                     TMR1L           equ	4046	;# 
   358   000FCF                     TMR1H           equ	4047	;# 
   359   000FD0                     RCON            equ	4048	;# 
   360   000FD1                     WDTCON          equ	4049	;# 
   361   000FD2                     HLVDCON         equ	4050	;# 
   362   000FD2                     LVDCON          equ	4050	;# 
   363   000FD3                     OSCCON          equ	4051	;# 
   364   000FD5                     T0CON           equ	4053	;# 
   365   000FD6                     TMR0            equ	4054	;# 
   366   000FD6                     TMR0L           equ	4054	;# 
   367   000FD7                     TMR0H           equ	4055	;# 
   368   000FD8                     STATUS          equ	4056	;# 
   369   000FD9                     FSR2            equ	4057	;# 
   370   000FD9                     FSR2L           equ	4057	;# 
   371   000FDA                     FSR2H           equ	4058	;# 
   372   000FDB                     PLUSW2          equ	4059	;# 
   373   000FDC                     PREINC2         equ	4060	;# 
   374   000FDD                     POSTDEC2        equ	4061	;# 
   375   000FDE                     POSTINC2        equ	4062	;# 
   376   000FDF                     INDF2           equ	4063	;# 
   377   000FE0                     BSR             equ	4064	;# 
   378   000FE1                     FSR1            equ	4065	;# 
   379   000FE1                     FSR1L           equ	4065	;# 
   380   000FE2                     FSR1H           equ	4066	;# 
   381   000FE3                     PLUSW1          equ	4067	;# 
   382   000FE4                     PREINC1         equ	4068	;# 
   383   000FE5                     POSTDEC1        equ	4069	;# 
   384   000FE6                     POSTINC1        equ	4070	;# 
   385   000FE7                     INDF1           equ	4071	;# 
   386   000FE8                     WREG            equ	4072	;# 
   387   000FE9                     FSR0            equ	4073	;# 
   388   000FE9                     FSR0L           equ	4073	;# 
   389   000FEA                     FSR0H           equ	4074	;# 
   390   000FEB                     PLUSW0          equ	4075	;# 
   391   000FEC                     PREINC0         equ	4076	;# 
   392   000FED                     POSTDEC0        equ	4077	;# 
   393   000FEE                     POSTINC0        equ	4078	;# 
   394   000FEF                     INDF0           equ	4079	;# 
   395   000FF0                     INTCON3         equ	4080	;# 
   396   000FF1                     INTCON2         equ	4081	;# 
   397   000FF2                     INTCON          equ	4082	;# 
   398   000FF3                     PROD            equ	4083	;# 
   399   000FF3                     PRODL           equ	4083	;# 
   400   000FF4                     PRODH           equ	4084	;# 
   401   000FF5                     TABLAT          equ	4085	;# 
   402   000FF6                     TBLPTR          equ	4086	;# 
   403   000FF6                     TBLPTRL         equ	4086	;# 
   404   000FF7                     TBLPTRH         equ	4087	;# 
   405   000FF8                     TBLPTRU         equ	4088	;# 
   406   000FF9                     PCLAT           equ	4089	;# 
   407   000FF9                     PC              equ	4089	;# 
   408   000FF9                     PCL             equ	4089	;# 
   409   000FFA                     PCLATH          equ	4090	;# 
   410   000FFB                     PCLATU          equ	4091	;# 
   411   000FFC                     STKPTR          equ	4092	;# 
   412   000FFD                     TOS             equ	4093	;# 
   413   000FFD                     TOSL            equ	4093	;# 
   414   000FFE                     TOSH            equ	4094	;# 
   415   000FFF                     TOSU            equ	4095	;# 
   416   000F80                     PORTA           equ	3968	;# 
   417   000F81                     PORTB           equ	3969	;# 
   418   000F82                     PORTC           equ	3970	;# 
   419   000F83                     PORTD           equ	3971	;# 
   420   000F84                     PORTE           equ	3972	;# 
   421   000F89                     LATA            equ	3977	;# 
   422   000F8A                     LATB            equ	3978	;# 
   423   000F8B                     LATC            equ	3979	;# 
   424   000F8C                     LATD            equ	3980	;# 
   425   000F8D                     LATE            equ	3981	;# 
   426   000F92                     TRISA           equ	3986	;# 
   427   000F92                     DDRA            equ	3986	;# 
   428   000F93                     TRISB           equ	3987	;# 
   429   000F93                     DDRB            equ	3987	;# 
   430   000F94                     TRISC           equ	3988	;# 
   431   000F94                     DDRC            equ	3988	;# 
   432   000F95                     TRISD           equ	3989	;# 
   433   000F95                     DDRD            equ	3989	;# 
   434   000F96                     TRISE           equ	3990	;# 
   435   000F96                     DDRE            equ	3990	;# 
   436   000F9B                     OSCTUNE         equ	3995	;# 
   437   000F9D                     PIE1            equ	3997	;# 
   438   000F9E                     PIR1            equ	3998	;# 
   439   000F9F                     IPR1            equ	3999	;# 
   440   000FA0                     PIE2            equ	4000	;# 
   441   000FA1                     PIR2            equ	4001	;# 
   442   000FA2                     IPR2            equ	4002	;# 
   443   000FA6                     EECON1          equ	4006	;# 
   444   000FA7                     EECON2          equ	4007	;# 
   445   000FA8                     EEDATA          equ	4008	;# 
   446   000FA9                     EEADR           equ	4009	;# 
   447   000FAB                     RCSTA           equ	4011	;# 
   448   000FAB                     RCSTA1          equ	4011	;# 
   449   000FAC                     TXSTA           equ	4012	;# 
   450   000FAC                     TXSTA1          equ	4012	;# 
   451   000FAD                     TXREG           equ	4013	;# 
   452   000FAD                     TXREG1          equ	4013	;# 
   453   000FAE                     RCREG           equ	4014	;# 
   454   000FAE                     RCREG1          equ	4014	;# 
   455   000FAF                     SPBRG           equ	4015	;# 
   456   000FAF                     SPBRG1          equ	4015	;# 
   457   000FB0                     SPBRGH          equ	4016	;# 
   458   000FB1                     T3CON           equ	4017	;# 
   459   000FB2                     TMR3            equ	4018	;# 
   460   000FB2                     TMR3L           equ	4018	;# 
   461   000FB3                     TMR3H           equ	4019	;# 
   462   000FB4                     CMCON           equ	4020	;# 
   463   000FB5                     CVRCON          equ	4021	;# 
   464   000FB6                     ECCP1AS         equ	4022	;# 
   465   000FB6                     ECCPAS          equ	4022	;# 
   466   000FB7                     PWM1CON         equ	4023	;# 
   467   000FB7                     ECCP1DEL        equ	4023	;# 
   468   000FB8                     BAUDCON         equ	4024	;# 
   469   000FB8                     BAUDCTL         equ	4024	;# 
   470   000FBA                     CCP2CON         equ	4026	;# 
   471   000FBB                     CCPR2           equ	4027	;# 
   472   000FBB                     CCPR2L          equ	4027	;# 
   473   000FBC                     CCPR2H          equ	4028	;# 
   474   000FBD                     CCP1CON         equ	4029	;# 
   475   000FBE                     CCPR1           equ	4030	;# 
   476   000FBE                     CCPR1L          equ	4030	;# 
   477   000FBF                     CCPR1H          equ	4031	;# 
   478   000FC0                     ADCON2          equ	4032	;# 
   479   000FC1                     ADCON1          equ	4033	;# 
   480   000FC2                     ADCON0          equ	4034	;# 
   481   000FC3                     ADRES           equ	4035	;# 
   482   000FC3                     ADRESL          equ	4035	;# 
   483   000FC4                     ADRESH          equ	4036	;# 
   484   000FC5                     SSPCON2         equ	4037	;# 
   485   000FC6                     SSPCON1         equ	4038	;# 
   486   000FC7                     SSPSTAT         equ	4039	;# 
   487   000FC8                     SSPADD          equ	4040	;# 
   488   000FC9                     SSPBUF          equ	4041	;# 
   489   000FCA                     T2CON           equ	4042	;# 
   490   000FCB                     PR2             equ	4043	;# 
   491   000FCB                     MEMCON          equ	4043	;# 
   492   000FCC                     TMR2            equ	4044	;# 
   493   000FCD                     T1CON           equ	4045	;# 
   494   000FCE                     TMR1            equ	4046	;# 
   495   000FCE                     TMR1L           equ	4046	;# 
   496   000FCF                     TMR1H           equ	4047	;# 
   497   000FD0                     RCON            equ	4048	;# 
   498   000FD1                     WDTCON          equ	4049	;# 
   499   000FD2                     HLVDCON         equ	4050	;# 
   500   000FD2                     LVDCON          equ	4050	;# 
   501   000FD3                     OSCCON          equ	4051	;# 
   502   000FD5                     T0CON           equ	4053	;# 
   503   000FD6                     TMR0            equ	4054	;# 
   504   000FD6                     TMR0L           equ	4054	;# 
   505   000FD7                     TMR0H           equ	4055	;# 
   506   000FD8                     STATUS          equ	4056	;# 
   507   000FD9                     FSR2            equ	4057	;# 
   508   000FD9                     FSR2L           equ	4057	;# 
   509   000FDA                     FSR2H           equ	4058	;# 
   510   000FDB                     PLUSW2          equ	4059	;# 
   511   000FDC                     PREINC2         equ	4060	;# 
   512   000FDD                     POSTDEC2        equ	4061	;# 
   513   000FDE                     POSTINC2        equ	4062	;# 
   514   000FDF                     INDF2           equ	4063	;# 
   515   000FE0                     BSR             equ	4064	;# 
   516   000FE1                     FSR1            equ	4065	;# 
   517   000FE1                     FSR1L           equ	4065	;# 
   518   000FE2                     FSR1H           equ	4066	;# 
   519   000FE3                     PLUSW1          equ	4067	;# 
   520   000FE4                     PREINC1         equ	4068	;# 
   521   000FE5                     POSTDEC1        equ	4069	;# 
   522   000FE6                     POSTINC1        equ	4070	;# 
   523   000FE7                     INDF1           equ	4071	;# 
   524   000FE8                     WREG            equ	4072	;# 
   525   000FE9                     FSR0            equ	4073	;# 
   526   000FE9                     FSR0L           equ	4073	;# 
   527   000FEA                     FSR0H           equ	4074	;# 
   528   000FEB                     PLUSW0          equ	4075	;# 
   529   000FEC                     PREINC0         equ	4076	;# 
   530   000FED                     POSTDEC0        equ	4077	;# 
   531   000FEE                     POSTINC0        equ	4078	;# 
   532   000FEF                     INDF0           equ	4079	;# 
   533   000FF0                     INTCON3         equ	4080	;# 
   534   000FF1                     INTCON2         equ	4081	;# 
   535   000FF2                     INTCON          equ	4082	;# 
   536   000FF3                     PROD            equ	4083	;# 
   537   000FF3                     PRODL           equ	4083	;# 
   538   000FF4                     PRODH           equ	4084	;# 
   539   000FF5                     TABLAT          equ	4085	;# 
   540   000FF6                     TBLPTR          equ	4086	;# 
   541   000FF6                     TBLPTRL         equ	4086	;# 
   542   000FF7                     TBLPTRH         equ	4087	;# 
   543   000FF8                     TBLPTRU         equ	4088	;# 
   544   000FF9                     PCLAT           equ	4089	;# 
   545   000FF9                     PC              equ	4089	;# 
   546   000FF9                     PCL             equ	4089	;# 
   547   000FFA                     PCLATH          equ	4090	;# 
   548   000FFB                     PCLATU          equ	4091	;# 
   549   000FFC                     STKPTR          equ	4092	;# 
   550   000FFD                     TOS             equ	4093	;# 
   551   000FFD                     TOSL            equ	4093	;# 
   552   000FFE                     TOSH            equ	4094	;# 
   553   000FFF                     TOSU            equ	4095	;# 
   554   000F80                     PORTA           equ	3968	;# 
   555   000F81                     PORTB           equ	3969	;# 
   556   000F82                     PORTC           equ	3970	;# 
   557   000F83                     PORTD           equ	3971	;# 
   558   000F84                     PORTE           equ	3972	;# 
   559   000F89                     LATA            equ	3977	;# 
   560   000F8A                     LATB            equ	3978	;# 
   561   000F8B                     LATC            equ	3979	;# 
   562   000F8C                     LATD            equ	3980	;# 
   563   000F8D                     LATE            equ	3981	;# 
   564   000F92                     TRISA           equ	3986	;# 
   565   000F92                     DDRA            equ	3986	;# 
   566   000F93                     TRISB           equ	3987	;# 
   567   000F93                     DDRB            equ	3987	;# 
   568   000F94                     TRISC           equ	3988	;# 
   569   000F94                     DDRC            equ	3988	;# 
   570   000F95                     TRISD           equ	3989	;# 
   571   000F95                     DDRD            equ	3989	;# 
   572   000F96                     TRISE           equ	3990	;# 
   573   000F96                     DDRE            equ	3990	;# 
   574   000F9B                     OSCTUNE         equ	3995	;# 
   575   000F9D                     PIE1            equ	3997	;# 
   576   000F9E                     PIR1            equ	3998	;# 
   577   000F9F                     IPR1            equ	3999	;# 
   578   000FA0                     PIE2            equ	4000	;# 
   579   000FA1                     PIR2            equ	4001	;# 
   580   000FA2                     IPR2            equ	4002	;# 
   581   000FA6                     EECON1          equ	4006	;# 
   582   000FA7                     EECON2          equ	4007	;# 
   583   000FA8                     EEDATA          equ	4008	;# 
   584   000FA9                     EEADR           equ	4009	;# 
   585   000FAB                     RCSTA           equ	4011	;# 
   586   000FAB                     RCSTA1          equ	4011	;# 
   587   000FAC                     TXSTA           equ	4012	;# 
   588   000FAC                     TXSTA1          equ	4012	;# 
   589   000FAD                     TXREG           equ	4013	;# 
   590   000FAD                     TXREG1          equ	4013	;# 
   591   000FAE                     RCREG           equ	4014	;# 
   592   000FAE                     RCREG1          equ	4014	;# 
   593   000FAF                     SPBRG           equ	4015	;# 
   594   000FAF                     SPBRG1          equ	4015	;# 
   595   000FB0                     SPBRGH          equ	4016	;# 
   596   000FB1                     T3CON           equ	4017	;# 
   597   000FB2                     TMR3            equ	4018	;# 
   598   000FB2                     TMR3L           equ	4018	;# 
   599   000FB3                     TMR3H           equ	4019	;# 
   600   000FB4                     CMCON           equ	4020	;# 
   601   000FB5                     CVRCON          equ	4021	;# 
   602   000FB6                     ECCP1AS         equ	4022	;# 
   603   000FB6                     ECCPAS          equ	4022	;# 
   604   000FB7                     PWM1CON         equ	4023	;# 
   605   000FB7                     ECCP1DEL        equ	4023	;# 
   606   000FB8                     BAUDCON         equ	4024	;# 
   607   000FB8                     BAUDCTL         equ	4024	;# 
   608   000FBA                     CCP2CON         equ	4026	;# 
   609   000FBB                     CCPR2           equ	4027	;# 
   610   000FBB                     CCPR2L          equ	4027	;# 
   611   000FBC                     CCPR2H          equ	4028	;# 
   612   000FBD                     CCP1CON         equ	4029	;# 
   613   000FBE                     CCPR1           equ	4030	;# 
   614   000FBE                     CCPR1L          equ	4030	;# 
   615   000FBF                     CCPR1H          equ	4031	;# 
   616   000FC0                     ADCON2          equ	4032	;# 
   617   000FC1                     ADCON1          equ	4033	;# 
   618   000FC2                     ADCON0          equ	4034	;# 
   619   000FC3                     ADRES           equ	4035	;# 
   620   000FC3                     ADRESL          equ	4035	;# 
   621   000FC4                     ADRESH          equ	4036	;# 
   622   000FC5                     SSPCON2         equ	4037	;# 
   623   000FC6                     SSPCON1         equ	4038	;# 
   624   000FC7                     SSPSTAT         equ	4039	;# 
   625   000FC8                     SSPADD          equ	4040	;# 
   626   000FC9                     SSPBUF          equ	4041	;# 
   627   000FCA                     T2CON           equ	4042	;# 
   628   000FCB                     PR2             equ	4043	;# 
   629   000FCB                     MEMCON          equ	4043	;# 
   630   000FCC                     TMR2            equ	4044	;# 
   631   000FCD                     T1CON           equ	4045	;# 
   632   000FCE                     TMR1            equ	4046	;# 
   633   000FCE                     TMR1L           equ	4046	;# 
   634   000FCF                     TMR1H           equ	4047	;# 
   635   000FD0                     RCON            equ	4048	;# 
   636   000FD1                     WDTCON          equ	4049	;# 
   637   000FD2                     HLVDCON         equ	4050	;# 
   638   000FD2                     LVDCON          equ	4050	;# 
   639   000FD3                     OSCCON          equ	4051	;# 
   640   000FD5                     T0CON           equ	4053	;# 
   641   000FD6                     TMR0            equ	4054	;# 
   642   000FD6                     TMR0L           equ	4054	;# 
   643   000FD7                     TMR0H           equ	4055	;# 
   644   000FD8                     STATUS          equ	4056	;# 
   645   000FD9                     FSR2            equ	4057	;# 
   646   000FD9                     FSR2L           equ	4057	;# 
   647   000FDA                     FSR2H           equ	4058	;# 
   648   000FDB                     PLUSW2          equ	4059	;# 
   649   000FDC                     PREINC2         equ	4060	;# 
   650   000FDD                     POSTDEC2        equ	4061	;# 
   651   000FDE                     POSTINC2        equ	4062	;# 
   652   000FDF                     INDF2           equ	4063	;# 
   653   000FE0                     BSR             equ	4064	;# 
   654   000FE1                     FSR1            equ	4065	;# 
   655   000FE1                     FSR1L           equ	4065	;# 
   656   000FE2                     FSR1H           equ	4066	;# 
   657   000FE3                     PLUSW1          equ	4067	;# 
   658   000FE4                     PREINC1         equ	4068	;# 
   659   000FE5                     POSTDEC1        equ	4069	;# 
   660   000FE6                     POSTINC1        equ	4070	;# 
   661   000FE7                     INDF1           equ	4071	;# 
   662   000FE8                     WREG            equ	4072	;# 
   663   000FE9                     FSR0            equ	4073	;# 
   664   000FE9                     FSR0L           equ	4073	;# 
   665   000FEA                     FSR0H           equ	4074	;# 
   666   000FEB                     PLUSW0          equ	4075	;# 
   667   000FEC                     PREINC0         equ	4076	;# 
   668   000FED                     POSTDEC0        equ	4077	;# 
   669   000FEE                     POSTINC0        equ	4078	;# 
   670   000FEF                     INDF0           equ	4079	;# 
   671   000FF0                     INTCON3         equ	4080	;# 
   672   000FF1                     INTCON2         equ	4081	;# 
   673   000FF2                     INTCON          equ	4082	;# 
   674   000FF3                     PROD            equ	4083	;# 
   675   000FF3                     PRODL           equ	4083	;# 
   676   000FF4                     PRODH           equ	4084	;# 
   677   000FF5                     TABLAT          equ	4085	;# 
   678   000FF6                     TBLPTR          equ	4086	;# 
   679   000FF6                     TBLPTRL         equ	4086	;# 
   680   000FF7                     TBLPTRH         equ	4087	;# 
   681   000FF8                     TBLPTRU         equ	4088	;# 
   682   000FF9                     PCLAT           equ	4089	;# 
   683   000FF9                     PC              equ	4089	;# 
   684   000FF9                     PCL             equ	4089	;# 
   685   000FFA                     PCLATH          equ	4090	;# 
   686   000FFB                     PCLATU          equ	4091	;# 
   687   000FFC                     STKPTR          equ	4092	;# 
   688   000FFD                     TOS             equ	4093	;# 
   689   000FFD                     TOSL            equ	4093	;# 
   690   000FFE                     TOSH            equ	4094	;# 
   691   000FFF                     TOSU            equ	4095	;# 
   692   000F80                     PORTA           equ	3968	;# 
   693   000F81                     PORTB           equ	3969	;# 
   694   000F82                     PORTC           equ	3970	;# 
   695   000F83                     PORTD           equ	3971	;# 
   696   000F84                     PORTE           equ	3972	;# 
   697   000F89                     LATA            equ	3977	;# 
   698   000F8A                     LATB            equ	3978	;# 
   699   000F8B                     LATC            equ	3979	;# 
   700   000F8C                     LATD            equ	3980	;# 
   701   000F8D                     LATE            equ	3981	;# 
   702   000F92                     TRISA           equ	3986	;# 
   703   000F92                     DDRA            equ	3986	;# 
   704   000F93                     TRISB           equ	3987	;# 
   705   000F93                     DDRB            equ	3987	;# 
   706   000F94                     TRISC           equ	3988	;# 
   707   000F94                     DDRC            equ	3988	;# 
   708   000F95                     TRISD           equ	3989	;# 
   709   000F95                     DDRD            equ	3989	;# 
   710   000F96                     TRISE           equ	3990	;# 
   711   000F96                     DDRE            equ	3990	;# 
   712   000F9B                     OSCTUNE         equ	3995	;# 
   713   000F9D                     PIE1            equ	3997	;# 
   714   000F9E                     PIR1            equ	3998	;# 
   715   000F9F                     IPR1            equ	3999	;# 
   716   000FA0                     PIE2            equ	4000	;# 
   717   000FA1                     PIR2            equ	4001	;# 
   718   000FA2                     IPR2            equ	4002	;# 
   719   000FA6                     EECON1          equ	4006	;# 
   720   000FA7                     EECON2          equ	4007	;# 
   721   000FA8                     EEDATA          equ	4008	;# 
   722   000FA9                     EEADR           equ	4009	;# 
   723   000FAB                     RCSTA           equ	4011	;# 
   724   000FAB                     RCSTA1          equ	4011	;# 
   725   000FAC                     TXSTA           equ	4012	;# 
   726   000FAC                     TXSTA1          equ	4012	;# 
   727   000FAD                     TXREG           equ	4013	;# 
   728   000FAD                     TXREG1          equ	4013	;# 
   729   000FAE                     RCREG           equ	4014	;# 
   730   000FAE                     RCREG1          equ	4014	;# 
   731   000FAF                     SPBRG           equ	4015	;# 
   732   000FAF                     SPBRG1          equ	4015	;# 
   733   000FB0                     SPBRGH          equ	4016	;# 
   734   000FB1                     T3CON           equ	4017	;# 
   735   000FB2                     TMR3            equ	4018	;# 
   736   000FB2                     TMR3L           equ	4018	;# 
   737   000FB3                     TMR3H           equ	4019	;# 
   738   000FB4                     CMCON           equ	4020	;# 
   739   000FB5                     CVRCON          equ	4021	;# 
   740   000FB6                     ECCP1AS         equ	4022	;# 
   741   000FB6                     ECCPAS          equ	4022	;# 
   742   000FB7                     PWM1CON         equ	4023	;# 
   743   000FB7                     ECCP1DEL        equ	4023	;# 
   744   000FB8                     BAUDCON         equ	4024	;# 
   745   000FB8                     BAUDCTL         equ	4024	;# 
   746   000FBA                     CCP2CON         equ	4026	;# 
   747   000FBB                     CCPR2           equ	4027	;# 
   748   000FBB                     CCPR2L          equ	4027	;# 
   749   000FBC                     CCPR2H          equ	4028	;# 
   750   000FBD                     CCP1CON         equ	4029	;# 
   751   000FBE                     CCPR1           equ	4030	;# 
   752   000FBE                     CCPR1L          equ	4030	;# 
   753   000FBF                     CCPR1H          equ	4031	;# 
   754   000FC0                     ADCON2          equ	4032	;# 
   755   000FC1                     ADCON1          equ	4033	;# 
   756   000FC2                     ADCON0          equ	4034	;# 
   757   000FC3                     ADRES           equ	4035	;# 
   758   000FC3                     ADRESL          equ	4035	;# 
   759   000FC4                     ADRESH          equ	4036	;# 
   760   000FC5                     SSPCON2         equ	4037	;# 
   761   000FC6                     SSPCON1         equ	4038	;# 
   762   000FC7                     SSPSTAT         equ	4039	;# 
   763   000FC8                     SSPADD          equ	4040	;# 
   764   000FC9                     SSPBUF          equ	4041	;# 
   765   000FCA                     T2CON           equ	4042	;# 
   766   000FCB                     PR2             equ	4043	;# 
   767   000FCB                     MEMCON          equ	4043	;# 
   768   000FCC                     TMR2            equ	4044	;# 
   769   000FCD                     T1CON           equ	4045	;# 
   770   000FCE                     TMR1            equ	4046	;# 
   771   000FCE                     TMR1L           equ	4046	;# 
   772   000FCF                     TMR1H           equ	4047	;# 
   773   000FD0                     RCON            equ	4048	;# 
   774   000FD1                     WDTCON          equ	4049	;# 
   775   000FD2                     HLVDCON         equ	4050	;# 
   776   000FD2                     LVDCON          equ	4050	;# 
   777   000FD3                     OSCCON          equ	4051	;# 
   778   000FD5                     T0CON           equ	4053	;# 
   779   000FD6                     TMR0            equ	4054	;# 
   780   000FD6                     TMR0L           equ	4054	;# 
   781   000FD7                     TMR0H           equ	4055	;# 
   782   000FD8                     STATUS          equ	4056	;# 
   783   000FD9                     FSR2            equ	4057	;# 
   784   000FD9                     FSR2L           equ	4057	;# 
   785   000FDA                     FSR2H           equ	4058	;# 
   786   000FDB                     PLUSW2          equ	4059	;# 
   787   000FDC                     PREINC2         equ	4060	;# 
   788   000FDD                     POSTDEC2        equ	4061	;# 
   789   000FDE                     POSTINC2        equ	4062	;# 
   790   000FDF                     INDF2           equ	4063	;# 
   791   000FE0                     BSR             equ	4064	;# 
   792   000FE1                     FSR1            equ	4065	;# 
   793   000FE1                     FSR1L           equ	4065	;# 
   794   000FE2                     FSR1H           equ	4066	;# 
   795   000FE3                     PLUSW1          equ	4067	;# 
   796   000FE4                     PREINC1         equ	4068	;# 
   797   000FE5                     POSTDEC1        equ	4069	;# 
   798   000FE6                     POSTINC1        equ	4070	;# 
   799   000FE7                     INDF1           equ	4071	;# 
   800   000FE8                     WREG            equ	4072	;# 
   801   000FE9                     FSR0            equ	4073	;# 
   802   000FE9                     FSR0L           equ	4073	;# 
   803   000FEA                     FSR0H           equ	4074	;# 
   804   000FEB                     PLUSW0          equ	4075	;# 
   805   000FEC                     PREINC0         equ	4076	;# 
   806   000FED                     POSTDEC0        equ	4077	;# 
   807   000FEE                     POSTINC0        equ	4078	;# 
   808   000FEF                     INDF0           equ	4079	;# 
   809   000FF0                     INTCON3         equ	4080	;# 
   810   000FF1                     INTCON2         equ	4081	;# 
   811   000FF2                     INTCON          equ	4082	;# 
   812   000FF3                     PROD            equ	4083	;# 
   813   000FF3                     PRODL           equ	4083	;# 
   814   000FF4                     PRODH           equ	4084	;# 
   815   000FF5                     TABLAT          equ	4085	;# 
   816   000FF6                     TBLPTR          equ	4086	;# 
   817   000FF6                     TBLPTRL         equ	4086	;# 
   818   000FF7                     TBLPTRH         equ	4087	;# 
   819   000FF8                     TBLPTRU         equ	4088	;# 
   820   000FF9                     PCLAT           equ	4089	;# 
   821   000FF9                     PC              equ	4089	;# 
   822   000FF9                     PCL             equ	4089	;# 
   823   000FFA                     PCLATH          equ	4090	;# 
   824   000FFB                     PCLATU          equ	4091	;# 
   825   000FFC                     STKPTR          equ	4092	;# 
   826   000FFD                     TOS             equ	4093	;# 
   827   000FFD                     TOSL            equ	4093	;# 
   828   000FFE                     TOSH            equ	4094	;# 
   829   000FFF                     TOSU            equ	4095	;# 
   830                           
   831                           	psect	idataCOMRAM
   832   0036D0                     __pidataCOMRAM:
   833                           	callstack 0
   834                           
   835                           ;initializer for lcd_set_cursor@F2716
   836   0036D0  80                 	db	128
   837   0036D1  C0                 	db	192
   838   007CAF                     _TRISD7         set	31919
   839   007CA9                     _TRISD1         set	31913
   840   000F89                     _LATAbits       set	3977
   841   000F92                     _TRISAbits      set	3986
   842   000F80                     _PORTAbits      set	3968
   843   000FC3                     _ADRESL         set	4035
   844   000FC4                     _ADRESH         set	4036
   845   000FC2                     _ADCON0bits     set	4034
   846   000FC0                     _ADCON2         set	4032
   847   000FC1                     _ADCON1         set	4033
   848   000FC2                     _ADCON0         set	4034
   849   000F92                     _TRISA          set	3986
   850   000FBE                     _CCPR1L         set	4030
   851   000FCA                     _T2CONbits      set	4042
   852   000F94                     _TRISCbits      set	3988
   853   000FBD                     _CCP1CONbits    set	4029
   854   000FCB                     _PR2            set	4043
   855   000F93                     _TRISB          set	3987
   856   000F81                     _PORTB          set	3969
   857   000F83                     _PORTDbits      set	3971
   858   000FD5                     _T0CON          set	4053
   859   000FD6                     _TMR0L          set	4054
   860   000FD7                     _TMR0H          set	4055
   861   000F9E                     _PIR1bits       set	3998
   862   000F9D                     _PIE1bits       set	3997
   863   000FF2                     _INTCONbits     set	4082
   864   000FD3                     _OSCCON         set	4051
   865                           
   866                           	psect	smallconst
   867   000600                     __psmallconst:
   868                           	callstack 0
   869   000600  00                 	db	0
   870   000601                     STR_7:
   871   000601  2A                 	db	42
   872   000602  2A                 	db	42
   873   000603  2A                 	db	42
   874   000604  2A                 	db	42
   875   000605  21                 	db	33
   876   000606  50                 	db	80	;'P'
   877   000607  65                 	db	101	;'e'
   878   000608  72                 	db	114	;'r'
   879   000609  69                 	db	105	;'i'
   880   00060A  67                 	db	103	;'g'
   881   00060B  6F                 	db	111	;'o'
   882   00060C  21                 	db	33
   883   00060D  2A                 	db	42
   884   00060E  2A                 	db	42
   885   00060F  2A                 	db	42
   886   000610  2A                 	db	42
   887   000611  00                 	db	0
   888   000612                     STR_6:
   889   000612  2D                 	db	45
   890   000613  2D                 	db	45
   891   000614  2D                 	db	45
   892   000615  2D                 	db	45
   893   000616  41                 	db	65	;'A'
   894   000617  74                 	db	116	;'t'
   895   000618  65                 	db	101	;'e'
   896   000619  6E                 	db	110	;'n'
   897   00061A  63                 	db	99	;'c'
   898   00061B  61                 	db	97	;'a'
   899   00061C  6F                 	db	111	;'o'
   900   00061D  21                 	db	33
   901   00061E  2D                 	db	45
   902   00061F  2D                 	db	45
   903   000620  2D                 	db	45
   904   000621  2D                 	db	45
   905   000622  00                 	db	0
   906   000623                     STR_5:
   907   000623  2D                 	db	45
   908   000624  2D                 	db	45
   909   000625  2D                 	db	45
   910   000626  2D                 	db	45
   911   000627  2D                 	db	45
   912   000628  2D                 	db	45
   913   000629  2D                 	db	45
   914   00062A  4F                 	db	79	;'O'
   915   00062B  6B                 	db	107	;'k'
   916   00062C  2D                 	db	45
   917   00062D  2D                 	db	45
   918   00062E  2D                 	db	45
   919   00062F  2D                 	db	45
   920   000630  2D                 	db	45
   921   000631  2D                 	db	45
   922   000632  2D                 	db	45
   923   000633  00                 	db	0
   924   000634                     STR_10:
   925   000634  44                 	db	68	;'D'
   926   000635  48                 	db	72	;'H'
   927   000636  54                 	db	84	;'T'
   928   000637  31                 	db	49	;'1'
   929   000638  31                 	db	49	;'1'
   930   000639  20                 	db	32
   931   00063A  54                 	db	84	;'T'
   932   00063B  65                 	db	101	;'e'
   933   00063C  6D                 	db	109	;'m'
   934   00063D  3A                 	db	58	;':'
   935   00063E  20                 	db	32
   936   00063F  25                 	db	37
   937   000640  64                 	db	100	;'d'
   938   000641  2E                 	db	46
   939   000642  25                 	db	37
   940   000643  64                 	db	100	;'d'
   941   000644  00                 	db	0
   942   000645                     STR_9:
   943   000645  44                 	db	68	;'D'
   944   000646  48                 	db	72	;'H'
   945   000647  54                 	db	84	;'T'
   946   000648  31                 	db	49	;'1'
   947   000649  31                 	db	49	;'1'
   948   00064A  20                 	db	32
   949   00064B  48                 	db	72	;'H'
   950   00064C  75                 	db	117	;'u'
   951   00064D  6D                 	db	109	;'m'
   952   00064E  3A                 	db	58	;':'
   953   00064F  20                 	db	32
   954   000650  25                 	db	37
   955   000651  64                 	db	100	;'d'
   956   000652  2E                 	db	46
   957   000653  25                 	db	37
   958   000654  64                 	db	100	;'d'
   959   000655  00                 	db	0
   960   000656                     STR_4:
   961   000656  4C                 	db	76	;'L'
   962   000657  4D                 	db	77	;'M'
   963   000658  33                 	db	51	;'3'
   964   000659  35                 	db	53	;'5'
   965   00065A  3A                 	db	58	;':'
   966   00065B  20                 	db	32
   967   00065C  25                 	db	37
   968   00065D  2E                 	db	46
   969   00065E  32                 	db	50	;'2'
   970   00065F  66                 	db	102	;'f'
   971   000660  B0                 	db	-80
   972   000661  20                 	db	32
   973   000662  43                 	db	67	;'C'
   974   000663  20                 	db	32
   975   000664  00                 	db	0
   976   000665                     STR_3:
   977   000665  4C                 	db	76	;'L'
   978   000666  4D                 	db	77	;'M'
   979   000667  33                 	db	51	;'3'
   980   000668  35                 	db	53	;'5'
   981   000669  20                 	db	32
   982   00066A  61                 	db	97	;'a'
   983   00066B  6E                 	db	110	;'n'
   984   00066C  64                 	db	100	;'d'
   985   00066D  20                 	db	32
   986   00066E  4C                 	db	76	;'L'
   987   00066F  44                 	db	68	;'D'
   988   000670  52                 	db	82	;'R'
   989   000671  00                 	db	0
   990   000672                     STR_8:
   991   000672  44                 	db	68	;'D'
   992   000673  48                 	db	72	;'H'
   993   000674  54                 	db	84	;'T'
   994   000675  31                 	db	49	;'1'
   995   000676  31                 	db	49	;'1'
   996   000677  20                 	db	32
   997   000678  56                 	db	86	;'V'
   998   000679  61                 	db	97	;'a'
   999   00067A  6C                 	db	108	;'l'
  1000   00067B  75                 	db	117	;'u'
  1001   00067C  65                 	db	101	;'e'
  1002   00067D  73                 	db	115	;'s'
  1003   00067E  00                 	db	0
  1004   00067F                     STR_1:
  1005   00067F  49                 	db	73	;'I'
  1006   000680  6E                 	db	110	;'n'
  1007   000681  69                 	db	105	;'i'
  1008   000682  63                 	db	99	;'c'
  1009   000683  69                 	db	105	;'i'
  1010   000684  61                 	db	97	;'a'
  1011   000685  6E                 	db	110	;'n'
  1012   000686  64                 	db	100	;'d'
  1013   000687  6F                 	db	111	;'o'
  1014   000688  00                 	db	0
  1015   000689                     STR_11:
  1016   000689  69                 	db	105	;'i'
  1017   00068A  6E                 	db	110	;'n'
  1018   00068B  66                 	db	102	;'f'
  1019   00068C  00                 	db	0
  1020   00068D                     STR_14:
  1021   00068D  6E                 	db	110	;'n'
  1022   00068E  61                 	db	97	;'a'
  1023   00068F  6E                 	db	110	;'n'
  1024   000690  00                 	db	0
  1025   000691                     STR_2:
  1026   000691  2E                 	db	46
  1027   000692  00                 	db	0
  1028   00068D                     STR_15          equ	STR_14
  1029   00068D                     STR_16          equ	STR_14
  1030   000689                     STR_12          equ	STR_11
  1031   000689                     STR_13          equ	STR_11
  1032   000693  00                 	db	0	; dummy byte at the end
  1033   000600                     __smallconst    set	__psmallconst
  1034   000600                     __mediumconst   set	__psmallconst
  1035   000002                     __activetblptr  equ	2
  1036                           
  1037                           ; #config settings
  1038                           
  1039                           	psect	cinit
  1040   0033D0                     __pcinit:
  1041                           	callstack 0
  1042   0033D0                     start_initialization:
  1043                           	callstack 0
  1044   0033D0                     __initialization:
  1045                           	callstack 0
  1046                           
  1047                           ; Initialize objects allocated to COMRAM (2 bytes)
  1048                           ; load TBLPTR registers with __pidataCOMRAM
  1049   0033D0  0ED0               	movlw	low __pidataCOMRAM
  1050   0033D2  6EF6               	movwf	tblptrl,c
  1051   0033D4  0E36               	movlw	high __pidataCOMRAM
  1052   0033D6  6EF7               	movwf	tblptrh,c
  1053   0033D8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1054   0033DA  6EF8               	movwf	tblptru,c
  1055   0033DC  0009               	tblrd		*+	;fetch initializer
  1056   0033DE  CFF5 F07D          	movff	tablat,__pdataCOMRAM
  1057   0033E2  0009               	tblrd		*+	;fetch initializer
  1058   0033E4  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
  1059                           
  1060                           ; Clear objects allocated to BANK1 (80 bytes)
  1061   0033E8  EE01  F000         	lfsr	0,__pbssBANK1
  1062   0033EC  0E50               	movlw	80
  1063   0033EE                     clear_0:
  1064   0033EE  6AEE               	clrf	postinc0,c
  1065   0033F0  06E8               	decf	wreg,f,c
  1066   0033F2  E1FD               	bnz	clear_0
  1067                           
  1068                           ; Clear objects allocated to BANK0 (24 bytes)
  1069   0033F4  EE00  F0CE         	lfsr	0,__pbssBANK0
  1070   0033F8  0E18               	movlw	24
  1071   0033FA                     clear_1:
  1072   0033FA  6AEE               	clrf	postinc0,c
  1073   0033FC  06E8               	decf	wreg,f,c
  1074   0033FE  E1FD               	bnz	clear_1
  1075                           
  1076                           ; Clear objects allocated to COMRAM (7 bytes)
  1077   003400  EE00  F076         	lfsr	0,__pbssCOMRAM
  1078   003404  0E07               	movlw	7
  1079   003406                     clear_2:
  1080   003406  6AEE               	clrf	postinc0,c
  1081   003408  06E8               	decf	wreg,f,c
  1082   00340A  E1FD               	bnz	clear_2
  1083   00340C                     end_of_initialization:
  1084                           	callstack 0
  1085   00340C                     __end_of__initialization:
  1086                           	callstack 0
  1087   00340C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1088   00340E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1089   003410  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1090   003412  6EF8               	movwf	tblptru,c
  1091   003414  0100               	movlb	0
  1092   003416  EF3C  F008         	goto	_main	;jump to C main() function
  1093                           
  1094                           	psect	bssCOMRAM
  1095   000076                     __pbssCOMRAM:
  1096                           	callstack 0
  1097   000076                     ___fpclassifyf@F465:
  1098                           	callstack 0
  1099   000076                     	ds	4
  1100   00007A                     _timer:
  1101                           	callstack 0
  1102   00007A                     	ds	2
  1103   00007C                     _flags:
  1104                           	callstack 0
  1105   00007C                     	ds	1
  1106                           
  1107                           	psect	dataCOMRAM
  1108   00007D                     __pdataCOMRAM:
  1109                           	callstack 0
  1110   00007D                     lcd_set_cursor@F2716:
  1111                           	callstack 0
  1112   00007D                     	ds	2
  1113                           
  1114                           	psect	bssBANK0
  1115   0000CE                     __pbssBANK0:
  1116                           	callstack 0
  1117   0000CE                     floorf@F521:
  1118                           	callstack 0
  1119   0000CE                     	ds	4
  1120   0000D2                     _lm35_value:
  1121                           	callstack 0
  1122   0000D2                     	ds	4
  1123   0000D6                     _ldr_value:
  1124                           	callstack 0
  1125   0000D6                     	ds	4
  1126   0000DA                     _width:
  1127                           	callstack 0
  1128   0000DA                     	ds	2
  1129   0000DC                     _prec:
  1130                           	callstack 0
  1131   0000DC                     	ds	2
  1132   0000DE                     _lm35_raw_value:
  1133                           	callstack 0
  1134   0000DE                     	ds	2
  1135   0000E0                     _ldr_raw_value:
  1136                           	callstack 0
  1137   0000E0                     	ds	2
  1138   0000E2                     _flow:
  1139                           	callstack 0
  1140   0000E2                     	ds	2
  1141   0000E4                     _flag_analog_value:
  1142                           	callstack 0
  1143   0000E4                     	ds	2
  1144                           
  1145                           	psect	bssBANK1
  1146   000100                     __pbssBANK1:
  1147                           	callstack 0
  1148   000100                     _dbuf:
  1149                           	callstack 0
  1150   000100                     	ds	80
  1151                           
  1152                           	psect	cstackBANK0
  1153   000080                     __pcstackBANK0:
  1154                           	callstack 0
  1155   000080                     efgtoa@ne:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x0
  1159   000080                     	ds	2
  1160   000082                     efgtoa@p:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x2
  1164   000082                     	ds	2
  1165   000084                     efgtoa@t:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x4
  1169   000084                     	ds	2
  1170   000086                     _efgtoa$1380:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x6
  1174   000086                     	ds	2
  1175   000088                     efgtoa@pp:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x8
  1179   000088                     	ds	1
  1180   000089                     efgtoa@mode:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x9
  1184   000089                     	ds	1
  1185   00008A                     efgtoa@nmode:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0xA
  1189   00008A                     	ds	1
  1190   00008B                     efgtoa@d:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0xB
  1194   00008B                     	ds	2
  1195   00008D                     efgtoa@m:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0xD
  1199   00008D                     	ds	2
  1200   00008F                     efgtoa@e:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0xF
  1204   00008F                     	ds	2
  1205   000091                     efgtoa@w:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x11
  1209   000091                     	ds	2
  1210   000093                     efgtoa@ou:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x13
  1214   000093                     	ds	4
  1215   000097                     efgtoa@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x17
  1219   000097                     	ds	2
  1220   000099                     efgtoa@h:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x19
  1224   000099                     	ds	4
  1225   00009D                     efgtoa@l:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x1D
  1229   00009D                     	ds	4
  1230   0000A1                     efgtoa@sign:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x21
  1234   0000A1                     	ds	1
  1235   0000A2                     efgtoa@n:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x22
  1239   0000A2                     	ds	2
  1240   0000A4                     efgtoa@g:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x24
  1244   0000A4                     	ds	4
  1245   0000A8                     efgtoa@u:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x28
  1249   0000A8                     	ds	4
  1250   0000AC                     ?_vfprintf:
  1251                           	callstack 0
  1252   0000AC                     vfprintf@fp:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x2C
  1256   0000AC                     	ds	1
  1257   0000AD                     vfprintf@fmt:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x2D
  1261   0000AD                     	ds	1
  1262   0000AE                     vfprintf@ap:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x2E
  1266   0000AE                     	ds	1
  1267   0000AF                     ?_sprintf:
  1268                           	callstack 0
  1269   0000AF                     sprintf@s:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x2F
  1273   0000AF                     	ds	1
  1274   0000B0                     sprintf@fmt:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x30
  1278   0000B0                     	ds	5
  1279   0000B5                     main@buffer:
  1280                           	callstack 0
  1281                           
  1282                           ; 16 bytes @ 0x35
  1283   0000B5                     	ds	16
  1284   0000C5                     main@RH_Decimal:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x45
  1288   0000C5                     	ds	1
  1289   0000C6                     main@RH_Integral:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x46
  1293   0000C6                     	ds	1
  1294   0000C7                     main@T_Decimal:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x47
  1298   0000C7                     	ds	1
  1299   0000C8                     main@T_Integral:
  1300                           	callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x48
  1303   0000C8                     	ds	1
  1304   0000C9                     main@up:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x49
  1308   0000C9                     	ds	2
  1309   0000CB                     main@pwm_duty_cycle:
  1310                           	callstack 0
  1311                           
  1312                           ; 2 bytes @ 0x4B
  1313   0000CB                     	ds	2
  1314   0000CD                     main@i:
  1315                           	callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x4D
  1318   0000CD                     	ds	1
  1319                           
  1320                           	psect	cstackCOMRAM
  1321   000001                     __pcstackCOMRAM:
  1322                           	callstack 0
  1323   000001                     ?_ADC_read:
  1324                           	callstack 0
  1325   000001                     ?___fpclassifyf:
  1326                           	callstack 0
  1327   000001                     ?___awdiv:
  1328                           	callstack 0
  1329   000001                     ?___awmod:
  1330                           	callstack 0
  1331   000001                     ?_read_prec_or_width:
  1332                           	callstack 0
  1333   000001                     ?___fladd:
  1334                           	callstack 0
  1335   000001                     ?_labs:
  1336                           	callstack 0
  1337   000001                     ?___flneg:
  1338                           	callstack 0
  1339   000001                     ?___fltol:
  1340                           	callstack 0
  1341   000001                     ?___xxtofl:
  1342                           	callstack 0
  1343   000001                     DHT11_ReadData@i:
  1344                           	callstack 0
  1345   000001                     read_prec_or_width@fmt:
  1346                           	callstack 0
  1347   000001                     PWM_control@value:
  1348                           	callstack 0
  1349   000001                     ___awdiv@dividend:
  1350                           	callstack 0
  1351   000001                     ___awmod@dividend:
  1352                           	callstack 0
  1353   000001                     memcpy@d1:
  1354                           	callstack 0
  1355   000001                     fputc@c:
  1356                           	callstack 0
  1357   000001                     strcpy@dest:
  1358                           	callstack 0
  1359   000001                     ___fleq@ff1:
  1360                           	callstack 0
  1361   000001                     ___flneg@f1:
  1362                           	callstack 0
  1363   000001                     ___fltol@f1:
  1364                           	callstack 0
  1365   000001                     ___fladd@b:
  1366                           	callstack 0
  1367   000001                     ___xxtofl@val:
  1368                           	callstack 0
  1369   000001                     ___fpclassifyf@x:
  1370                           	callstack 0
  1371   000001                     labs@a:
  1372                           	callstack 0
  1373   000001                     ??_DHT11_Init:
  1374   000001                     ??_lcd_enable:
  1375   000001                     
  1376                           ; 1 bytes @ 0x0
  1377   000001                     	ds	1
  1378   000002                     lcd_cmd@cmd:
  1379                           	callstack 0
  1380   000002                     lcd_data@data:
  1381                           	callstack 0
  1382   000002                     DHT11_ReadData@data:
  1383                           	callstack 0
  1384   000002                     read_prec_or_width@ap:
  1385                           	callstack 0
  1386   000002                     
  1387                           ; 1 bytes @ 0x1
  1388   000002                     	ds	1
  1389   000003                     lcd_set_cursor@col:
  1390                           	callstack 0
  1391   000003                     fputc@fp:
  1392                           	callstack 0
  1393   000003                     strcpy@src:
  1394                           	callstack 0
  1395   000003                     lcd_string@str:
  1396                           	callstack 0
  1397   000003                     ___awdiv@divisor:
  1398                           	callstack 0
  1399   000003                     ___awmod@divisor:
  1400                           	callstack 0
  1401   000003                     memcpy@s1:
  1402                           	callstack 0
  1403   000003                     ??_lcd_init:
  1404   000003                     ??_lcd_clear:
  1405   000003                     ??_ADC_read:
  1406   000003                     ??_PWM_control:
  1407   000003                     ??_read_prec_or_width:
  1408                           
  1409                           ; 1 bytes @ 0x2
  1410   000003                     	ds	1
  1411   000004                     lcd_set_cursor@positions:
  1412                           	callstack 0
  1413   000004                     ??_fputc:
  1414   000004                     ??_strcpy:
  1415                           
  1416                           ; 1 bytes @ 0x3
  1417   000004                     	ds	1
  1418   000005                     ADC_read@channel:
  1419                           	callstack 0
  1420   000005                     ___awdiv@counter:
  1421                           	callstack 0
  1422   000005                     ___awmod@counter:
  1423                           	callstack 0
  1424   000005                     read_prec_or_width@c:
  1425                           	callstack 0
  1426   000005                     memcpy@n:
  1427                           	callstack 0
  1428   000005                     strcpy@d:
  1429                           	callstack 0
  1430   000005                     ___fleq@ff2:
  1431                           	callstack 0
  1432   000005                     ___fladd@a:
  1433                           	callstack 0
  1434   000005                     ??___fpclassifyf:
  1435   000005                     ??_labs:
  1436   000005                     ??___fltol:
  1437   000005                     ??___xxtofl:
  1438                           
  1439                           ; 1 bytes @ 0x4
  1440   000005                     	ds	1
  1441   000006                     lcd_set_cursor@row:
  1442                           	callstack 0
  1443   000006                     ___awdiv@sign:
  1444                           	callstack 0
  1445   000006                     ___awmod@sign:
  1446                           	callstack 0
  1447   000006                     read_prec_or_width@n:
  1448                           	callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x5
  1451   000006                     	ds	1
  1452   000007                     ?_abs:
  1453                           	callstack 0
  1454   000007                     ___awdiv@quotient:
  1455                           	callstack 0
  1456   000007                     abs@a:
  1457                           	callstack 0
  1458   000007                     memcpy@d:
  1459                           	callstack 0
  1460   000007                     
  1461                           ; 1 bytes @ 0x6
  1462   000007                     	ds	2
  1463   000009                     ___fltol@sign1:
  1464                           	callstack 0
  1465   000009                     ___xxtofl@sign:
  1466                           	callstack 0
  1467   000009                     ___fpclassifyf@e:
  1468                           	callstack 0
  1469   000009                     memcpy@s:
  1470                           	callstack 0
  1471   000009                     fputs@s:
  1472                           	callstack 0
  1473   000009                     ??___fladd:
  1474   000009                     ??_abs:
  1475   000009                     ??___fleq:
  1476                           
  1477                           ; 1 bytes @ 0x8
  1478   000009                     	ds	1
  1479   00000A                     ___fltol@exp1:
  1480                           	callstack 0
  1481   00000A                     ___xxtofl@exp:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x9
  1485   00000A                     	ds	1
  1486   00000B                     memcpy@tmp:
  1487                           	callstack 0
  1488   00000B                     fputs@fp:
  1489                           	callstack 0
  1490   00000B                     ___xxtofl@arg:
  1491                           	callstack 0
  1492   00000B                     ___fpclassifyf@u:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0xA
  1496   00000B                     	ds	1
  1497   00000C                     fputs@c:
  1498                           	callstack 0
  1499   00000C                     
  1500                           ; 1 bytes @ 0xB
  1501   00000C                     	ds	1
  1502   00000D                     ___fladd@signs:
  1503                           	callstack 0
  1504   00000D                     fputs@i:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0xC
  1508   00000D                     	ds	1
  1509   00000E                     ___fladd@aexp:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0xD
  1513   00000E                     	ds	1
  1514   00000F                     ?___flmul:
  1515                           	callstack 0
  1516   00000F                     ___fladd@bexp:
  1517                           	callstack 0
  1518   00000F                     pad@fp:
  1519                           	callstack 0
  1520   00000F                     ___flmul@b:
  1521                           	callstack 0
  1522                           
  1523                           ; 4 bytes @ 0xE
  1524   00000F                     	ds	1
  1525   000010                     ___fladd@grs:
  1526                           	callstack 0
  1527   000010                     pad@buf:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0xF
  1531   000010                     	ds	2
  1532   000012                     pad@p:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x11
  1536   000012                     	ds	1
  1537   000013                     ___flmul@a:
  1538                           	callstack 0
  1539                           
  1540                           ; 4 bytes @ 0x12
  1541   000013                     	ds	1
  1542   000014                     ??_pad:
  1543                           
  1544                           ; 1 bytes @ 0x13
  1545   000014                     	ds	1
  1546   000015                     pad@i:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x14
  1550   000015                     	ds	2
  1551   000017                     dtoa@fp:
  1552                           	callstack 0
  1553   000017                     ??___flmul:
  1554                           
  1555                           ; 1 bytes @ 0x16
  1556   000017                     	ds	1
  1557   000018                     dtoa@d:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x17
  1561   000018                     	ds	2
  1562   00001A                     _dtoa$1349:
  1563                           	callstack 0
  1564   00001A                     
  1565                           ; 1 bytes @ 0x19
  1566   00001A                     	ds	1
  1567   00001B                     ___flmul@sign:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x1A
  1571   00001B                     	ds	1
  1572   00001C                     dtoa@w:
  1573                           	callstack 0
  1574   00001C                     ___flmul@grs:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x1B
  1578   00001C                     	ds	2
  1579   00001E                     dtoa@p:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x1D
  1583   00001E                     	ds	2
  1584   000020                     ___flmul@aexp:
  1585                           	callstack 0
  1586   000020                     dtoa@s:
  1587                           	callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x1F
  1590   000020                     	ds	1
  1591   000021                     ___flmul@bexp:
  1592                           	callstack 0
  1593   000021                     dtoa@i:
  1594                           	callstack 0
  1595                           
  1596                           ; 2 bytes @ 0x20
  1597   000021                     	ds	1
  1598   000022                     ___flmul@prod:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x21
  1602   000022                     	ds	4
  1603   000026                     ___flmul@temp:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x25
  1607   000026                     	ds	2
  1608   000028                     ?___fldiv:
  1609                           	callstack 0
  1610   000028                     ?___flsub:
  1611                           	callstack 0
  1612   000028                     ___flge@ff1:
  1613                           	callstack 0
  1614   000028                     ___flsub@b:
  1615                           	callstack 0
  1616   000028                     ___fldiv@b:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0x27
  1620   000028                     	ds	4
  1621   00002C                     ___flge@ff2:
  1622                           	callstack 0
  1623   00002C                     ___flsub@a:
  1624                           	callstack 0
  1625   00002C                     ___fldiv@a:
  1626                           	callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x2B
  1629   00002C                     	ds	4
  1630   000030                     ??___fldiv:
  1631   000030                     ??___flge:
  1632                           
  1633                           ; 1 bytes @ 0x2F
  1634   000030                     	ds	4
  1635   000034                     ___fldiv@rem:
  1636                           	callstack 0
  1637                           
  1638                           ; 4 bytes @ 0x33
  1639   000034                     	ds	4
  1640   000038                     ___fldiv@sign:
  1641                           	callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x37
  1644   000038                     	ds	1
  1645   000039                     ___fldiv@new_exp:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x38
  1649   000039                     	ds	2
  1650   00003B                     ___fldiv@grs:
  1651                           	callstack 0
  1652                           
  1653                           ; 4 bytes @ 0x3A
  1654   00003B                     	ds	4
  1655   00003F                     ___fldiv@bexp:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x3E
  1659   00003F                     	ds	1
  1660   000040                     ___fldiv@aexp:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x3F
  1664   000040                     	ds	1
  1665   000041                     ?_ADC_read_temp:
  1666                           	callstack 0
  1667   000041                     ?_ADC_read_lumi:
  1668                           	callstack 0
  1669   000041                     ?_floorf:
  1670                           	callstack 0
  1671   000041                     ADC_read_lumi@value:
  1672                           	callstack 0
  1673   000041                     ADC_read_temp@value:
  1674                           	callstack 0
  1675   000041                     floorf@x:
  1676                           	callstack 0
  1677                           
  1678                           ; 4 bytes @ 0x40
  1679   000041                     	ds	4
  1680   000045                     _ADC_read_temp$1688:
  1681                           	callstack 0
  1682   000045                     ??_floorf:
  1683                           
  1684                           ; 1 bytes @ 0x44
  1685   000045                     	ds	6
  1686   00004B                     floorf@m:
  1687                           	callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x4A
  1690   00004B                     	ds	4
  1691   00004F                     floorf@e:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x4E
  1695   00004F                     	ds	2
  1696   000051                     floorf@u:
  1697                           	callstack 0
  1698                           
  1699                           ; 4 bytes @ 0x50
  1700   000051                     	ds	4
  1701   000055                     efgtoa@fp:
  1702                           	callstack 0
  1703                           
  1704                           ; 1 bytes @ 0x54
  1705   000055                     	ds	1
  1706   000056                     efgtoa@f:
  1707                           	callstack 0
  1708                           
  1709                           ; 4 bytes @ 0x55
  1710   000056                     	ds	4
  1711   00005A                     efgtoa@c:
  1712                           	callstack 0
  1713                           
  1714                           ; 1 bytes @ 0x59
  1715   00005A                     	ds	1
  1716   00005B                     ??_efgtoa:
  1717                           
  1718                           ; 1 bytes @ 0x5A
  1719   00005B                     	ds	2
  1720   00005D                     vfpfcnvrt@fp:
  1721                           	callstack 0
  1722                           
  1723                           ; 1 bytes @ 0x5C
  1724   00005D                     	ds	1
  1725   00005E                     vfpfcnvrt@fmt:
  1726                           	callstack 0
  1727                           
  1728                           ; 1 bytes @ 0x5D
  1729   00005E                     	ds	1
  1730   00005F                     vfpfcnvrt@ap:
  1731                           	callstack 0
  1732                           
  1733                           ; 1 bytes @ 0x5E
  1734   00005F                     	ds	1
  1735   000060                     ??_vfpfcnvrt:
  1736                           
  1737                           ; 1 bytes @ 0x5F
  1738   000060                     	ds	1
  1739   000061                     vfpfcnvrt@convarg:
  1740                           	callstack 0
  1741                           
  1742                           ; 4 bytes @ 0x60
  1743   000061                     	ds	4
  1744   000065                     vfpfcnvrt@c:
  1745                           	callstack 0
  1746                           
  1747                           ; 1 bytes @ 0x64
  1748   000065                     	ds	1
  1749   000066                     vfpfcnvrt@cp:
  1750                           	callstack 0
  1751                           
  1752                           ; 1 bytes @ 0x65
  1753   000066                     	ds	1
  1754   000067                     vfprintf@cfmt:
  1755                           	callstack 0
  1756   000067                     
  1757                           ; 1 bytes @ 0x66
  1758   000067                     	ds	1
  1759   000068                     sprintf@ap:
  1760                           	callstack 0
  1761   000068                     
  1762                           ; 1 bytes @ 0x67
  1763   000068                     	ds	1
  1764   000069                     sprintf@f:
  1765                           	callstack 0
  1766                           
  1767                           ; 11 bytes @ 0x68
  1768   000069                     	ds	11
  1769   000074                     ??_main:
  1770                           
  1771                           ; 1 bytes @ 0x73
  1772   000074                     	ds	2
  1773                           
  1774 ;;
  1775 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1776 ;;
  1777 ;; *************** function _main *****************
  1778 ;; Defined at:
  1779 ;;		line 86 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  up              2   73[BANK0 ] int 
  1784 ;;  i               1   77[BANK0 ] unsigned char 
  1785 ;;  buffer         16   53[BANK0 ] unsigned char [16]
  1786 ;;  pwm_duty_cyc    2   75[BANK0 ] int 
  1787 ;;  T_Integral      1   72[BANK0 ] unsigned char 
  1788 ;;  T_Decimal       1   71[BANK0 ] unsigned char 
  1789 ;;  RH_Integral     1   70[BANK0 ] unsigned char 
  1790 ;;  RH_Decimal      1   69[BANK0 ] unsigned char 
  1791 ;;  Checksum        1    0        unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1801 ;;      Params:         0       0       0       0       0       0       0
  1802 ;;      Locals:         0      25       0       0       0       0       0
  1803 ;;      Temps:          2       0       0       0       0       0       0
  1804 ;;      Totals:         2      25       0       0       0       0       0
  1805 ;;Total ram usage:       27 bytes
  1806 ;; Hardware stack levels required when called: 9
  1807 ;; This function calls:
  1808 ;;		_ADC_init
  1809 ;;		_ADC_read
  1810 ;;		_ADC_read_lumi
  1811 ;;		_ADC_read_temp
  1812 ;;		_DHT11_Init
  1813 ;;		_DHT11_ReadData
  1814 ;;		_PWM_control
  1815 ;;		_PWM_init
  1816 ;;		___flge
  1817 ;;		_lcd_clear
  1818 ;;		_lcd_init
  1819 ;;		_lcd_set_cursor
  1820 ;;		_lcd_string
  1821 ;;		_sprintf
  1822 ;; This function is called by:
  1823 ;;		Startup code after reset
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text0
  1828   001078                     __ptext0:
  1829                           	callstack 0
  1830   001078                     _main:
  1831                           	callstack 22
  1832   001078                     
  1833                           ;main.c: 88:     int pwm_duty_cycle;;main.c: 90:     char RH_Decimal,RH_Integral,T_Decim
      +                          al,T_Integral;;main.c: 91:     char Checksum;;main.c: 94:     char buffer[16];;main.c: 9
      +                          6:     OSCCON = 0b01110111;
  1834   001078  0E77               	movlw	119
  1835   00107A  6ED3               	movwf	211,c	;volatile
  1836   00107C  8EF2               	bsf	242,7,c	;volatile
  1837   00107E  8CF2               	bsf	242,6,c	;volatile
  1838   001080  8AF2               	bsf	242,5,c	;volatile
  1839   001082  94F2               	bcf	242,2,c	;volatile
  1840   001084  8C9D               	bsf	157,6,c	;volatile
  1841   001086  9C9E               	bcf	158,6,c	;volatile
  1842   001088                     
  1843                           ;main.c: 99:     TMR0H = 0xF0;
  1844   001088  0EF0               	movlw	240
  1845   00108A  6ED7               	movwf	215,c	;volatile
  1846                           
  1847                           ;main.c: 100:     TMR0L = 0xBE;
  1848   00108C  0EBE               	movlw	190
  1849   00108E  6ED6               	movwf	214,c	;volatile
  1850                           
  1851                           ;main.c: 101:     T0CON = 0b10000111;;
  1852   001090  0E87               	movlw	135
  1853   001092  6ED5               	movwf	213,c	;volatile
  1854   001094                     
  1855                           ;main.c: 103:     ADC_init();
  1856   001094  EC61  F01B         	call	_ADC_init	;wreg free
  1857   001098                     
  1858                           ;main.c: 104:     PWM_init();
  1859   001098  EC1E  F01B         	call	_PWM_init	;wreg free
  1860   00109C                     
  1861                           ;main.c: 105:     lcd_init();
  1862   00109C  ECDF  F01A         	call	_lcd_init	;wreg free
  1863   0010A0                     
  1864                           ;main.c: 107:     lcd_set_cursor(0, 2);
  1865   0010A0  0E02               	movlw	2
  1866   0010A2  6E03               	movwf	lcd_set_cursor@col^0,c
  1867   0010A4  0E00               	movlw	0
  1868   0010A6  EC2D  F01B         	call	_lcd_set_cursor
  1869   0010AA                     
  1870                           ;main.c: 108:     lcd_string("Iniciando");
  1871   0010AA  0E7F               	movlw	low STR_1
  1872   0010AC  6E03               	movwf	lcd_string@str^0,c
  1873   0010AE  5003               	movf	lcd_string@str^0,w,c
  1874   0010B0  A4D8               	btfss	status,2,c
  1875   0010B2  0E06               	movlw	high __smallconst
  1876   0010B4  6E04               	movwf	(lcd_string@str+1)^0,c
  1877   0010B6  ECE7  F018         	call	_lcd_string	;wreg free
  1878   0010BA                     
  1879                           ;main.c: 109:     for (unsigned char i = 11; i < 14; i++){
  1880   0010BA  0E0B               	movlw	11
  1881   0010BC  0100               	movlb	0	; () banked
  1882   0010BE  6FCD               	movwf	main@i& (0+255),b
  1883   0010C0                     l3878:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 110:         lcd_set_cursor(0, i);
  1887   0010C0  C0CD  F003         	movff	main@i,lcd_set_cursor@col
  1888   0010C4  0E00               	movlw	0
  1889   0010C6  EC2D  F01B         	call	_lcd_set_cursor
  1890   0010CA                     
  1891                           ;main.c: 111:         lcd_string(".");
  1892   0010CA  0E91               	movlw	low STR_2
  1893   0010CC  6E03               	movwf	lcd_string@str^0,c
  1894   0010CE  5003               	movf	lcd_string@str^0,w,c
  1895   0010D0  A4D8               	btfss	status,2,c
  1896   0010D2  0E06               	movlw	high __smallconst
  1897   0010D4  6E04               	movwf	(lcd_string@str+1)^0,c
  1898   0010D6  ECE7  F018         	call	_lcd_string	;wreg free
  1899   0010DA                     
  1900                           ;main.c: 112:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1901   0010DA  0E06               	movlw	6
  1902   0010DC  6E75               	movwf	(??_main+1)^0,c
  1903   0010DE  0E13               	movlw	19
  1904   0010E0  6E74               	movwf	??_main^0,c
  1905   0010E2  0EAE               	movlw	174
  1906   0010E4                     u4637:
  1907   0010E4  2EE8               	decfsz	wreg,f,c
  1908   0010E6  D7FE               	bra	u4637
  1909   0010E8  2E74               	decfsz	??_main^0,f,c
  1910   0010EA  D7FC               	bra	u4637
  1911   0010EC  2E75               	decfsz	(??_main+1)^0,f,c
  1912   0010EE  D7FA               	bra	u4637
  1913   0010F0                     
  1914                           ;main.c: 113:     }
  1915   0010F0  0100               	movlb	0	; () banked
  1916   0010F2  2BCD               	incf	main@i& (0+255),f,b
  1917   0010F4                     
  1918                           ; BSR set to: 0
  1919   0010F4  0E0D               	movlw	13
  1920   0010F6  65CD               	cpfsgt	main@i& (0+255),b
  1921   0010F8  EF80  F008         	goto	u4421
  1922   0010FC  EF82  F008         	goto	u4420
  1923   001100                     u4421:
  1924   001100  EF60  F008         	goto	l3878
  1925   001104                     u4420:
  1926   001104                     l3888:
  1927                           
  1928                           ;main.c: 116:         lcd_clear();
  1929   001104  EC3B  F01B         	call	_lcd_clear	;wreg free
  1930   001108                     
  1931                           ;main.c: 118:         if (flow == 0){
  1932   001108  0100               	movlb	0	; () banked
  1933   00110A  51E2               	movf	_flow& (0+255),w,b
  1934   00110C  11E3               	iorwf	(_flow+1)& (0+255),w,b
  1935   00110E  A4D8               	btfss	status,2,c
  1936   001110  EF8C  F008         	goto	u4431
  1937   001114  EF8E  F008         	goto	u4430
  1938   001118                     u4431:
  1939   001118  EF6D  F009         	goto	l3932
  1940   00111C                     u4430:
  1941   00111C                     
  1942                           ; BSR set to: 0
  1943                           ;main.c: 120:             lcd_set_cursor(0,2);
  1944   00111C  0E02               	movlw	2
  1945   00111E  6E03               	movwf	lcd_set_cursor@col^0,c
  1946   001120  0E00               	movlw	0
  1947   001122  EC2D  F01B         	call	_lcd_set_cursor
  1948   001126                     
  1949                           ;main.c: 121:             lcd_string("LM35 and LDR");
  1950   001126  0E65               	movlw	low STR_3
  1951   001128  6E03               	movwf	lcd_string@str^0,c
  1952   00112A  5003               	movf	lcd_string@str^0,w,c
  1953   00112C  A4D8               	btfss	status,2,c
  1954   00112E  0E06               	movlw	high __smallconst
  1955   001130  6E04               	movwf	(lcd_string@str+1)^0,c
  1956   001132  ECE7  F018         	call	_lcd_string	;wreg free
  1957   001136                     
  1958                           ;main.c: 122:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1959   001136  0E0B               	movlw	11
  1960   001138  6E75               	movwf	(??_main+1)^0,c
  1961   00113A  0E26               	movlw	38
  1962   00113C  6E74               	movwf	??_main^0,c
  1963   00113E  0E5E               	movlw	94
  1964   001140                     u4647:
  1965   001140  2EE8               	decfsz	wreg,f,c
  1966   001142  D7FE               	bra	u4647
  1967   001144  2E74               	decfsz	??_main^0,f,c
  1968   001146  D7FC               	bra	u4647
  1969   001148  2E75               	decfsz	(??_main+1)^0,f,c
  1970   00114A  D7FA               	bra	u4647
  1971   00114C                     
  1972                           ;main.c: 123:             lcd_clear();
  1973   00114C  EC3B  F01B         	call	_lcd_clear	;wreg free
  1974   001150                     
  1975                           ;main.c: 126:             if (flag_analog_value == 0){
  1976   001150  0100               	movlb	0	; () banked
  1977   001152  51E4               	movf	_flag_analog_value& (0+255),w,b
  1978   001154  11E5               	iorwf	(_flag_analog_value+1)& (0+255),w,b
  1979   001156  A4D8               	btfss	status,2,c
  1980   001158  EFB0  F008         	goto	u4441
  1981   00115C  EFB2  F008         	goto	u4440
  1982   001160                     u4441:
  1983   001160  EFE0  F008         	goto	l3912
  1984   001164                     u4440:
  1985   001164                     
  1986                           ; BSR set to: 0
  1987                           ;main.c: 127:                 lm35_raw_value = ADC_read(2);
  1988   001164  0E02               	movlw	2
  1989   001166  EC97  F019         	call	_ADC_read
  1990   00116A  C001  F0DE         	movff	?_ADC_read,_lm35_raw_value
  1991   00116E  C002  F0DF         	movff	?_ADC_read+1,_lm35_raw_value+1
  1992   001172                     
  1993                           ;main.c: 128:                 lm35_value = ADC_read_temp(lm35_raw_value);
  1994   001172  C0DE  F041         	movff	_lm35_raw_value,ADC_read_temp@value
  1995   001176  C0DF  F042         	movff	_lm35_raw_value+1,ADC_read_temp@value+1
  1996   00117A  ECEA  F017         	call	_ADC_read_temp	;wreg free
  1997   00117E  C041  F0D2         	movff	?_ADC_read_temp,_lm35_value
  1998   001182  C042  F0D3         	movff	?_ADC_read_temp+1,_lm35_value+1
  1999   001186  C043  F0D4         	movff	?_ADC_read_temp+2,_lm35_value+2
  2000   00118A  C044  F0D5         	movff	?_ADC_read_temp+3,_lm35_value+3
  2001   00118E                     
  2002                           ;main.c: 130:                 lcd_set_cursor(0, 0);
  2003   00118E  0E00               	movlw	0
  2004   001190  6E03               	movwf	lcd_set_cursor@col^0,c
  2005   001192  0E00               	movlw	0
  2006   001194  EC2D  F01B         	call	_lcd_set_cursor
  2007   001198                     
  2008                           ;main.c: 131:                 sprintf(buffer, "LM35: %.2f\xB0"" C ", lm35_value);
  2009   001198  0EB5               	movlw	low main@buffer
  2010   00119A  0100               	movlb	0	; () banked
  2011   00119C  6FAF               	movwf	sprintf@s& (0+255),b
  2012   00119E  0E56               	movlw	low STR_4
  2013   0011A0  6FB0               	movwf	sprintf@fmt& (0+255),b
  2014   0011A2  C0D2  F0B1         	movff	_lm35_value,?_sprintf+2
  2015   0011A6  C0D3  F0B2         	movff	_lm35_value+1,?_sprintf+3
  2016   0011AA  C0D4  F0B3         	movff	_lm35_value+2,?_sprintf+4
  2017   0011AE  C0D5  F0B4         	movff	_lm35_value+3,?_sprintf+5
  2018   0011B2  EC8D  F01A         	call	_sprintf	;wreg free
  2019   0011B6                     
  2020                           ;main.c: 132:                 lcd_string(buffer);
  2021   0011B6  0EB5               	movlw	low main@buffer
  2022   0011B8  6E03               	movwf	lcd_string@str^0,c
  2023   0011BA  6A04               	clrf	(lcd_string@str+1)^0,c
  2024   0011BC  ECE7  F018         	call	_lcd_string	;wreg free
  2025   0011C0                     l3912:
  2026                           
  2027                           ;main.c: 136:             if (flag_analog_value == 1){
  2028   0011C0  0100               	movlb	0	; () banked
  2029   0011C2  05E4               	decf	_flag_analog_value& (0+255),w,b
  2030   0011C4  11E5               	iorwf	(_flag_analog_value+1)& (0+255),w,b
  2031   0011C6  A4D8               	btfss	status,2,c
  2032   0011C8  EFE8  F008         	goto	u4451
  2033   0011CC  EFEA  F008         	goto	u4450
  2034   0011D0                     u4451:
  2035   0011D0  EFC9  F009         	goto	l3964
  2036   0011D4                     u4450:
  2037   0011D4                     
  2038                           ; BSR set to: 0
  2039                           ;main.c: 137:                 ldr_raw_value = ADC_read(4);
  2040   0011D4  0E04               	movlw	4
  2041   0011D6  EC97  F019         	call	_ADC_read
  2042   0011DA  C001  F0E0         	movff	?_ADC_read,_ldr_raw_value
  2043   0011DE  C002  F0E1         	movff	?_ADC_read+1,_ldr_raw_value+1
  2044   0011E2                     
  2045                           ;main.c: 138:                 ldr_value = ADC_read_lumi(ldr_raw_value);
  2046   0011E2  C0E0  F041         	movff	_ldr_raw_value,ADC_read_lumi@value
  2047   0011E6  C0E1  F042         	movff	_ldr_raw_value+1,ADC_read_lumi@value+1
  2048   0011EA  EC7E  F018         	call	_ADC_read_lumi	;wreg free
  2049   0011EE  C041  F0D6         	movff	?_ADC_read_lumi,_ldr_value
  2050   0011F2  C042  F0D7         	movff	?_ADC_read_lumi+1,_ldr_value+1
  2051   0011F6  C043  F0D8         	movff	?_ADC_read_lumi+2,_ldr_value+2
  2052   0011FA  C044  F0D9         	movff	?_ADC_read_lumi+3,_ldr_value+3
  2053   0011FE                     
  2054                           ;main.c: 140:                 lcd_set_cursor(1, 0);
  2055   0011FE  0E00               	movlw	0
  2056   001200  6E03               	movwf	lcd_set_cursor@col^0,c
  2057   001202  0E01               	movlw	1
  2058   001204  EC2D  F01B         	call	_lcd_set_cursor
  2059   001208                     
  2060                           ;main.c: 141:                 if (ldr_value <= 1.5) lcd_string("-------Ok-------");
  2061   001208  0E00               	movlw	0
  2062   00120A  6E28               	movwf	___flge@ff1^0,c
  2063   00120C  0E00               	movlw	0
  2064   00120E  6E29               	movwf	(___flge@ff1+1)^0,c
  2065   001210  0EC0               	movlw	192
  2066   001212  6E2A               	movwf	(___flge@ff1+2)^0,c
  2067   001214  0E3F               	movlw	63
  2068   001216  6E2B               	movwf	(___flge@ff1+3)^0,c
  2069   001218  C0D6  F02C         	movff	_ldr_value,___flge@ff2
  2070   00121C  C0D7  F02D         	movff	_ldr_value+1,___flge@ff2+1
  2071   001220  C0D8  F02E         	movff	_ldr_value+2,___flge@ff2+2
  2072   001224  C0D9  F02F         	movff	_ldr_value+3,___flge@ff2+3
  2073   001228  EC35  F015         	call	___flge	;wreg free
  2074   00122C  A0D8               	btfss	status,0,c
  2075   00122E  EF1B  F009         	goto	u4461
  2076   001232  EF1D  F009         	goto	u4460
  2077   001236                     u4461:
  2078   001236  EF27  F009         	goto	l3924
  2079   00123A                     u4460:
  2080   00123A  0E23               	movlw	low STR_5
  2081   00123C  6E03               	movwf	lcd_string@str^0,c
  2082   00123E  5003               	movf	lcd_string@str^0,w,c
  2083   001240  A4D8               	btfss	status,2,c
  2084   001242  0E06               	movlw	high __smallconst
  2085   001244  6E04               	movwf	(lcd_string@str+1)^0,c
  2086   001246  ECE7  F018         	call	_lcd_string	;wreg free
  2087   00124A  EFC9  F009         	goto	l3964
  2088   00124E                     l3924:
  2089   00124E  0E00               	movlw	0
  2090   001250  6E28               	movwf	___flge@ff1^0,c
  2091   001252  0E00               	movlw	0
  2092   001254  6E29               	movwf	(___flge@ff1+1)^0,c
  2093   001256  0EC0               	movlw	192
  2094   001258  6E2A               	movwf	(___flge@ff1+2)^0,c
  2095   00125A  0E3F               	movlw	63
  2096   00125C  6E2B               	movwf	(___flge@ff1+3)^0,c
  2097   00125E  C0D6  F02C         	movff	_ldr_value,___flge@ff2
  2098   001262  C0D7  F02D         	movff	_ldr_value+1,___flge@ff2+1
  2099   001266  C0D8  F02E         	movff	_ldr_value+2,___flge@ff2+2
  2100   00126A  C0D9  F02F         	movff	_ldr_value+3,___flge@ff2+3
  2101   00126E  EC35  F015         	call	___flge	;wreg free
  2102   001272  B0D8               	btfsc	status,0,c
  2103   001274  EF3E  F009         	goto	u4471
  2104   001278  EF40  F009         	goto	u4470
  2105   00127C                     u4471:
  2106   00127C  EF63  F009         	goto	l3930
  2107   001280                     u4470:
  2108   001280  C0D6  F028         	movff	_ldr_value,___flge@ff1
  2109   001284  C0D7  F029         	movff	_ldr_value+1,___flge@ff1+1
  2110   001288  C0D8  F02A         	movff	_ldr_value+2,___flge@ff1+2
  2111   00128C  C0D9  F02B         	movff	_ldr_value+3,___flge@ff1+3
  2112   001290  0E00               	movlw	0
  2113   001292  6E2C               	movwf	___flge@ff2^0,c
  2114   001294  0E00               	movlw	0
  2115   001296  6E2D               	movwf	(___flge@ff2+1)^0,c
  2116   001298  0E40               	movlw	64
  2117   00129A  6E2E               	movwf	(___flge@ff2+2)^0,c
  2118   00129C  0E40               	movlw	64
  2119   00129E  6E2F               	movwf	(___flge@ff2+3)^0,c
  2120   0012A0  EC35  F015         	call	___flge	;wreg free
  2121   0012A4  B0D8               	btfsc	status,0,c
  2122   0012A6  EF57  F009         	goto	u4481
  2123   0012AA  EF59  F009         	goto	u4480
  2124   0012AE                     u4481:
  2125   0012AE  EF63  F009         	goto	l3930
  2126   0012B2                     u4480:
  2127   0012B2  0E12               	movlw	low STR_6
  2128   0012B4  6E03               	movwf	lcd_string@str^0,c
  2129   0012B6  5003               	movf	lcd_string@str^0,w,c
  2130   0012B8  A4D8               	btfss	status,2,c
  2131   0012BA  0E06               	movlw	high __smallconst
  2132   0012BC  6E04               	movwf	(lcd_string@str+1)^0,c
  2133   0012BE  ECE7  F018         	call	_lcd_string	;wreg free
  2134   0012C2  EFC9  F009         	goto	l3964
  2135   0012C6                     l3930:
  2136   0012C6  0E01               	movlw	low STR_7
  2137   0012C8  6E03               	movwf	lcd_string@str^0,c
  2138   0012CA  5003               	movf	lcd_string@str^0,w,c
  2139   0012CC  A4D8               	btfss	status,2,c
  2140   0012CE  0E06               	movlw	high __smallconst
  2141   0012D0  6E04               	movwf	(lcd_string@str+1)^0,c
  2142   0012D2  ECE7  F018         	call	_lcd_string	;wreg free
  2143   0012D6  EFC9  F009         	goto	l3964
  2144   0012DA                     l3932:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;main.c: 148:             DHT11_Init();
  2148   0012DA  EC0C  F01B         	call	_DHT11_Init	;wreg free
  2149   0012DE                     
  2150                           ;main.c: 150:             RH_Integral = DHT11_ReadData();
  2151   0012DE  EC16  F019         	call	_DHT11_ReadData	;wreg free
  2152   0012E2  0100               	movlb	0	; () banked
  2153   0012E4  6FC6               	movwf	main@RH_Integral& (0+255),b
  2154   0012E6                     
  2155                           ; BSR set to: 0
  2156                           ;main.c: 151:             RH_Decimal = DHT11_ReadData();
  2157   0012E6  EC16  F019         	call	_DHT11_ReadData	;wreg free
  2158   0012EA  0100               	movlb	0	; () banked
  2159   0012EC  6FC5               	movwf	main@RH_Decimal& (0+255),b
  2160   0012EE                     
  2161                           ; BSR set to: 0
  2162                           ;main.c: 152:             T_Integral = DHT11_ReadData();
  2163   0012EE  EC16  F019         	call	_DHT11_ReadData	;wreg free
  2164   0012F2  0100               	movlb	0	; () banked
  2165   0012F4  6FC8               	movwf	main@T_Integral& (0+255),b
  2166   0012F6                     
  2167                           ; BSR set to: 0
  2168                           ;main.c: 153:             T_Decimal = DHT11_ReadData();
  2169   0012F6  EC16  F019         	call	_DHT11_ReadData	;wreg free
  2170   0012FA  0100               	movlb	0	; () banked
  2171   0012FC  6FC7               	movwf	main@T_Decimal& (0+255),b
  2172   0012FE                     
  2173                           ; BSR set to: 0
  2174   0012FE  EC16  F019         	call	_DHT11_ReadData	;wreg free
  2175   001302                     
  2176                           ;main.c: 156:             lcd_set_cursor(0,2);
  2177   001302  0E02               	movlw	2
  2178   001304  6E03               	movwf	lcd_set_cursor@col^0,c
  2179   001306  0E00               	movlw	0
  2180   001308  EC2D  F01B         	call	_lcd_set_cursor
  2181   00130C                     
  2182                           ;main.c: 157:             lcd_string("DHT11 Values");
  2183   00130C  0E72               	movlw	low STR_8
  2184   00130E  6E03               	movwf	lcd_string@str^0,c
  2185   001310  5003               	movf	lcd_string@str^0,w,c
  2186   001312  A4D8               	btfss	status,2,c
  2187   001314  0E06               	movlw	high __smallconst
  2188   001316  6E04               	movwf	(lcd_string@str+1)^0,c
  2189   001318  ECE7  F018         	call	_lcd_string	;wreg free
  2190   00131C                     
  2191                           ;main.c: 158:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  2192   00131C  0E0B               	movlw	11
  2193   00131E  6E75               	movwf	(??_main+1)^0,c
  2194   001320  0E26               	movlw	38
  2195   001322  6E74               	movwf	??_main^0,c
  2196   001324  0E5E               	movlw	94
  2197   001326                     u4657:
  2198   001326  2EE8               	decfsz	wreg,f,c
  2199   001328  D7FE               	bra	u4657
  2200   00132A  2E74               	decfsz	??_main^0,f,c
  2201   00132C  D7FC               	bra	u4657
  2202   00132E  2E75               	decfsz	(??_main+1)^0,f,c
  2203   001330  D7FA               	bra	u4657
  2204   001332                     
  2205                           ;main.c: 159:             lcd_clear();
  2206   001332  EC3B  F01B         	call	_lcd_clear	;wreg free
  2207   001336                     
  2208                           ;main.c: 162:             lcd_set_cursor(0,0);
  2209   001336  0E00               	movlw	0
  2210   001338  6E03               	movwf	lcd_set_cursor@col^0,c
  2211   00133A  0E00               	movlw	0
  2212   00133C  EC2D  F01B         	call	_lcd_set_cursor
  2213   001340                     
  2214                           ;main.c: 163:             sprintf(buffer,"DHT11 Hum: %d.%d",RH_Integral, RH_Decimal);
  2215   001340  0EB5               	movlw	low main@buffer
  2216   001342  0100               	movlb	0	; () banked
  2217   001344  6FAF               	movwf	sprintf@s& (0+255),b
  2218   001346  0E45               	movlw	low STR_9
  2219   001348  6FB0               	movwf	sprintf@fmt& (0+255),b
  2220   00134A  C0C6  F0B1         	movff	main@RH_Integral,?_sprintf+2
  2221   00134E  6BB2               	clrf	(?_sprintf+3)& (0+255),b
  2222   001350  C0C5  F0B3         	movff	main@RH_Decimal,?_sprintf+4
  2223   001354  6BB4               	clrf	(?_sprintf+5)& (0+255),b
  2224   001356  EC8D  F01A         	call	_sprintf	;wreg free
  2225   00135A                     
  2226                           ;main.c: 164:             lcd_string(buffer);
  2227   00135A  0EB5               	movlw	low main@buffer
  2228   00135C  6E03               	movwf	lcd_string@str^0,c
  2229   00135E  6A04               	clrf	(lcd_string@str+1)^0,c
  2230   001360  ECE7  F018         	call	_lcd_string	;wreg free
  2231   001364                     
  2232                           ;main.c: 167:             lcd_set_cursor(1,0);
  2233   001364  0E00               	movlw	0
  2234   001366  6E03               	movwf	lcd_set_cursor@col^0,c
  2235   001368  0E01               	movlw	1
  2236   00136A  EC2D  F01B         	call	_lcd_set_cursor
  2237   00136E                     
  2238                           ;main.c: 168:             sprintf(buffer,"DHT11 Tem: %d.%d",T_Integral, T_Decimal);
  2239   00136E  0EB5               	movlw	low main@buffer
  2240   001370  0100               	movlb	0	; () banked
  2241   001372  6FAF               	movwf	sprintf@s& (0+255),b
  2242   001374  0E34               	movlw	low STR_10
  2243   001376  6FB0               	movwf	sprintf@fmt& (0+255),b
  2244   001378  C0C8  F0B1         	movff	main@T_Integral,?_sprintf+2
  2245   00137C  6BB2               	clrf	(?_sprintf+3)& (0+255),b
  2246   00137E  C0C7  F0B3         	movff	main@T_Decimal,?_sprintf+4
  2247   001382  6BB4               	clrf	(?_sprintf+5)& (0+255),b
  2248   001384  EC8D  F01A         	call	_sprintf	;wreg free
  2249   001388                     
  2250                           ;main.c: 169:             lcd_string(buffer);
  2251   001388  0EB5               	movlw	low main@buffer
  2252   00138A  6E03               	movwf	lcd_string@str^0,c
  2253   00138C  6A04               	clrf	(lcd_string@str+1)^0,c
  2254   00138E  ECE7  F018         	call	_lcd_string	;wreg free
  2255   001392                     l3964:
  2256                           
  2257                           ;main.c: 173:         if ((lm35_value >= 85.0 && ldr_value > 3.0)) {
  2258   001392  C0D2  F028         	movff	_lm35_value,___flge@ff1
  2259   001396  C0D3  F029         	movff	_lm35_value+1,___flge@ff1+1
  2260   00139A  C0D4  F02A         	movff	_lm35_value+2,___flge@ff1+2
  2261   00139E  C0D5  F02B         	movff	_lm35_value+3,___flge@ff1+3
  2262   0013A2  0E00               	movlw	0
  2263   0013A4  6E2C               	movwf	___flge@ff2^0,c
  2264   0013A6  0E00               	movlw	0
  2265   0013A8  6E2D               	movwf	(___flge@ff2+1)^0,c
  2266   0013AA  0EAA               	movlw	170
  2267   0013AC  6E2E               	movwf	(___flge@ff2+2)^0,c
  2268   0013AE  0E42               	movlw	66
  2269   0013B0  6E2F               	movwf	(___flge@ff2+3)^0,c
  2270   0013B2  EC35  F015         	call	___flge	;wreg free
  2271   0013B6  A0D8               	btfss	status,0,c
  2272   0013B8  EFE0  F009         	goto	u4491
  2273   0013BC  EFE2  F009         	goto	u4490
  2274   0013C0                     u4491:
  2275   0013C0  EFA4  F00A         	goto	l4000
  2276   0013C4                     u4490:
  2277   0013C4  0E00               	movlw	0
  2278   0013C6  6E28               	movwf	___flge@ff1^0,c
  2279   0013C8  0E00               	movlw	0
  2280   0013CA  6E29               	movwf	(___flge@ff1+1)^0,c
  2281   0013CC  0E40               	movlw	64
  2282   0013CE  6E2A               	movwf	(___flge@ff1+2)^0,c
  2283   0013D0  0E40               	movlw	64
  2284   0013D2  6E2B               	movwf	(___flge@ff1+3)^0,c
  2285   0013D4  C0D6  F02C         	movff	_ldr_value,___flge@ff2
  2286   0013D8  C0D7  F02D         	movff	_ldr_value+1,___flge@ff2+1
  2287   0013DC  C0D8  F02E         	movff	_ldr_value+2,___flge@ff2+2
  2288   0013E0  C0D9  F02F         	movff	_ldr_value+3,___flge@ff2+3
  2289   0013E4  EC35  F015         	call	___flge	;wreg free
  2290   0013E8  B0D8               	btfsc	status,0,c
  2291   0013EA  EFF9  F009         	goto	u4501
  2292   0013EE  EFFB  F009         	goto	u4500
  2293   0013F2                     u4501:
  2294   0013F2  EFA4  F00A         	goto	l4000
  2295   0013F6                     u4500:
  2296   0013F6                     
  2297                           ;main.c: 174:             int up = 1;
  2298   0013F6  0E00               	movlw	0
  2299   0013F8  0100               	movlb	0	; () banked
  2300   0013FA  6FCA               	movwf	(main@up+1)& (0+255),b
  2301   0013FC  0E01               	movlw	1
  2302   0013FE  6FC9               	movwf	main@up& (0+255),b
  2303                           
  2304                           ;main.c: 175:             pwm_duty_cycle = 0;
  2305   001400  0E00               	movlw	0
  2306   001402  6FCC               	movwf	(main@pwm_duty_cycle+1)& (0+255),b
  2307   001404  0E00               	movlw	0
  2308   001406  6FCB               	movwf	main@pwm_duty_cycle& (0+255),b
  2309   001408                     l3970:
  2310                           
  2311                           ;main.c: 179:                 lm35_raw_value = ADC_read(2);
  2312   001408  0E02               	movlw	2
  2313   00140A  EC97  F019         	call	_ADC_read
  2314   00140E  C001  F0DE         	movff	?_ADC_read,_lm35_raw_value
  2315   001412  C002  F0DF         	movff	?_ADC_read+1,_lm35_raw_value+1
  2316   001416                     
  2317                           ;main.c: 180:                 lm35_value = ADC_read_temp(lm35_raw_value);
  2318   001416  C0DE  F041         	movff	_lm35_raw_value,ADC_read_temp@value
  2319   00141A  C0DF  F042         	movff	_lm35_raw_value+1,ADC_read_temp@value+1
  2320   00141E  ECEA  F017         	call	_ADC_read_temp	;wreg free
  2321   001422  C041  F0D2         	movff	?_ADC_read_temp,_lm35_value
  2322   001426  C042  F0D3         	movff	?_ADC_read_temp+1,_lm35_value+1
  2323   00142A  C043  F0D4         	movff	?_ADC_read_temp+2,_lm35_value+2
  2324   00142E  C044  F0D5         	movff	?_ADC_read_temp+3,_lm35_value+3
  2325   001432                     
  2326                           ;main.c: 182:                 ldr_raw_value = ADC_read(4);
  2327   001432  0E04               	movlw	4
  2328   001434  EC97  F019         	call	_ADC_read
  2329   001438  C001  F0E0         	movff	?_ADC_read,_ldr_raw_value
  2330   00143C  C002  F0E1         	movff	?_ADC_read+1,_ldr_raw_value+1
  2331   001440                     
  2332                           ;main.c: 183:                 ldr_value = ADC_read_lumi(ldr_raw_value);
  2333   001440  C0E0  F041         	movff	_ldr_raw_value,ADC_read_lumi@value
  2334   001444  C0E1  F042         	movff	_ldr_raw_value+1,ADC_read_lumi@value+1
  2335   001448  EC7E  F018         	call	_ADC_read_lumi	;wreg free
  2336   00144C  C041  F0D6         	movff	?_ADC_read_lumi,_ldr_value
  2337   001450  C042  F0D7         	movff	?_ADC_read_lumi+1,_ldr_value+1
  2338   001454  C043  F0D8         	movff	?_ADC_read_lumi+2,_ldr_value+2
  2339   001458  C044  F0D9         	movff	?_ADC_read_lumi+3,_ldr_value+3
  2340   00145C                     
  2341                           ;main.c: 186:                 if (lm35_value < 60.0 || ldr_value <= 2.5) break;
  2342   00145C  C0D2  F028         	movff	_lm35_value,___flge@ff1
  2343   001460  C0D3  F029         	movff	_lm35_value+1,___flge@ff1+1
  2344   001464  C0D4  F02A         	movff	_lm35_value+2,___flge@ff1+2
  2345   001468  C0D5  F02B         	movff	_lm35_value+3,___flge@ff1+3
  2346   00146C  0E00               	movlw	0
  2347   00146E  6E2C               	movwf	___flge@ff2^0,c
  2348   001470  0E00               	movlw	0
  2349   001472  6E2D               	movwf	(___flge@ff2+1)^0,c
  2350   001474  0E70               	movlw	112
  2351   001476  6E2E               	movwf	(___flge@ff2+2)^0,c
  2352   001478  0E42               	movlw	66
  2353   00147A  6E2F               	movwf	(___flge@ff2+3)^0,c
  2354   00147C  EC35  F015         	call	___flge	;wreg free
  2355   001480  A0D8               	btfss	status,0,c
  2356   001482  EF45  F00A         	goto	u4511
  2357   001486  EF47  F00A         	goto	u4510
  2358   00148A                     u4511:
  2359   00148A  EFAA  F00A         	goto	l4002
  2360   00148E                     u4510:
  2361   00148E  0E00               	movlw	0
  2362   001490  6E28               	movwf	___flge@ff1^0,c
  2363   001492  0E00               	movlw	0
  2364   001494  6E29               	movwf	(___flge@ff1+1)^0,c
  2365   001496  0E20               	movlw	32
  2366   001498  6E2A               	movwf	(___flge@ff1+2)^0,c
  2367   00149A  0E40               	movlw	64
  2368   00149C  6E2B               	movwf	(___flge@ff1+3)^0,c
  2369   00149E  C0D6  F02C         	movff	_ldr_value,___flge@ff2
  2370   0014A2  C0D7  F02D         	movff	_ldr_value+1,___flge@ff2+1
  2371   0014A6  C0D8  F02E         	movff	_ldr_value+2,___flge@ff2+2
  2372   0014AA  C0D9  F02F         	movff	_ldr_value+3,___flge@ff2+3
  2373   0014AE  EC35  F015         	call	___flge	;wreg free
  2374   0014B2  A0D8               	btfss	status,0,c
  2375   0014B4  EF5E  F00A         	goto	u4521
  2376   0014B8  EF60  F00A         	goto	u4520
  2377   0014BC                     u4521:
  2378   0014BC  EF62  F00A         	goto	l3982
  2379   0014C0                     u4520:
  2380   0014C0  EFAA  F00A         	goto	l4002
  2381   0014C4                     l3982:
  2382                           
  2383                           ;main.c: 189:                 PWM_control(pwm_duty_cycle);
  2384   0014C4  C0CB  F001         	movff	main@pwm_duty_cycle,PWM_control@value
  2385   0014C8  C0CC  F002         	movff	main@pwm_duty_cycle+1,PWM_control@value+1
  2386   0014CC  EC6D  F019         	call	_PWM_control	;wreg free
  2387   0014D0                     
  2388                           ;main.c: 191:                 if (up) {
  2389   0014D0  0100               	movlb	0	; () banked
  2390   0014D2  51C9               	movf	main@up& (0+255),w,b
  2391   0014D4  11CA               	iorwf	(main@up+1)& (0+255),w,b
  2392   0014D6  B4D8               	btfsc	status,2,c
  2393   0014D8  EF70  F00A         	goto	u4531
  2394   0014DC  EF72  F00A         	goto	u4530
  2395   0014E0                     u4531:
  2396   0014E0  EF87  F00A         	goto	l3992
  2397   0014E4                     u4530:
  2398   0014E4                     
  2399                           ; BSR set to: 0
  2400                           ;main.c: 192:                     pwm_duty_cycle++;
  2401   0014E4  4BCB               	infsnz	main@pwm_duty_cycle& (0+255),f,b
  2402   0014E6  2BCC               	incf	(main@pwm_duty_cycle+1)& (0+255),f,b
  2403   0014E8                     
  2404                           ; BSR set to: 0
  2405                           ;main.c: 193:                     if (pwm_duty_cycle >= 1023)
  2406   0014E8  BFCC               	btfsc	(main@pwm_duty_cycle+1)& (0+255),7,b
  2407   0014EA  EF7F  F00A         	goto	u4541
  2408   0014EE  29CB               	incf	main@pwm_duty_cycle& (0+255),w,b
  2409   0014F0  0E03               	movlw	3
  2410   0014F2  59CC               	subwfb	(main@pwm_duty_cycle+1)& (0+255),w,b
  2411   0014F4  A0D8               	btfss	status,0,c
  2412   0014F6  EF7F  F00A         	goto	u4541
  2413   0014FA  EF81  F00A         	goto	u4540
  2414   0014FE                     u4541:
  2415   0014FE  EF9B  F00A         	goto	l3998
  2416   001502                     u4540:
  2417   001502                     
  2418                           ; BSR set to: 0
  2419                           ;main.c: 194:                         up = 0;
  2420   001502  0E00               	movlw	0
  2421   001504  6FCA               	movwf	(main@up+1)& (0+255),b
  2422   001506  0E00               	movlw	0
  2423   001508  6FC9               	movwf	main@up& (0+255),b
  2424   00150A  EF9B  F00A         	goto	l3998
  2425   00150E                     l3992:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 196:                     pwm_duty_cycle--;
  2429   00150E  07CB               	decf	main@pwm_duty_cycle& (0+255),f,b
  2430   001510  A0D8               	btfss	status,0,c
  2431   001512  07CC               	decf	(main@pwm_duty_cycle+1)& (0+255),f,b
  2432   001514                     
  2433                           ; BSR set to: 0
  2434                           ;main.c: 197:                     if (pwm_duty_cycle <= 0)
  2435   001514  BFCC               	btfsc	(main@pwm_duty_cycle+1)& (0+255),7,b
  2436   001516  EF97  F00A         	goto	u4550
  2437   00151A  51CC               	movf	(main@pwm_duty_cycle+1)& (0+255),w,b
  2438   00151C  E106               	bnz	u4551
  2439   00151E  05CB               	decf	main@pwm_duty_cycle& (0+255),w,b
  2440   001520  B0D8               	btfsc	status,0,c
  2441   001522  EF95  F00A         	goto	u4551
  2442   001526  EF97  F00A         	goto	u4550
  2443   00152A                     u4551:
  2444   00152A  EF9B  F00A         	goto	l3998
  2445   00152E                     u4550:
  2446   00152E                     
  2447                           ; BSR set to: 0
  2448                           ;main.c: 198:                         up = 1;
  2449   00152E  0E00               	movlw	0
  2450   001530  6FCA               	movwf	(main@up+1)& (0+255),b
  2451   001532  0E01               	movlw	1
  2452   001534  6FC9               	movwf	main@up& (0+255),b
  2453   001536                     l3998:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;main.c: 201:                 _delay((unsigned long)((5)*(8000000/4000.0)));
  2457   001536  0E0D               	movlw	13
  2458   001538  6E74               	movwf	??_main^0,c
  2459   00153A  0EFC               	movlw	252
  2460   00153C                     u4667:
  2461   00153C  2EE8               	decfsz	wreg,f,c
  2462   00153E  D7FE               	bra	u4667
  2463   001540  2E74               	decfsz	??_main^0,f,c
  2464   001542  D7FC               	bra	u4667
  2465   001544  EF04  F00A         	goto	l3970
  2466   001548                     l4000:
  2467   001548  0E00               	movlw	0
  2468   00154A  6E02               	movwf	(PWM_control@value+1)^0,c
  2469   00154C  0E00               	movlw	0
  2470   00154E  6E01               	movwf	PWM_control@value^0,c
  2471   001550  EC6D  F019         	call	_PWM_control	;wreg free
  2472   001554                     l4002:
  2473                           
  2474                           ;main.c: 205:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  2475   001554  0E15               	movlw	21
  2476   001556  6E75               	movwf	(??_main+1)^0,c
  2477   001558  0E4B               	movlw	75
  2478   00155A  6E74               	movwf	??_main^0,c
  2479   00155C  0EBE               	movlw	190
  2480   00155E                     u4677:
  2481   00155E  2EE8               	decfsz	wreg,f,c
  2482   001560  D7FE               	bra	u4677
  2483   001562  2E74               	decfsz	??_main^0,f,c
  2484   001564  D7FC               	bra	u4677
  2485   001566  2E75               	decfsz	(??_main+1)^0,f,c
  2486   001568  D7FA               	bra	u4677
  2487   00156A  D000               	nop2	
  2488   00156C  EF82  F008         	goto	l3888
  2489   001570  EF07  F000         	goto	start
  2490   001574                     __end_of_main:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _sprintf *****************
  2494 ;; Defined at:
  2495 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  s               1   47[BANK0 ] PTR unsigned char 
  2498 ;;		 -> main@buffer(16), 
  2499 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  2500 ;;		 -> STR_10(17), STR_9(17), STR_4(15), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  f              11  104[COMRAM] struct _IO_FILE
  2503 ;;  ret             2    0        int 
  2504 ;;  ap              1  103[COMRAM] PTR void [1]
  2505 ;;		 -> ?_sprintf(2), 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2   47[BANK0 ] int 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2515 ;;      Params:         0       6       0       0       0       0       0
  2516 ;;      Locals:        12       0       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0
  2518 ;;      Totals:        12       6       0       0       0       0       0
  2519 ;;Total ram usage:       18 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 8
  2522 ;; This function calls:
  2523 ;;		_vfprintf
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text1
  2530   00351A                     __ptext1:
  2531                           	callstack 0
  2532   00351A                     _sprintf:
  2533                           	callstack 22
  2534   00351A  0EB1               	movlw	low (?_sprintf+2)
  2535   00351C  6E68               	movwf	sprintf@ap^0,c
  2536   00351E  C0AF  F069         	movff	sprintf@s,sprintf@f
  2537   003522  0E00               	movlw	0
  2538   003524  6E6C               	movwf	(sprintf@f+3)^0,c
  2539   003526  0E00               	movlw	0
  2540   003528  6E6B               	movwf	(sprintf@f+2)^0,c
  2541   00352A  0E00               	movlw	0
  2542   00352C  6E73               	movwf	(sprintf@f+10)^0,c
  2543   00352E  0E00               	movlw	0
  2544   003530  6E72               	movwf	(sprintf@f+9)^0,c
  2545   003532  0E69               	movlw	low sprintf@f
  2546   003534  0100               	movlb	0	; () banked
  2547   003536  6FAC               	movwf	vfprintf@fp& (0+255),b
  2548   003538  C0B0  F0AD         	movff	sprintf@fmt,vfprintf@fmt
  2549   00353C  0E68               	movlw	low sprintf@ap
  2550   00353E  6FAE               	movwf	vfprintf@ap& (0+255),b
  2551   003540  EC30  F01A         	call	_vfprintf	;wreg free
  2552   003544  0100               	movlb	0	; () banked
  2553   003546  51AF               	movf	sprintf@s& (0+255),w,b
  2554   003548  246B               	addwf	(sprintf@f+2)^0,w,c
  2555   00354A  6ED9               	movwf	fsr2l,c
  2556   00354C  6ADA               	clrf	fsr2h,c
  2557   00354E  6ADF               	clrf	indf2,c
  2558   003550                     
  2559                           ; BSR set to: 0
  2560   003550  0012               	return		;funcret
  2561   003552                     __end_of_sprintf:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _vfprintf *****************
  2565 ;; Defined at:
  2566 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  2569 ;;		 -> sprintf@f(11), 
  2570 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  2571 ;;		 -> STR_10(17), STR_9(17), STR_4(15), 
  2572 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2573 ;;		 -> sprintf@ap(1), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  cfmt            1  102[COMRAM] PTR unsigned char 
  2576 ;;		 -> STR_10(17), STR_9(17), STR_4(15), 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2   44[BANK0 ] int 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2586 ;;      Params:         0       3       0       0       0       0       0
  2587 ;;      Locals:         1       0       0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0
  2589 ;;      Totals:         1       3       0       0       0       0       0
  2590 ;;Total ram usage:        4 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 7
  2593 ;; This function calls:
  2594 ;;		_vfpfcnvrt
  2595 ;; This function is called by:
  2596 ;;		_sprintf
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text2
  2601   003460                     __ptext2:
  2602                           	callstack 0
  2603   003460                     _vfprintf:
  2604                           	callstack 22
  2605   003460                     
  2606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2607   003460  C0AD  F067         	movff	vfprintf@fmt,vfprintf@cfmt
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2610   003464  EF3C  F01A         	goto	l3730
  2611   003468                     l3728:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2614   003468  C0AC  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  2615   00346C  0E67               	movlw	low vfprintf@cfmt
  2616   00346E  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  2617   003470  C0AE  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2618   003474  ECF0  F010         	call	_vfpfcnvrt	;wreg free
  2619   003478                     l3730:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2622   003478  C067  FFF6         	movff	vfprintf@cfmt,tblptrl
  2623   00347C                     	if	1	;There is more than 1 active tblptr byte
  2624   00347C  0E06               	movlw	high __smallconst
  2625   00347E  6EF7               	movwf	tblptrh,c
  2626   003480                     	endif
  2627   003480                     	if	0	;tblptru may be non-zero
  2628   003480                     	endif
  2629   003480                     	if	0	;tblptru may be non-zero
  2630   003480                     	endif
  2631   003480  0008               	tblrd		*
  2632   003482  50F5               	movf	tablat,w,c
  2633   003484  0900               	iorlw	0
  2634   003486  A4D8               	btfss	status,2,c
  2635   003488  EF48  F01A         	goto	u4301
  2636   00348C  EF4A  F01A         	goto	u4300
  2637   003490                     u4301:
  2638   003490  EF34  F01A         	goto	l3728
  2639   003494                     u4300:
  2640   003494                     
  2641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2642   003494  0E00               	movlw	0
  2643   003496  0100               	movlb	0	; () banked
  2644   003498  6FAD               	movwf	(?_vfprintf+1)& (0+255),b
  2645   00349A  0E00               	movlw	0
  2646   00349C  6FAC               	movwf	?_vfprintf& (0+255),b
  2647   00349E                     
  2648                           ; BSR set to: 0
  2649   00349E  0012               	return		;funcret
  2650   0034A0                     __end_of_vfprintf:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _vfpfcnvrt *****************
  2654 ;; Defined at:
  2655 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  2658 ;;		 -> sprintf@f(11), 
  2659 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  2660 ;;		 -> vfprintf@cfmt(1), 
  2661 ;;  ap              1   94[COMRAM] PTR PTR void 
  2662 ;;		 -> sprintf@ap(1), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  convarg         4   96[COMRAM] struct .
  2665 ;;  cp              1  101[COMRAM] PTR unsigned char 
  2666 ;;		 -> STR_10(17), STR_9(17), STR_4(15), 
  2667 ;;  c               1  100[COMRAM] unsigned char 
  2668 ;;  done            1    0        _Bool 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         3       0       0       0       0       0       0
  2679 ;;      Locals:         6       0       0       0       0       0       0
  2680 ;;      Temps:          1       0       0       0       0       0       0
  2681 ;;      Totals:        10       0       0       0       0       0       0
  2682 ;;Total ram usage:       10 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 6
  2685 ;; This function calls:
  2686 ;;		_dtoa
  2687 ;;		_efgtoa
  2688 ;;		_fputc
  2689 ;;		_read_prec_or_width
  2690 ;; This function is called by:
  2691 ;;		_vfprintf
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text3
  2696   0021E0                     __ptext3:
  2697                           	callstack 0
  2698   0021E0                     _vfpfcnvrt:
  2699                           	callstack 22
  2700   0021E0                     
  2701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2702   0021E0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2703   0021E2  6ED9               	movwf	fsr2l,c
  2704   0021E4  6ADA               	clrf	fsr2h,c
  2705   0021E6  CFDF FFF6          	movff	indf2,tblptrl
  2706   0021EA                     	if	1	;There is more than 1 active tblptr byte
  2707   0021EA  0E06               	movlw	high __smallconst
  2708   0021EC  6EF7               	movwf	tblptrh,c
  2709   0021EE                     	endif
  2710   0021EE                     	if	0	;tblptru may be non-zero
  2711   0021EE                     	endif
  2712   0021EE                     	if	0	;tblptru may be non-zero
  2713   0021EE                     	endif
  2714   0021EE  0008               	tblrd		*
  2715   0021F0  50F5               	movf	tablat,w,c
  2716   0021F2  0A25               	xorlw	37
  2717   0021F4  A4D8               	btfss	status,2,c
  2718   0021F6  EFFF  F010         	goto	u4121
  2719   0021FA  EF01  F011         	goto	u4120
  2720   0021FE                     u4121:
  2721   0021FE  EF01  F012         	goto	l3660
  2722   002202                     u4120:
  2723   002202                     
  2724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2725   002202  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2726   002204  6ED9               	movwf	fsr2l,c
  2727   002206  6ADA               	clrf	fsr2h,c
  2728   002208  2ADF               	incf	indf2,f,c
  2729   00220A                     
  2730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2731   00220A  0E00               	movlw	0
  2732   00220C  0100               	movlb	0	; () banked
  2733   00220E  6FDB               	movwf	(_width+1)& (0+255),b
  2734   002210  0E00               	movlw	0
  2735   002212  6FDA               	movwf	_width& (0+255),b
  2736   002214  C0DA  F07C         	movff	_width,_flags
  2737   002218                     
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2740   002218  69DC               	setf	_prec& (0+255),b
  2741   00221A  69DD               	setf	(_prec+1)& (0+255),b
  2742   00221C                     
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2745   00221C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2746   00221E  6ED9               	movwf	fsr2l,c
  2747   002220  6ADA               	clrf	fsr2h,c
  2748   002222  CFDF FFF6          	movff	indf2,tblptrl
  2749   002226                     	if	1	;There is more than 1 active tblptr byte
  2750   002226  0E06               	movlw	high __smallconst
  2751   002228  6EF7               	movwf	tblptrh,c
  2752   00222A                     	endif
  2753   00222A                     	if	0	;tblptru may be non-zero
  2754   00222A                     	endif
  2755   00222A                     	if	0	;tblptru may be non-zero
  2756   00222A                     	endif
  2757   00222A  0008               	tblrd		*
  2758   00222C  50F5               	movf	tablat,w,c
  2759   00222E  0A2E               	xorlw	46
  2760   002230  A4D8               	btfss	status,2,c
  2761   002232  EF1D  F011         	goto	u4131
  2762   002236  EF1F  F011         	goto	u4130
  2763   00223A                     u4131:
  2764   00223A  EF2D  F011         	goto	l3610
  2765   00223E                     u4130:
  2766   00223E                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2769   00223E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2770   002240  6ED9               	movwf	fsr2l,c
  2771   002242  6ADA               	clrf	fsr2h,c
  2772   002244  2ADF               	incf	indf2,f,c
  2773   002246                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2776   002246  C05E  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2777   00224A  C05F  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2778   00224E  EC98  F017         	call	_read_prec_or_width	;wreg free
  2779   002252  C001  F0DC         	movff	?_read_prec_or_width,_prec
  2780   002256  C002  F0DD         	movff	?_read_prec_or_width+1,_prec+1
  2781   00225A                     l3610:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2784   00225A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2785   00225C  6ED9               	movwf	fsr2l,c
  2786   00225E  6ADA               	clrf	fsr2h,c
  2787   002260  50DF               	movf	indf2,w,c
  2788   002262  6E66               	movwf	vfpfcnvrt@cp^0,c
  2789   002264                     
  2790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2791   002264  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2792   002268                     	if	1	;There is more than 1 active tblptr byte
  2793   002268  0E06               	movlw	high __smallconst
  2794   00226A  6EF7               	movwf	tblptrh,c
  2795   00226C                     	endif
  2796   00226C                     	if	0	;tblptru may be non-zero
  2797   00226C                     	endif
  2798   00226C                     	if	0	;tblptru may be non-zero
  2799   00226C                     	endif
  2800   00226C  0008               	tblrd		*
  2801   00226E  50F5               	movf	tablat,w,c
  2802   002270  0A64               	xorlw	100
  2803   002272  B4D8               	btfsc	status,2,c
  2804   002274  EF3E  F011         	goto	u4141
  2805   002278  EF40  F011         	goto	u4140
  2806   00227C                     u4141:
  2807   00227C  EF4E  F011         	goto	l3616
  2808   002280                     u4140:
  2809   002280  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2810   002284                     	if	1	;There is more than 1 active tblptr byte
  2811   002284  0E06               	movlw	high __smallconst
  2812   002286  6EF7               	movwf	tblptrh,c
  2813   002288                     	endif
  2814   002288                     	if	0	;tblptru may be non-zero
  2815   002288                     	endif
  2816   002288                     	if	0	;tblptru may be non-zero
  2817   002288                     	endif
  2818   002288  0008               	tblrd		*
  2819   00228A  50F5               	movf	tablat,w,c
  2820   00228C  0A69               	xorlw	105
  2821   00228E  A4D8               	btfss	status,2,c
  2822   002290  EF4C  F011         	goto	u4151
  2823   002294  EF4E  F011         	goto	u4150
  2824   002298                     u4151:
  2825   002298  EF69  F011         	goto	l3624
  2826   00229C                     u4150:
  2827   00229C                     l3616:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2830   00229C  505F               	movf	vfpfcnvrt@ap^0,w,c
  2831   00229E  6ED9               	movwf	fsr2l,c
  2832   0022A0  6ADA               	clrf	fsr2h,c
  2833   0022A2  0E02               	movlw	2
  2834   0022A4  26DF               	addwf	indf2,f,c
  2835   0022A6  5CDF               	subwf	indf2,w,c
  2836   0022A8  6ED9               	movwf	fsr2l,c
  2837   0022AA  6ADA               	clrf	fsr2h,c
  2838   0022AC  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  2839   0022B0  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  2840   0022B4                     
  2841                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2842   0022B4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2843   0022B6  6ED9               	movwf	fsr2l,c
  2844   0022B8  6ADA               	clrf	fsr2h,c
  2845   0022BA  2866               	incf	vfpfcnvrt@cp^0,w,c
  2846   0022BC  6EDF               	movwf	indf2,c
  2847   0022BE                     
  2848                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2849   0022BE  C05D  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2850   0022C2  C061  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2851   0022C6  C062  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2852   0022CA  ECF6  F013         	call	_dtoa	;wreg free
  2853   0022CE  EF12  F012         	goto	l1017
  2854   0022D2                     l3624:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2857   0022D2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2858   0022D4  6ED9               	movwf	fsr2l,c
  2859   0022D6  6ADA               	clrf	fsr2h,c
  2860   0022D8  50DF               	movf	indf2,w,c
  2861   0022DA  6E66               	movwf	vfpfcnvrt@cp^0,c
  2862   0022DC                     
  2863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2864   0022DC  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2865   0022E0                     	if	1	;There is more than 1 active tblptr byte
  2866   0022E0  0E06               	movlw	high __smallconst
  2867   0022E2  6EF7               	movwf	tblptrh,c
  2868   0022E4                     	endif
  2869   0022E4                     	if	0	;tblptru may be non-zero
  2870   0022E4                     	endif
  2871   0022E4                     	if	0	;tblptru may be non-zero
  2872   0022E4                     	endif
  2873   0022E4  0008               	tblrd		*
  2874   0022E6  CFF5 F065          	movff	tablat,vfpfcnvrt@c
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2877   0022EA  EF81  F011         	goto	l3634
  2878   0022EE                     l3628:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2881   0022EE  2A66               	incf	vfpfcnvrt@cp^0,f,c
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2884   0022F0  EF90  F011         	goto	l3636
  2885   0022F4                     l3630:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2888   0022F4  0E6C               	movlw	108
  2889   0022F6  6E65               	movwf	vfpfcnvrt@c^0,c
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2892   0022F8  EF90  F011         	goto	l3636
  2893   0022FC                     l1023:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2896   0022FC  6A65               	clrf	vfpfcnvrt@c^0,c
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2899   0022FE  EF90  F011         	goto	l3636
  2900   002302                     l3634:
  2901   002302  5065               	movf	vfpfcnvrt@c^0,w,c
  2902                           
  2903                           ; Switch size 1, requested type "simple"
  2904                           ; Number of cases is 3, Range of values is 76 to 108
  2905                           ; switch strategies available:
  2906                           ; Name         Instructions Cycles
  2907                           ; simple_byte           10     6 (average)
  2908                           ;	Chosen strategy is simple_byte
  2909   002304  0A4C               	xorlw	76	; case 76
  2910   002306  B4D8               	btfsc	status,2,c
  2911   002308  EF77  F011         	goto	l3628
  2912   00230C  0A2A               	xorlw	42	; case 102
  2913   00230E  B4D8               	btfsc	status,2,c
  2914   002310  EF7A  F011         	goto	l3630
  2915   002314  0A0A               	xorlw	10	; case 108
  2916   002316  B4D8               	btfsc	status,2,c
  2917   002318  EF77  F011         	goto	l3628
  2918   00231C  EF7E  F011         	goto	l1023
  2919   002320                     l3636:
  2920   002320  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2921   002324                     	if	1	;There is more than 1 active tblptr byte
  2922   002324  0E06               	movlw	high __smallconst
  2923   002326  6EF7               	movwf	tblptrh,c
  2924   002328                     	endif
  2925   002328                     	if	0	;tblptru may be non-zero
  2926   002328                     	endif
  2927   002328                     	if	0	;tblptru may be non-zero
  2928   002328                     	endif
  2929   002328  0008               	tblrd		*
  2930   00232A  50F5               	movf	tablat,w,c
  2931   00232C  0A66               	xorlw	102
  2932   00232E  A4D8               	btfss	status,2,c
  2933   002330  EF9C  F011         	goto	u4161
  2934   002334  EF9E  F011         	goto	u4160
  2935   002338                     u4161:
  2936   002338  EFFB  F011         	goto	l3656
  2937   00233C                     u4160:
  2938   00233C  EFC8  F011         	goto	l3644
  2939   002340                     l3638:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2942   002340  505F               	movf	vfpfcnvrt@ap^0,w,c
  2943   002342  6ED9               	movwf	fsr2l,c
  2944   002344  6ADA               	clrf	fsr2h,c
  2945   002346  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2946   00234A  0E04               	movlw	4
  2947   00234C  26DF               	addwf	indf2,f,c
  2948   00234E  5060               	movf	??_vfpfcnvrt^0,w,c
  2949   002350  6ED9               	movwf	fsr2l,c
  2950   002352  6ADA               	clrf	fsr2h,c
  2951   002354  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  2952   002358  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  2953   00235C  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+2
  2954   002360  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+3
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2957   002364  EFD3  F011         	goto	l3646
  2958   002368                     l3640:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2961   002368  505F               	movf	vfpfcnvrt@ap^0,w,c
  2962   00236A  6ED9               	movwf	fsr2l,c
  2963   00236C  6ADA               	clrf	fsr2h,c
  2964   00236E  CFDF F060          	movff	indf2,??_vfpfcnvrt
  2965   002372  0E04               	movlw	4
  2966   002374  26DF               	addwf	indf2,f,c
  2967   002376  5060               	movf	??_vfpfcnvrt^0,w,c
  2968   002378  6ED9               	movwf	fsr2l,c
  2969   00237A  6ADA               	clrf	fsr2h,c
  2970   00237C  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg
  2971   002380  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+1
  2972   002384  CFDE F063          	movff	postinc2,vfpfcnvrt@convarg+2
  2973   002388  CFDE F064          	movff	postinc2,vfpfcnvrt@convarg+3
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2976   00238C  EFD3  F011         	goto	l3646
  2977   002390                     l3644:
  2978   002390  5065               	movf	vfpfcnvrt@c^0,w,c
  2979                           
  2980                           ; Switch size 1, requested type "simple"
  2981                           ; Number of cases is 2, Range of values is 76 to 108
  2982                           ; switch strategies available:
  2983                           ; Name         Instructions Cycles
  2984                           ; simple_byte            7     4 (average)
  2985                           ;	Chosen strategy is simple_byte
  2986   002392  0A4C               	xorlw	76	; case 76
  2987   002394  B4D8               	btfsc	status,2,c
  2988   002396  EFB4  F011         	goto	l3640
  2989   00239A  0A20               	xorlw	32	; case 108
  2990   00239C  B4D8               	btfsc	status,2,c
  2991   00239E  EFA0  F011         	goto	l3638
  2992   0023A2  EFD3  F011         	goto	l3646
  2993   0023A6                     l3646:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2996   0023A6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2997   0023A8  6ED9               	movwf	fsr2l,c
  2998   0023AA  6ADA               	clrf	fsr2h,c
  2999   0023AC  2866               	incf	vfpfcnvrt@cp^0,w,c
  3000   0023AE  6EDF               	movwf	indf2,c
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3003   0023B0  EFEF  F011         	goto	l3654
  3004   0023B4                     l3648:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3007   0023B4  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  3008   0023B8  C061  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  3009   0023BC  C062  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3010   0023C0  C063  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3011   0023C4  C064  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3012   0023C8  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3013   0023CC                     	if	1	;There is more than 1 active tblptr byte
  3014   0023CC  0E06               	movlw	high __smallconst
  3015   0023CE  6EF7               	movwf	tblptrh,c
  3016   0023D0                     	endif
  3017   0023D0                     	if	0	;tblptru may be non-zero
  3018   0023D0                     	endif
  3019   0023D0                     	if	0	;tblptru may be non-zero
  3020   0023D0                     	endif
  3021   0023D0  0008               	tblrd		*
  3022   0023D2  CFF5 F05A          	movff	tablat,efgtoa@c
  3023   0023D6  EC4A  F003         	call	_efgtoa	;wreg free
  3024   0023DA  EF12  F012         	goto	l1017
  3025   0023DE                     l3654:
  3026   0023DE  C066  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3027   0023E2                     	if	1	;There is more than 1 active tblptr byte
  3028   0023E2  0E06               	movlw	high __smallconst
  3029   0023E4  6EF7               	movwf	tblptrh,c
  3030   0023E6                     	endif
  3031   0023E6                     	if	0	;tblptru may be non-zero
  3032   0023E6                     	endif
  3033   0023E6                     	if	0	;tblptru may be non-zero
  3034   0023E6                     	endif
  3035   0023E6  0008               	tblrd		*
  3036   0023E8  50F5               	movf	tablat,w,c
  3037                           
  3038                           ; Switch size 1, requested type "simple"
  3039                           ; Number of cases is 1, Range of values is 102 to 102
  3040                           ; switch strategies available:
  3041                           ; Name         Instructions Cycles
  3042                           ; simple_byte            4     3 (average)
  3043                           ;	Chosen strategy is simple_byte
  3044   0023EA  0A66               	xorlw	102	; case 102
  3045   0023EC  B4D8               	btfsc	status,2,c
  3046   0023EE  EFDA  F011         	goto	l3648
  3047   0023F2  EFFB  F011         	goto	l3656
  3048   0023F6                     l3656:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3051   0023F6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  3052   0023F8  6ED9               	movwf	fsr2l,c
  3053   0023FA  6ADA               	clrf	fsr2h,c
  3054   0023FC  2ADF               	incf	indf2,f,c
  3055   0023FE  EF12  F012         	goto	l1017
  3056   002402                     l3660:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3059   002402  505E               	movf	vfpfcnvrt@fmt^0,w,c
  3060   002404  6ED9               	movwf	fsr2l,c
  3061   002406  6ADA               	clrf	fsr2h,c
  3062   002408  CFDF FFF6          	movff	indf2,tblptrl
  3063   00240C                     	if	1	;There is more than 1 active tblptr byte
  3064   00240C  0E06               	movlw	high __smallconst
  3065   00240E  6EF7               	movwf	tblptrh,c
  3066   002410                     	endif
  3067   002410                     	if	0	;tblptru may be non-zero
  3068   002410                     	endif
  3069   002410                     	if	0	;tblptru may be non-zero
  3070   002410                     	endif
  3071   002410  0008               	tblrd		*
  3072   002412  50F5               	movf	tablat,w,c
  3073   002414  6E01               	movwf	fputc@c^0,c
  3074   002416  6A02               	clrf	(fputc@c+1)^0,c
  3075   002418  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3076   00241C  EC43  F017         	call	_fputc	;wreg free
  3077   002420  EFFB  F011         	goto	l3656
  3078   002424                     l1017:
  3079   002424  0012               	return		;funcret
  3080   002426                     __end_of_vfpfcnvrt:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _read_prec_or_width *****************
  3084 ;; Defined at:
  3085 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  3088 ;;		 -> vfprintf@cfmt(1), 
  3089 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  3090 ;;		 -> sprintf@ap(1), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  c               1    4[COMRAM] unsigned char 
  3093 ;;  n               2    5[COMRAM] int 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    0[COMRAM] int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3103 ;;      Params:         2       0       0       0       0       0       0
  3104 ;;      Locals:         3       0       0       0       0       0       0
  3105 ;;      Temps:          2       0       0       0       0       0       0
  3106 ;;      Totals:         7       0       0       0       0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_vfpfcnvrt
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text4
  3118   002F30                     __ptext4:
  3119                           	callstack 0
  3120   002F30                     _read_prec_or_width:
  3121                           	callstack 26
  3122   002F30                     
  3123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3124   002F30  0E00               	movlw	0
  3125   002F32  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  3126   002F34  0E00               	movlw	0
  3127   002F36  6E06               	movwf	read_prec_or_width@n^0,c
  3128   002F38                     
  3129                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3130   002F38  5001               	movf	read_prec_or_width@fmt^0,w,c
  3131   002F3A  6ED9               	movwf	fsr2l,c
  3132   002F3C  6ADA               	clrf	fsr2h,c
  3133   002F3E  CFDF FFF6          	movff	indf2,tblptrl
  3134   002F42                     	if	1	;There is more than 1 active tblptr byte
  3135   002F42  0E06               	movlw	high __smallconst
  3136   002F44  6EF7               	movwf	tblptrh,c
  3137   002F46                     	endif
  3138   002F46                     	if	0	;tblptru may be non-zero
  3139   002F46                     	endif
  3140   002F46                     	if	0	;tblptru may be non-zero
  3141   002F46                     	endif
  3142   002F46  0008               	tblrd		*
  3143   002F48  50F5               	movf	tablat,w,c
  3144   002F4A  0A2A               	xorlw	42
  3145   002F4C  A4D8               	btfss	status,2,c
  3146   002F4E  EFAB  F017         	goto	u4101
  3147   002F52  EFAD  F017         	goto	u4100
  3148   002F56                     u4101:
  3149   002F56  EFD2  F017         	goto	l3590
  3150   002F5A                     u4100:
  3151   002F5A                     
  3152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3153   002F5A  5001               	movf	read_prec_or_width@fmt^0,w,c
  3154   002F5C  6ED9               	movwf	fsr2l,c
  3155   002F5E  6ADA               	clrf	fsr2h,c
  3156   002F60  2ADF               	incf	indf2,f,c
  3157   002F62                     
  3158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3159   002F62  5002               	movf	read_prec_or_width@ap^0,w,c
  3160   002F64  6ED9               	movwf	fsr2l,c
  3161   002F66  6ADA               	clrf	fsr2h,c
  3162   002F68  0E02               	movlw	2
  3163   002F6A  26DF               	addwf	indf2,f,c
  3164   002F6C  5CDF               	subwf	indf2,w,c
  3165   002F6E  6ED9               	movwf	fsr2l,c
  3166   002F70  6ADA               	clrf	fsr2h,c
  3167   002F72  CFDE F006          	movff	postinc2,read_prec_or_width@n
  3168   002F76  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3171   002F7A  EFE5  F017         	goto	l1005
  3172   002F7E                     l3586:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3175   002F7E  0E0A               	movlw	10
  3176   002F80  0206               	mulwf	read_prec_or_width@n^0,c
  3177   002F82  CFF3 F003          	movff	prodl,??_read_prec_or_width
  3178   002F86  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  3179   002F8A  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  3180   002F8C  50F3               	movf	prodl,w,c
  3181   002F8E  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  3182   002F90  5005               	movf	read_prec_or_width@c^0,w,c
  3183   002F92  2403               	addwf	??_read_prec_or_width^0,w,c
  3184   002F94  6E06               	movwf	read_prec_or_width@n^0,c
  3185   002F96  0E00               	movlw	0
  3186   002F98  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  3187   002F9A  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  3188   002F9C                     
  3189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3190   002F9C  5001               	movf	read_prec_or_width@fmt^0,w,c
  3191   002F9E  6ED9               	movwf	fsr2l,c
  3192   002FA0  6ADA               	clrf	fsr2h,c
  3193   002FA2  2ADF               	incf	indf2,f,c
  3194   002FA4                     l3590:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3197   002FA4  5001               	movf	read_prec_or_width@fmt^0,w,c
  3198   002FA6  6ED9               	movwf	fsr2l,c
  3199   002FA8  6ADA               	clrf	fsr2h,c
  3200   002FAA  CFDF FFF6          	movff	indf2,tblptrl
  3201   002FAE                     	if	1	;There is more than 1 active tblptr byte
  3202   002FAE  0E06               	movlw	high __smallconst
  3203   002FB0  6EF7               	movwf	tblptrh,c
  3204   002FB2                     	endif
  3205   002FB2                     	if	0	;tblptru may be non-zero
  3206   002FB2                     	endif
  3207   002FB2                     	if	0	;tblptru may be non-zero
  3208   002FB2                     	endif
  3209   002FB2  0008               	tblrd		*
  3210   002FB4  50F5               	movf	tablat,w,c
  3211   002FB6  0FD0               	addlw	208
  3212   002FB8  6E05               	movwf	read_prec_or_width@c^0,c
  3213   002FBA  0E09               	movlw	9
  3214   002FBC  6405               	cpfsgt	read_prec_or_width@c^0,c
  3215   002FBE  EFE3  F017         	goto	u4111
  3216   002FC2  EFE5  F017         	goto	u4110
  3217   002FC6                     u4111:
  3218   002FC6  EFBF  F017         	goto	l3586
  3219   002FCA                     u4110:
  3220   002FCA                     l1005:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3223   002FCA  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  3224   002FCE  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3225   002FD2  0012               	return		;funcret
  3226   002FD4                     __end_of_read_prec_or_width:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _efgtoa *****************
  3230 ;; Defined at:
  3231 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  3234 ;;		 -> sprintf@f(11), 
  3235 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  3236 ;;  c               1   89[COMRAM] unsigned char 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  u               4   40[BANK0 ] struct flui
  3239 ;;  g               4   36[BANK0 ] struct flui
  3240 ;;  l               4   29[BANK0 ] struct flui
  3241 ;;  h               4   25[BANK0 ] struct flui
  3242 ;;  ou              4   19[BANK0 ] struct flui
  3243 ;;  n               2   34[BANK0 ] int 
  3244 ;;  i               2   23[BANK0 ] int 
  3245 ;;  w               2   17[BANK0 ] int 
  3246 ;;  e               2   15[BANK0 ] int 
  3247 ;;  m               2   13[BANK0 ] int 
  3248 ;;  d               2   11[BANK0 ] int 
  3249 ;;  t               2    4[BANK0 ] int 
  3250 ;;  p               2    2[BANK0 ] int 
  3251 ;;  ne              2    0[BANK0 ] int 
  3252 ;;  sign            1   33[BANK0 ] unsigned char 
  3253 ;;  nmode           1   10[BANK0 ] unsigned char 
  3254 ;;  mode            1    9[BANK0 ] unsigned char 
  3255 ;;  pp              1    8[BANK0 ] unsigned char 
  3256 ;;  esign           1    0        unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3266 ;;      Params:         6       0       0       0       0       0       0
  3267 ;;      Locals:         0      44       0       0       0       0       0
  3268 ;;      Temps:          2       0       0       0       0       0       0
  3269 ;;      Totals:         8      44       0       0       0       0       0
  3270 ;;Total ram usage:       52 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 5
  3273 ;; This function calls:
  3274 ;;		___fladd
  3275 ;;		___fldiv
  3276 ;;		___fleq
  3277 ;;		___flge
  3278 ;;		___flmul
  3279 ;;		___flneg
  3280 ;;		___flsub
  3281 ;;		___fltol
  3282 ;;		___fpclassifyf
  3283 ;;		_floorf
  3284 ;;		_labs
  3285 ;;		_memcpy
  3286 ;;		_pad
  3287 ;;		_strcpy
  3288 ;; This function is called by:
  3289 ;;		_vfpfcnvrt
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text5
  3294   000694                     __ptext5:
  3295                           	callstack 0
  3296   000694                     _efgtoa:
  3297                           	callstack 22
  3298   000694                     
  3299                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3300   000694  0100               	movlb	0	; () banked
  3301   000696  6BA1               	clrf	efgtoa@sign& (0+255),b
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3304   000698  C056  F0A4         	movff	efgtoa@f,efgtoa@g
  3305   00069C  C057  F0A5         	movff	efgtoa@f+1,efgtoa@g+1
  3306   0006A0  C058  F0A6         	movff	efgtoa@f+2,efgtoa@g+2
  3307   0006A4  C059  F0A7         	movff	efgtoa@f+3,efgtoa@g+3
  3308   0006A8                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3311   0006A8  BFA7               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3312   0006AA  EF5B  F003         	goto	u3780
  3313   0006AE  EF59  F003         	goto	u3781
  3314   0006B2                     u3781:
  3315   0006B2  EF6F  F003         	goto	l3366
  3316   0006B6                     u3780:
  3317   0006B6                     
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3320   0006B6  0E01               	movlw	1
  3321   0006B8  6FA1               	movwf	efgtoa@sign& (0+255),b
  3322   0006BA                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3325   0006BA  C0A4  F001         	movff	efgtoa@g,___flneg@f1
  3326   0006BE  C0A5  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3327   0006C2  C0A6  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3328   0006C6  C0A7  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3329   0006CA  ECA9  F01A         	call	___flneg	;wreg free
  3330   0006CE  C001  F0A4         	movff	?___flneg,efgtoa@g
  3331   0006D2  C002  F0A5         	movff	?___flneg+1,efgtoa@g+1
  3332   0006D6  C003  F0A6         	movff	?___flneg+2,efgtoa@g+2
  3333   0006DA  C004  F0A7         	movff	?___flneg+3,efgtoa@g+3
  3334   0006DE                     l3366:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3337   0006DE  0E00               	movlw	0
  3338   0006E0  0100               	movlb	0	; () banked
  3339   0006E2  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  3340   0006E4  0E00               	movlw	0
  3341   0006E6  6FA2               	movwf	efgtoa@n& (0+255),b
  3342   0006E8                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3345   0006E8  C0DA  F091         	movff	_width,efgtoa@w
  3346   0006EC  C0DB  F092         	movff	_width+1,efgtoa@w+1
  3347   0006F0                     
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3350   0006F0  51A1               	movf	efgtoa@sign& (0+255),w,b
  3351   0006F2  B4D8               	btfsc	status,2,c
  3352   0006F4  EF7E  F003         	goto	u3791
  3353   0006F8  EF80  F003         	goto	u3790
  3354   0006FC                     u3791:
  3355   0006FC  EF94  F003         	goto	l3380
  3356   000700                     u3790:
  3357   000700                     
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3360   000700  51A1               	movf	efgtoa@sign& (0+255),w,b
  3361   000702  A4D8               	btfss	status,2,c
  3362   000704  EF86  F003         	goto	u3801
  3363   000708  EF88  F003         	goto	u3800
  3364   00070C                     u3801:
  3365   00070C  EF8E  F003         	goto	l3376
  3366   000710                     u3800:
  3367   000710                     
  3368                           ; BSR set to: 0
  3369   000710  0E00               	movlw	0
  3370   000712  6F87               	movwf	(_efgtoa$1380+1)& (0+255),b
  3371   000714  0E2B               	movlw	43
  3372   000716  6F86               	movwf	_efgtoa$1380& (0+255),b
  3373   000718  EF92  F003         	goto	l3378
  3374   00071C                     l3376:
  3375                           
  3376                           ; BSR set to: 0
  3377   00071C  0E00               	movlw	0
  3378   00071E  6F87               	movwf	(_efgtoa$1380+1)& (0+255),b
  3379   000720  0E2D               	movlw	45
  3380   000722  6F86               	movwf	_efgtoa$1380& (0+255),b
  3381   000724                     l3378:
  3382                           
  3383                           ; BSR set to: 0
  3384   000724  C086  F0A1         	movff	_efgtoa$1380,efgtoa@sign
  3385   000728                     l3380:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3389   000728  C0A4  F001         	movff	efgtoa@g,___fpclassifyf@x
  3390   00072C  C0A5  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3391   000730  C0A6  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3392   000734  C0A7  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3393   000738  ECB7  F015         	call	___fpclassifyf	;wreg free
  3394   00073C  0401               	decf	?___fpclassifyf^0,w,c
  3395   00073E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3396   000740  A4D8               	btfss	status,2,c
  3397   000742  EFA5  F003         	goto	u3811
  3398   000746  EFA7  F003         	goto	u3810
  3399   00074A                     u3811:
  3400   00074A  EFD6  F003         	goto	l3398
  3401   00074E                     u3810:
  3402   00074E                     
  3403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3404   00074E  0100               	movlb	0	; () banked
  3405   000750  51A1               	movf	efgtoa@sign& (0+255),w,b
  3406   000752  B4D8               	btfsc	status,2,c
  3407   000754  EFAE  F003         	goto	u3821
  3408   000758  EFB0  F003         	goto	u3820
  3409   00075C                     u3821:
  3410   00075C  EFB9  F003         	goto	l3390
  3411   000760                     u3820:
  3412   000760                     
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3415   000760  C0A1  F100         	movff	efgtoa@sign,_dbuf
  3416   000764                     
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3419   000764  0791               	decf	efgtoa@w& (0+255),f,b
  3420   000766  A0D8               	btfss	status,0,c
  3421   000768  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  3422   00076A                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3425   00076A  0E00               	movlw	0
  3426   00076C  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  3427   00076E  0E01               	movlw	1
  3428   000770  6FA2               	movwf	efgtoa@n& (0+255),b
  3429   000772                     l3390:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3433   000772  0E00               	movlw	low _dbuf
  3434   000774  25A2               	addwf	efgtoa@n& (0+255),w,b
  3435   000776  6E01               	movwf	strcpy@dest^0,c
  3436   000778  0E01               	movlw	high _dbuf
  3437   00077A  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3438   00077C  6E02               	movwf	(strcpy@dest+1)^0,c
  3439   00077E  0E89               	movlw	low STR_11
  3440   000780  6E03               	movwf	strcpy@src^0,c
  3441   000782  EC70  F01A         	call	_strcpy	;wreg free
  3442   000786                     l3392:
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3445   000786  0100               	movlb	0	; () banked
  3446   000788  0EFD               	movlw	253
  3447   00078A  2791               	addwf	efgtoa@w& (0+255),f,b
  3448   00078C  0EFF               	movlw	255
  3449   00078E  2392               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3450   000790                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3453   000790  C055  F00F         	movff	efgtoa@fp,pad@fp
  3454   000794  0E00               	movlw	low _dbuf
  3455   000796  6E10               	movwf	pad@buf^0,c
  3456   000798  0E01               	movlw	high _dbuf
  3457   00079A  6E11               	movwf	(pad@buf+1)^0,c
  3458   00079C  C091  F012         	movff	efgtoa@w,pad@p
  3459   0007A0  C092  F013         	movff	efgtoa@w+1,pad@p+1
  3460   0007A4  ECB4  F018         	call	_pad	;wreg free
  3461   0007A8  EF3B  F008         	goto	l960
  3462   0007AC                     l3398:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3465   0007AC  C0A4  F001         	movff	efgtoa@g,___fpclassifyf@x
  3466   0007B0  C0A5  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3467   0007B4  C0A6  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3468   0007B8  C0A7  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3469   0007BC  ECB7  F015         	call	___fpclassifyf	;wreg free
  3470   0007C0  5001               	movf	?___fpclassifyf^0,w,c
  3471   0007C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3472   0007C4  A4D8               	btfss	status,2,c
  3473   0007C6  EFE7  F003         	goto	u3831
  3474   0007CA  EFE9  F003         	goto	u3830
  3475   0007CE                     u3831:
  3476   0007CE  EF07  F004         	goto	l3416
  3477   0007D2                     u3830:
  3478   0007D2                     
  3479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3480   0007D2  0100               	movlb	0	; () banked
  3481   0007D4  51A1               	movf	efgtoa@sign& (0+255),w,b
  3482   0007D6  B4D8               	btfsc	status,2,c
  3483   0007D8  EFF0  F003         	goto	u3841
  3484   0007DC  EFF2  F003         	goto	u3840
  3485   0007E0                     u3841:
  3486   0007E0  EFFB  F003         	goto	l3408
  3487   0007E4                     u3840:
  3488   0007E4                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3491   0007E4  C0A1  F100         	movff	efgtoa@sign,_dbuf
  3492   0007E8                     
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3495   0007E8  0791               	decf	efgtoa@w& (0+255),f,b
  3496   0007EA  A0D8               	btfss	status,0,c
  3497   0007EC  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  3498   0007EE                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3501   0007EE  0E00               	movlw	0
  3502   0007F0  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  3503   0007F2  0E01               	movlw	1
  3504   0007F4  6FA2               	movwf	efgtoa@n& (0+255),b
  3505   0007F6                     l3408:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3509   0007F6  0E00               	movlw	low _dbuf
  3510   0007F8  25A2               	addwf	efgtoa@n& (0+255),w,b
  3511   0007FA  6E01               	movwf	strcpy@dest^0,c
  3512   0007FC  0E01               	movlw	high _dbuf
  3513   0007FE  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3514   000800  6E02               	movwf	(strcpy@dest+1)^0,c
  3515   000802  0E8D               	movlw	low STR_14
  3516   000804  6E03               	movwf	strcpy@src^0,c
  3517   000806  EC70  F01A         	call	_strcpy	;wreg free
  3518   00080A  EFC3  F003         	goto	l3392
  3519   00080E                     l3416:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3522   00080E  0E00               	movlw	0
  3523   000810  0100               	movlb	0	; () banked
  3524   000812  6FA8               	movwf	efgtoa@u& (0+255),b
  3525   000814  0E00               	movlw	0
  3526   000816  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  3527   000818  0E80               	movlw	128
  3528   00081A  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  3529   00081C  0E3F               	movlw	63
  3530   00081E  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3533   000820  0E00               	movlw	0
  3534   000822  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  3535   000824  0E00               	movlw	0
  3536   000826  6F8F               	movwf	efgtoa@e& (0+255),b
  3537   000828                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3540   000828  C0A4  F001         	movff	efgtoa@g,___fleq@ff1
  3541   00082C  C0A5  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3542   000830  C0A6  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3543   000834  C0A7  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3544   000838  0E00               	movlw	0
  3545   00083A  6E05               	movwf	___fleq@ff2^0,c
  3546   00083C  0E00               	movlw	0
  3547   00083E  6E06               	movwf	(___fleq@ff2+1)^0,c
  3548   000840  0E00               	movlw	0
  3549   000842  6E07               	movwf	(___fleq@ff2+2)^0,c
  3550   000844  0E00               	movlw	0
  3551   000846  6E08               	movwf	(___fleq@ff2+3)^0,c
  3552   000848  ECEE  F016         	call	___fleq	;wreg free
  3553   00084C  B0D8               	btfsc	status,0,c
  3554   00084E  EF2B  F004         	goto	u3851
  3555   000852  EF2D  F004         	goto	u3850
  3556   000856                     u3851:
  3557   000856  EF0C  F005         	goto	l963
  3558   00085A                     u3850:
  3559   00085A  EF3A  F004         	goto	l3424
  3560   00085E                     l965:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3563   00085E  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  3564   000862  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  3565   000866  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  3566   00086A  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  3567   00086E                     
  3568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3569   00086E  0100               	movlb	0	; () banked
  3570   000870  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  3571   000872  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  3572   000874                     l3424:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3575   000874  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3576   000878  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3577   00087C  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3578   000880  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3579   000884  0E00               	movlw	0
  3580   000886  6E13               	movwf	___flmul@a^0,c
  3581   000888  0E00               	movlw	0
  3582   00088A  6E14               	movwf	(___flmul@a+1)^0,c
  3583   00088C  0E20               	movlw	32
  3584   00088E  6E15               	movwf	(___flmul@a+2)^0,c
  3585   000890  0E41               	movlw	65
  3586   000892  6E16               	movwf	(___flmul@a+3)^0,c
  3587   000894  EC15  F00D         	call	___flmul	;wreg free
  3588   000898  C00F  F093         	movff	?___flmul,efgtoa@ou
  3589   00089C  C010  F094         	movff	?___flmul+1,efgtoa@ou+1
  3590   0008A0  C011  F095         	movff	?___flmul+2,efgtoa@ou+2
  3591   0008A4  C012  F096         	movff	?___flmul+3,efgtoa@ou+3
  3592   0008A8  0100               	movlb	0	; () banked
  3593   0008AA  5193               	movf	efgtoa@ou& (0+255),w,b
  3594   0008AC  5DA4               	subwf	efgtoa@g& (0+255),w,b
  3595   0008AE  6E01               	movwf	labs@a^0,c
  3596   0008B0  5194               	movf	(efgtoa@ou+1)& (0+255),w,b
  3597   0008B2  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3598   0008B4  6E02               	movwf	(labs@a+1)^0,c
  3599   0008B6  5195               	movf	(efgtoa@ou+2)& (0+255),w,b
  3600   0008B8  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3601   0008BA  6E03               	movwf	(labs@a+2)^0,c
  3602   0008BC  5196               	movf	(efgtoa@ou+3)& (0+255),w,b
  3603   0008BE  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3604   0008C0  6E04               	movwf	(labs@a+3)^0,c
  3605   0008C2  EC42  F019         	call	_labs	;wreg free
  3606   0008C6  BE04               	btfsc	(?_labs+3)^0,7,c
  3607   0008C8  EF71  F004         	goto	u3861
  3608   0008CC  5004               	movf	(?_labs+3)^0,w,c
  3609   0008CE  1003               	iorwf	(?_labs+2)^0,w,c
  3610   0008D0  1002               	iorwf	(?_labs+1)^0,w,c
  3611   0008D2  E109               	bnz	u3860
  3612   0008D4  0E02               	movlw	2
  3613   0008D6  5C01               	subwf	?_labs^0,w,c
  3614   0008D8  A0D8               	btfss	status,0,c
  3615   0008DA  EF71  F004         	goto	u3861
  3616   0008DE  EF73  F004         	goto	u3860
  3617   0008E2                     u3861:
  3618   0008E2  EF2F  F004         	goto	l965
  3619   0008E6                     u3860:
  3620   0008E6  C093  F028         	movff	efgtoa@ou,___flge@ff1
  3621   0008EA  C094  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  3622   0008EE  C095  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  3623   0008F2  C096  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  3624   0008F6  C0A4  F02C         	movff	efgtoa@g,___flge@ff2
  3625   0008FA  C0A5  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  3626   0008FE  C0A6  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  3627   000902  C0A7  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  3628   000906  EC35  F015         	call	___flge	;wreg free
  3629   00090A  A0D8               	btfss	status,0,c
  3630   00090C  EF8A  F004         	goto	u3871
  3631   000910  EF8C  F004         	goto	u3870
  3632   000914                     u3871:
  3633   000914  EF2F  F004         	goto	l965
  3634   000918                     u3870:
  3635   000918                     
  3636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3637   000918  0100               	movlb	0	; () banked
  3638   00091A  51A8               	movf	efgtoa@u& (0+255),w,b
  3639   00091C  5DA4               	subwf	efgtoa@g& (0+255),w,b
  3640   00091E  6E01               	movwf	labs@a^0,c
  3641   000920  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  3642   000922  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3643   000924  6E02               	movwf	(labs@a+1)^0,c
  3644   000926  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  3645   000928  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3646   00092A  6E03               	movwf	(labs@a+2)^0,c
  3647   00092C  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  3648   00092E  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3649   000930  6E04               	movwf	(labs@a+3)^0,c
  3650   000932  EC42  F019         	call	_labs	;wreg free
  3651   000936  BE04               	btfsc	(?_labs+3)^0,7,c
  3652   000938  EFAB  F004         	goto	u3880
  3653   00093C  5004               	movf	(?_labs+3)^0,w,c
  3654   00093E  1003               	iorwf	(?_labs+2)^0,w,c
  3655   000940  1002               	iorwf	(?_labs+1)^0,w,c
  3656   000942  E107               	bnz	u3881
  3657   000944  0E02               	movlw	2
  3658   000946  5C01               	subwf	?_labs^0,w,c
  3659   000948  B0D8               	btfsc	status,0,c
  3660   00094A  EFA9  F004         	goto	u3881
  3661   00094E  EFAB  F004         	goto	u3880
  3662   000952                     u3881:
  3663   000952  EFF3  F004         	goto	l3442
  3664   000956                     u3880:
  3665   000956                     l3432:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3668   000956  C0A8  F0A4         	movff	efgtoa@u,efgtoa@g
  3669   00095A  C0A9  F0A5         	movff	efgtoa@u+1,efgtoa@g+1
  3670   00095E  C0AA  F0A6         	movff	efgtoa@u+2,efgtoa@g+2
  3671   000962  C0AB  F0A7         	movff	efgtoa@u+3,efgtoa@g+3
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3674   000966  EF0C  F005         	goto	l963
  3675   00096A                     l3434:
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3678   00096A  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  3679   00096E  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3680   000972  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3681   000976  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3682   00097A  0E00               	movlw	0
  3683   00097C  6E2C               	movwf	___fldiv@a^0,c
  3684   00097E  0E00               	movlw	0
  3685   000980  6E2D               	movwf	(___fldiv@a+1)^0,c
  3686   000982  0E20               	movlw	32
  3687   000984  6E2E               	movwf	(___fldiv@a+2)^0,c
  3688   000986  0E41               	movlw	65
  3689   000988  6E2F               	movwf	(___fldiv@a+3)^0,c
  3690   00098A  EC28  F00F         	call	___fldiv	;wreg free
  3691   00098E  C028  F0A8         	movff	?___fldiv,efgtoa@u
  3692   000992  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  3693   000996  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  3694   00099A  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  3695   00099E                     
  3696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3697   00099E  0100               	movlb	0	; () banked
  3698   0009A0  078F               	decf	efgtoa@e& (0+255),f,b
  3699   0009A2  A0D8               	btfss	status,0,c
  3700   0009A4  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  3701   0009A6                     
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3704   0009A6  51A8               	movf	efgtoa@u& (0+255),w,b
  3705   0009A8  5DA4               	subwf	efgtoa@g& (0+255),w,b
  3706   0009AA  6E01               	movwf	labs@a^0,c
  3707   0009AC  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  3708   0009AE  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3709   0009B0  6E02               	movwf	(labs@a+1)^0,c
  3710   0009B2  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  3711   0009B4  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3712   0009B6  6E03               	movwf	(labs@a+2)^0,c
  3713   0009B8  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  3714   0009BA  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3715   0009BC  6E04               	movwf	(labs@a+3)^0,c
  3716   0009BE  EC42  F019         	call	_labs	;wreg free
  3717   0009C2  BE04               	btfsc	(?_labs+3)^0,7,c
  3718   0009C4  EFF1  F004         	goto	u3890
  3719   0009C8  5004               	movf	(?_labs+3)^0,w,c
  3720   0009CA  1003               	iorwf	(?_labs+2)^0,w,c
  3721   0009CC  1002               	iorwf	(?_labs+1)^0,w,c
  3722   0009CE  E107               	bnz	u3891
  3723   0009D0  0E02               	movlw	2
  3724   0009D2  5C01               	subwf	?_labs^0,w,c
  3725   0009D4  B0D8               	btfsc	status,0,c
  3726   0009D6  EFEF  F004         	goto	u3891
  3727   0009DA  EFF1  F004         	goto	u3890
  3728   0009DE                     u3891:
  3729   0009DE  EFF3  F004         	goto	l3442
  3730   0009E2                     u3890:
  3731   0009E2  EFAB  F004         	goto	l3432
  3732   0009E6                     l3442:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3735   0009E6  C0A4  F028         	movff	efgtoa@g,___flge@ff1
  3736   0009EA  C0A5  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3737   0009EE  C0A6  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3738   0009F2  C0A7  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3739   0009F6  C0A8  F02C         	movff	efgtoa@u,___flge@ff2
  3740   0009FA  C0A9  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3741   0009FE  C0AA  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3742   000A02  C0AB  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3743   000A06  EC35  F015         	call	___flge	;wreg free
  3744   000A0A  A0D8               	btfss	status,0,c
  3745   000A0C  EF0A  F005         	goto	u3901
  3746   000A10  EF0C  F005         	goto	u3900
  3747   000A14                     u3901:
  3748   000A14  EFB5  F004         	goto	l3434
  3749   000A18                     u3900:
  3750   000A18                     l963:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3753   000A18  C05A  F089         	movff	efgtoa@c,efgtoa@mode
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3756   000A1C  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  3757   000A20                     
  3758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3759   000A20  0100               	movlb	0	; () banked
  3760   000A22  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  3761   000A24  EF16  F005         	goto	u3911
  3762   000A28  EF18  F005         	goto	u3910
  3763   000A2C                     u3911:
  3764   000A2C  EF1E  F005         	goto	l3448
  3765   000A30                     u3910:
  3766   000A30                     
  3767                           ; BSR set to: 0
  3768   000A30  C0DC  F082         	movff	_prec,efgtoa@p
  3769   000A34  C0DD  F083         	movff	_prec+1,efgtoa@p+1
  3770   000A38  EF22  F005         	goto	l3450
  3771   000A3C                     l3448:
  3772                           
  3773                           ; BSR set to: 0
  3774   000A3C  0E00               	movlw	0
  3775   000A3E  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  3776   000A40  0E06               	movlw	6
  3777   000A42  6F82               	movwf	efgtoa@p& (0+255),b
  3778   000A44                     l3450:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3782   000A44  C082  F08D         	movff	efgtoa@p,efgtoa@m
  3783   000A48  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  3784   000A4C                     
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3787   000A4C  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  3788   000A4E  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  3789   000A50                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3792   000A50  0E66               	movlw	102
  3793   000A52  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3794   000A54  A4D8               	btfss	status,2,c
  3795   000A56  EF2F  F005         	goto	u3921
  3796   000A5A  EF31  F005         	goto	u3920
  3797   000A5E                     u3921:
  3798   000A5E  EF51  F005         	goto	l3464
  3799   000A62                     u3920:
  3800   000A62                     
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3803   000A62  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3804   000A64  EF38  F005         	goto	u3930
  3805   000A68  EF36  F005         	goto	u3931
  3806   000A6C                     u3931:
  3807   000A6C  EF44  F005         	goto	l3460
  3808   000A70                     u3930:
  3809   000A70                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3812   000A70  0E00               	movlw	0
  3813   000A72  6FA8               	movwf	efgtoa@u& (0+255),b
  3814   000A74  0E00               	movlw	0
  3815   000A76  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  3816   000A78  0E80               	movlw	128
  3817   000A7A  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  3818   000A7C  0E3F               	movlw	63
  3819   000A7E  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3822   000A80  0E00               	movlw	0
  3823   000A82  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  3824   000A84  0E00               	movlw	0
  3825   000A86  6F8F               	movwf	efgtoa@e& (0+255),b
  3826   000A88                     l3460:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3830   000A88  0E67               	movlw	103
  3831   000A8A  1989               	xorwf	efgtoa@mode& (0+255),w,b
  3832   000A8C  B4D8               	btfsc	status,2,c
  3833   000A8E  EF4B  F005         	goto	u3941
  3834   000A92  EF4D  F005         	goto	u3940
  3835   000A96                     u3941:
  3836   000A96  EF51  F005         	goto	l3464
  3837   000A9A                     u3940:
  3838   000A9A                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3841   000A9A  518F               	movf	efgtoa@e& (0+255),w,b
  3842   000A9C  278D               	addwf	efgtoa@m& (0+255),f,b
  3843   000A9E  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  3844   000AA0  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3845   000AA2                     l3464:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3849   000AA2  0E00               	movlw	0
  3850   000AA4  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  3851   000AA6  0E00               	movlw	0
  3852   000AA8  6F97               	movwf	efgtoa@i& (0+255),b
  3853   000AAA                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3856   000AAA  C0A4  F099         	movff	efgtoa@g,efgtoa@h
  3857   000AAE  C0A5  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  3858   000AB2  C0A6  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  3859   000AB6  C0A7  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  3860   000ABA                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3863   000ABA  C0A8  F093         	movff	efgtoa@u,efgtoa@ou
  3864   000ABE  C0A9  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  3865   000AC2  C0AA  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  3866   000AC6  C0AB  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3869   000ACA  EFE2  F005         	goto	l3478
  3870   000ACE                     l3470:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3874   000ACE  C099  F028         	movff	efgtoa@h,___fldiv@b
  3875   000AD2  C09A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3876   000AD6  C09B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3877   000ADA  C09C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3878   000ADE  C0A8  F02C         	movff	efgtoa@u,___fldiv@a
  3879   000AE2  C0A9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3880   000AE6  C0AA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3881   000AEA  C0AB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3882   000AEE  EC28  F00F         	call	___fldiv	;wreg free
  3883   000AF2  C028  F041         	movff	?___fldiv,floorf@x
  3884   000AF6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3885   000AFA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3886   000AFE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3887   000B02  EC13  F012         	call	_floorf	;wreg free
  3888   000B06  C041  F09D         	movff	?_floorf,efgtoa@l
  3889   000B0A  C042  F09E         	movff	?_floorf+1,efgtoa@l+1
  3890   000B0E  C043  F09F         	movff	?_floorf+2,efgtoa@l+2
  3891   000B12  C044  F0A0         	movff	?_floorf+3,efgtoa@l+3
  3892                           
  3893                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3894   000B16  C09D  F001         	movff	efgtoa@l,___fltol@f1
  3895   000B1A  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3896   000B1E  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3897   000B22  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3898   000B26  ECB2  F014         	call	___fltol	;wreg free
  3899   000B2A  C001  F08B         	movff	?___fltol,efgtoa@d
  3900   000B2E  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  3901   000B32                     
  3902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3903   000B32  C099  F028         	movff	efgtoa@h,___flsub@b
  3904   000B36  C09A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3905   000B3A  C09B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3906   000B3E  C09C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3907   000B42  C09D  F013         	movff	efgtoa@l,___flmul@a
  3908   000B46  C09E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3909   000B4A  C09F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3910   000B4E  C0A0  F016         	movff	efgtoa@l+3,___flmul@a+3
  3911   000B52  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3912   000B56  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3913   000B5A  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3914   000B5E  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3915   000B62  EC15  F00D         	call	___flmul	;wreg free
  3916   000B66  C00F  F02C         	movff	?___flmul,___flsub@a
  3917   000B6A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3918   000B6E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3919   000B72  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3920   000B76  EC0D  F01A         	call	___flsub	;wreg free
  3921   000B7A  C028  F099         	movff	?___flsub,efgtoa@h
  3922   000B7E  C029  F09A         	movff	?___flsub+1,efgtoa@h+1
  3923   000B82  C02A  F09B         	movff	?___flsub+2,efgtoa@h+2
  3924   000B86  C02B  F09C         	movff	?___flsub+3,efgtoa@h+3
  3925   000B8A                     
  3926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3927   000B8A  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  3928   000B8E  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3929   000B92  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3930   000B96  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3931   000B9A  0E00               	movlw	0
  3932   000B9C  6E2C               	movwf	___fldiv@a^0,c
  3933   000B9E  0E00               	movlw	0
  3934   000BA0  6E2D               	movwf	(___fldiv@a+1)^0,c
  3935   000BA2  0E20               	movlw	32
  3936   000BA4  6E2E               	movwf	(___fldiv@a+2)^0,c
  3937   000BA6  0E41               	movlw	65
  3938   000BA8  6E2F               	movwf	(___fldiv@a+3)^0,c
  3939   000BAA  EC28  F00F         	call	___fldiv	;wreg free
  3940   000BAE  C028  F0A8         	movff	?___fldiv,efgtoa@u
  3941   000BB2  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  3942   000BB6  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  3943   000BBA  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  3944   000BBE                     
  3945                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3946   000BBE  0100               	movlb	0	; () banked
  3947   000BC0  4B97               	infsnz	efgtoa@i& (0+255),f,b
  3948   000BC2  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  3949   000BC4                     l3478:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3953   000BC4  518D               	movf	efgtoa@m& (0+255),w,b
  3954   000BC6  5D97               	subwf	efgtoa@i& (0+255),w,b
  3955   000BC8  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  3956   000BCA  0A80               	xorlw	128
  3957   000BCC  6E5B               	movwf	??_efgtoa^0,c
  3958   000BCE  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  3959   000BD0  0A80               	xorlw	128
  3960   000BD2  585B               	subwfb	??_efgtoa^0,w,c
  3961   000BD4  A0D8               	btfss	status,0,c
  3962   000BD6  EFEF  F005         	goto	u3951
  3963   000BDA  EFF1  F005         	goto	u3950
  3964   000BDE                     u3951:
  3965   000BDE  EF67  F005         	goto	l3470
  3966   000BE2                     u3950:
  3967   000BE2                     
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3970   000BE2  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  3971   000BE6  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  3972   000BEA  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  3973   000BEE  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  3974   000BF2  0E00               	movlw	0
  3975   000BF4  6E13               	movwf	___flmul@a^0,c
  3976   000BF6  0E00               	movlw	0
  3977   000BF8  6E14               	movwf	(___flmul@a+1)^0,c
  3978   000BFA  0EA0               	movlw	160
  3979   000BFC  6E15               	movwf	(___flmul@a+2)^0,c
  3980   000BFE  0E40               	movlw	64
  3981   000C00  6E16               	movwf	(___flmul@a+3)^0,c
  3982   000C02  EC15  F00D         	call	___flmul	;wreg free
  3983   000C06  C00F  F09D         	movff	?___flmul,efgtoa@l
  3984   000C0A  C010  F09E         	movff	?___flmul+1,efgtoa@l+1
  3985   000C0E  C011  F09F         	movff	?___flmul+2,efgtoa@l+2
  3986   000C12  C012  F0A0         	movff	?___flmul+3,efgtoa@l+3
  3987   000C16                     
  3988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3989   000C16  C099  F028         	movff	efgtoa@h,___flge@ff1
  3990   000C1A  C09A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3991   000C1E  C09B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3992   000C22  C09C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3993   000C26  C09D  F02C         	movff	efgtoa@l,___flge@ff2
  3994   000C2A  C09E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3995   000C2E  C09F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3996   000C32  C0A0  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3997   000C36  EC35  F015         	call	___flge	;wreg free
  3998   000C3A  B0D8               	btfsc	status,0,c
  3999   000C3C  EF22  F006         	goto	u3961
  4000   000C40  EF24  F006         	goto	u3960
  4001   000C44                     u3961:
  4002   000C44  EF2F  F006         	goto	l3486
  4003   000C48                     u3960:
  4004   000C48                     
  4005                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4006   000C48  0E00               	movlw	0
  4007   000C4A  0100               	movlb	0	; () banked
  4008   000C4C  6F9D               	movwf	efgtoa@l& (0+255),b
  4009   000C4E  0E00               	movlw	0
  4010   000C50  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4011   000C52  0E00               	movlw	0
  4012   000C54  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4013   000C56  0E00               	movlw	0
  4014   000C58  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4015                           
  4016                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  4017   000C5A  EF58  F006         	goto	l3492
  4018   000C5E                     l3486:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4021   000C5E  C099  F001         	movff	efgtoa@h,___fleq@ff1
  4022   000C62  C09A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4023   000C66  C09B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4024   000C6A  C09C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4025   000C6E  C09D  F005         	movff	efgtoa@l,___fleq@ff2
  4026   000C72  C09E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4027   000C76  C09F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4028   000C7A  C0A0  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4029   000C7E  ECEE  F016         	call	___fleq	;wreg free
  4030   000C82  A0D8               	btfss	status,0,c
  4031   000C84  EF46  F006         	goto	u3971
  4032   000C88  EF48  F006         	goto	u3970
  4033   000C8C                     u3971:
  4034   000C8C  EF58  F006         	goto	l3492
  4035   000C90                     u3970:
  4036   000C90  0100               	movlb	0	; () banked
  4037   000C92  B18B               	btfsc	efgtoa@d& (0+255),0,b
  4038   000C94  EF4E  F006         	goto	u3981
  4039   000C98  EF50  F006         	goto	u3980
  4040   000C9C                     u3981:
  4041   000C9C  EF58  F006         	goto	l3492
  4042   000CA0                     u3980:
  4043   000CA0                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4046   000CA0  0E00               	movlw	0
  4047   000CA2  6F9D               	movwf	efgtoa@l& (0+255),b
  4048   000CA4  0E00               	movlw	0
  4049   000CA6  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4050   000CA8  0E00               	movlw	0
  4051   000CAA  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4052   000CAC  0E00               	movlw	0
  4053   000CAE  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4054   000CB0                     l3492:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4057   000CB0  C0A4  F001         	movff	efgtoa@g,___fladd@b
  4058   000CB4  C0A5  F002         	movff	efgtoa@g+1,___fladd@b+1
  4059   000CB8  C0A6  F003         	movff	efgtoa@g+2,___fladd@b+2
  4060   000CBC  C0A7  F004         	movff	efgtoa@g+3,___fladd@b+3
  4061   000CC0  C09D  F005         	movff	efgtoa@l,___fladd@a
  4062   000CC4  C09E  F006         	movff	efgtoa@l+1,___fladd@a+1
  4063   000CC8  C09F  F007         	movff	efgtoa@l+2,___fladd@a+2
  4064   000CCC  C0A0  F008         	movff	efgtoa@l+3,___fladd@a+3
  4065   000CD0  ECBA  F00A         	call	___fladd	;wreg free
  4066   000CD4  C001  F099         	movff	?___fladd,efgtoa@h
  4067   000CD8  C002  F09A         	movff	?___fladd+1,efgtoa@h+1
  4068   000CDC  C003  F09B         	movff	?___fladd+2,efgtoa@h+2
  4069   000CE0  C004  F09C         	movff	?___fladd+3,efgtoa@h+3
  4070   000CE4                     
  4071                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4072   000CE4  C099  F028         	movff	efgtoa@h,___flge@ff1
  4073   000CE8  C09A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4074   000CEC  C09B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4075   000CF0  C09C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4076   000CF4  0E00               	movlw	0
  4077   000CF6  6E13               	movwf	___flmul@a^0,c
  4078   000CF8  0E00               	movlw	0
  4079   000CFA  6E14               	movwf	(___flmul@a+1)^0,c
  4080   000CFC  0E20               	movlw	32
  4081   000CFE  6E15               	movwf	(___flmul@a+2)^0,c
  4082   000D00  0E41               	movlw	65
  4083   000D02  6E16               	movwf	(___flmul@a+3)^0,c
  4084   000D04  C093  F00F         	movff	efgtoa@ou,___flmul@b
  4085   000D08  C094  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4086   000D0C  C095  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4087   000D10  C096  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4088   000D14  EC15  F00D         	call	___flmul	;wreg free
  4089   000D18  C00F  F02C         	movff	?___flmul,___flge@ff2
  4090   000D1C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  4091   000D20  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  4092   000D24  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  4093   000D28  EC35  F015         	call	___flge	;wreg free
  4094   000D2C  A0D8               	btfss	status,0,c
  4095   000D2E  EF9B  F006         	goto	u3991
  4096   000D32  EF9D  F006         	goto	u3990
  4097   000D36                     u3991:
  4098   000D36  EFC6  F006         	goto	l3504
  4099   000D3A                     u3990:
  4100   000D3A                     
  4101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  4102   000D3A  0100               	movlb	0	; () banked
  4103   000D3C  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4104   000D3E  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4105   000D40                     
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4108   000D40  C093  F00F         	movff	efgtoa@ou,___flmul@b
  4109   000D44  C094  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4110   000D48  C095  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4111   000D4C  C096  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4112   000D50  0E00               	movlw	0
  4113   000D52  6E13               	movwf	___flmul@a^0,c
  4114   000D54  0E00               	movlw	0
  4115   000D56  6E14               	movwf	(___flmul@a+1)^0,c
  4116   000D58  0E20               	movlw	32
  4117   000D5A  6E15               	movwf	(___flmul@a+2)^0,c
  4118   000D5C  0E41               	movlw	65
  4119   000D5E  6E16               	movwf	(___flmul@a+3)^0,c
  4120   000D60  EC15  F00D         	call	___flmul	;wreg free
  4121   000D64  C00F  F093         	movff	?___flmul,efgtoa@ou
  4122   000D68  C010  F094         	movff	?___flmul+1,efgtoa@ou+1
  4123   000D6C  C011  F095         	movff	?___flmul+2,efgtoa@ou+2
  4124   000D70  C012  F096         	movff	?___flmul+3,efgtoa@ou+3
  4125   000D74                     
  4126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4127   000D74  0E66               	movlw	102
  4128   000D76  0100               	movlb	0	; () banked
  4129   000D78  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4130   000D7A  A4D8               	btfss	status,2,c
  4131   000D7C  EFC2  F006         	goto	u4001
  4132   000D80  EFC4  F006         	goto	u4000
  4133   000D84                     u4001:
  4134   000D84  EFC6  F006         	goto	l3504
  4135   000D88                     u4000:
  4136   000D88                     
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  4139   000D88  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4140   000D8A  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4141   000D8C                     l3504:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4144   000D8C  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4145   000D90  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4146   000D94  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4147   000D98  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4148   000D9C                     
  4149                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4150   000D9C  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  4151   000DA0  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  4152   000DA4                     
  4153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4154   000DA4  0100               	movlb	0	; () banked
  4155   000DA6  6B88               	clrf	efgtoa@pp& (0+255),b
  4156   000DA8                     
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4159   000DA8  0E00               	movlw	0
  4160   000DAA  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  4161   000DAC  0E00               	movlw	0
  4162   000DAE  6F84               	movwf	efgtoa@t& (0+255),b
  4163   000DB0                     
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4166   000DB0  0E00               	movlw	0
  4167   000DB2  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4168   000DB4  0E00               	movlw	0
  4169   000DB6  6F97               	movwf	efgtoa@i& (0+255),b
  4170                           
  4171                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4172   000DB8  EFC3  F007         	goto	l3554
  4173   000DBC                     l3514:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4177   000DBC  C099  F028         	movff	efgtoa@h,___fldiv@b
  4178   000DC0  C09A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4179   000DC4  C09B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4180   000DC8  C09C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4181   000DCC  C0A8  F02C         	movff	efgtoa@u,___fldiv@a
  4182   000DD0  C0A9  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4183   000DD4  C0AA  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4184   000DD8  C0AB  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4185   000DDC  EC28  F00F         	call	___fldiv	;wreg free
  4186   000DE0  C028  F041         	movff	?___fldiv,floorf@x
  4187   000DE4  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4188   000DE8  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4189   000DEC  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4190   000DF0  EC13  F012         	call	_floorf	;wreg free
  4191   000DF4  C041  F09D         	movff	?_floorf,efgtoa@l
  4192   000DF8  C042  F09E         	movff	?_floorf+1,efgtoa@l+1
  4193   000DFC  C043  F09F         	movff	?_floorf+2,efgtoa@l+2
  4194   000E00  C044  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4197   000E04  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4198   000E08  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4199   000E0C  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4200   000E10  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4201   000E14  ECB2  F014         	call	___fltol	;wreg free
  4202   000E18  BE02               	btfsc	(?___fltol+1)^0,7,c
  4203   000E1A  EF1A  F007         	goto	u4010
  4204   000E1E  5002               	movf	(?___fltol+1)^0,w,c
  4205   000E20  E107               	bnz	u4011
  4206   000E22  0E0A               	movlw	10
  4207   000E24  5C01               	subwf	?___fltol^0,w,c
  4208   000E26  B0D8               	btfsc	status,0,c
  4209   000E28  EF18  F007         	goto	u4011
  4210   000E2C  EF1A  F007         	goto	u4010
  4211   000E30                     u4011:
  4212   000E30  EF2A  F007         	goto	l3518
  4213   000E34                     u4010:
  4214   000E34  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4215   000E38  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4216   000E3C  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4217   000E40  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4218   000E44  ECB2  F014         	call	___fltol	;wreg free
  4219   000E48  C001  F08B         	movff	?___fltol,efgtoa@d
  4220   000E4C  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4221   000E50  EF2F  F007         	goto	l993
  4222   000E54                     l3518:
  4223   000E54  0E00               	movlw	0
  4224   000E56  0100               	movlb	0	; () banked
  4225   000E58  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  4226   000E5A  0E09               	movlw	9
  4227   000E5C  6F8B               	movwf	efgtoa@d& (0+255),b
  4228   000E5E                     l993:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4231   000E5E  0100               	movlb	0	; () banked
  4232   000E60  5188               	movf	efgtoa@pp& (0+255),w,b
  4233   000E62  A4D8               	btfss	status,2,c
  4234   000E64  EF36  F007         	goto	u4021
  4235   000E68  EF38  F007         	goto	u4020
  4236   000E6C                     u4021:
  4237   000E6C  EF60  F007         	goto	l3538
  4238   000E70                     u4020:
  4239   000E70                     
  4240                           ; BSR set to: 0
  4241   000E70  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4242   000E72  EF3F  F007         	goto	u4030
  4243   000E76  EF3D  F007         	goto	u4031
  4244   000E7A                     u4031:
  4245   000E7A  EF60  F007         	goto	l3538
  4246   000E7E                     u4030:
  4247   000E7E                     
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4250   000E7E  0E00               	movlw	low _dbuf
  4251   000E80  25A2               	addwf	efgtoa@n& (0+255),w,b
  4252   000E82  6ED9               	movwf	fsr2l,c
  4253   000E84  0E01               	movlw	high _dbuf
  4254   000E86  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4255   000E88  6EDA               	movwf	fsr2h,c
  4256   000E8A  0E2E               	movlw	46
  4257   000E8C  6EDF               	movwf	indf2,c
  4258   000E8E                     
  4259                           ; BSR set to: 0
  4260   000E8E  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  4261   000E90  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  4262   000E92                     
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4265   000E92  0791               	decf	efgtoa@w& (0+255),f,b
  4266   000E94  A0D8               	btfss	status,0,c
  4267   000E96  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4268   000E98                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4271   000E98  0E01               	movlw	1
  4272   000E9A  6F88               	movwf	efgtoa@pp& (0+255),b
  4273   000E9C  EF60  F007         	goto	l3538
  4274   000EA0                     l3530:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4278   000EA0  0E00               	movlw	low _dbuf
  4279   000EA2  25A2               	addwf	efgtoa@n& (0+255),w,b
  4280   000EA4  6ED9               	movwf	fsr2l,c
  4281   000EA6  0E01               	movlw	high _dbuf
  4282   000EA8  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4283   000EAA  6EDA               	movwf	fsr2h,c
  4284   000EAC  0E30               	movlw	48
  4285   000EAE  6EDF               	movwf	indf2,c
  4286   000EB0                     
  4287                           ; BSR set to: 0
  4288   000EB0  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  4289   000EB2  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  4290   000EB4                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4293   000EB4  0791               	decf	efgtoa@w& (0+255),f,b
  4294   000EB6  A0D8               	btfss	status,0,c
  4295   000EB8  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4296   000EBA                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4299   000EBA  0784               	decf	efgtoa@t& (0+255),f,b
  4300   000EBC  A0D8               	btfss	status,0,c
  4301   000EBE  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  4302   000EC0                     l3538:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4306   000EC0  5184               	movf	efgtoa@t& (0+255),w,b
  4307   000EC2  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4308   000EC4  A4D8               	btfss	status,2,c
  4309   000EC6  EF67  F007         	goto	u4041
  4310   000ECA  EF69  F007         	goto	u4040
  4311   000ECE                     u4041:
  4312   000ECE  EF50  F007         	goto	l3530
  4313   000ED2                     u4040:
  4314   000ED2                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4317   000ED2  0E00               	movlw	low _dbuf
  4318   000ED4  25A2               	addwf	efgtoa@n& (0+255),w,b
  4319   000ED6  6ED9               	movwf	fsr2l,c
  4320   000ED8  0E01               	movlw	high _dbuf
  4321   000EDA  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4322   000EDC  6EDA               	movwf	fsr2h,c
  4323   000EDE  518B               	movf	efgtoa@d& (0+255),w,b
  4324   000EE0  0F30               	addlw	48
  4325   000EE2  6EDF               	movwf	indf2,c
  4326   000EE4                     
  4327                           ; BSR set to: 0
  4328   000EE4  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  4329   000EE6  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  4330   000EE8                     
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4333   000EE8  0791               	decf	efgtoa@w& (0+255),f,b
  4334   000EEA  A0D8               	btfss	status,0,c
  4335   000EEC  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4336   000EEE                     
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4339   000EEE  C099  F028         	movff	efgtoa@h,___flsub@b
  4340   000EF2  C09A  F029         	movff	efgtoa@h+1,___flsub@b+1
  4341   000EF6  C09B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4342   000EFA  C09C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4343   000EFE  C09D  F013         	movff	efgtoa@l,___flmul@a
  4344   000F02  C09E  F014         	movff	efgtoa@l+1,___flmul@a+1
  4345   000F06  C09F  F015         	movff	efgtoa@l+2,___flmul@a+2
  4346   000F0A  C0A0  F016         	movff	efgtoa@l+3,___flmul@a+3
  4347   000F0E  C0A8  F00F         	movff	efgtoa@u,___flmul@b
  4348   000F12  C0A9  F010         	movff	efgtoa@u+1,___flmul@b+1
  4349   000F16  C0AA  F011         	movff	efgtoa@u+2,___flmul@b+2
  4350   000F1A  C0AB  F012         	movff	efgtoa@u+3,___flmul@b+3
  4351   000F1E  EC15  F00D         	call	___flmul	;wreg free
  4352   000F22  C00F  F02C         	movff	?___flmul,___flsub@a
  4353   000F26  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4354   000F2A  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4355   000F2E  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4356   000F32  EC0D  F01A         	call	___flsub	;wreg free
  4357   000F36  C028  F099         	movff	?___flsub,efgtoa@h
  4358   000F3A  C029  F09A         	movff	?___flsub+1,efgtoa@h+1
  4359   000F3E  C02A  F09B         	movff	?___flsub+2,efgtoa@h+2
  4360   000F42  C02B  F09C         	movff	?___flsub+3,efgtoa@h+3
  4361   000F46                     
  4362                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4363   000F46  C0A8  F028         	movff	efgtoa@u,___fldiv@b
  4364   000F4A  C0A9  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4365   000F4E  C0AA  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4366   000F52  C0AB  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4367   000F56  0E00               	movlw	0
  4368   000F58  6E2C               	movwf	___fldiv@a^0,c
  4369   000F5A  0E00               	movlw	0
  4370   000F5C  6E2D               	movwf	(___fldiv@a+1)^0,c
  4371   000F5E  0E20               	movlw	32
  4372   000F60  6E2E               	movwf	(___fldiv@a+2)^0,c
  4373   000F62  0E41               	movlw	65
  4374   000F64  6E2F               	movwf	(___fldiv@a+3)^0,c
  4375   000F66  EC28  F00F         	call	___fldiv	;wreg free
  4376   000F6A  C028  F0A8         	movff	?___fldiv,efgtoa@u
  4377   000F6E  C029  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4378   000F72  C02A  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4379   000F76  C02B  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4380   000F7A                     
  4381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4382   000F7A  0100               	movlb	0	; () banked
  4383   000F7C  0780               	decf	efgtoa@ne& (0+255),f,b
  4384   000F7E  A0D8               	btfss	status,0,c
  4385   000F80  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  4386   000F82                     
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4389   000F82  4B97               	infsnz	efgtoa@i& (0+255),f,b
  4390   000F84  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  4391   000F86                     l3554:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4395   000F86  518D               	movf	efgtoa@m& (0+255),w,b
  4396   000F88  5D97               	subwf	efgtoa@i& (0+255),w,b
  4397   000F8A  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4398   000F8C  0A80               	xorlw	128
  4399   000F8E  6E5B               	movwf	??_efgtoa^0,c
  4400   000F90  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  4401   000F92  0A80               	xorlw	128
  4402   000F94  585B               	subwfb	??_efgtoa^0,w,c
  4403   000F96  B0D8               	btfsc	status,0,c
  4404   000F98  EFD0  F007         	goto	u4051
  4405   000F9C  EFD2  F007         	goto	u4050
  4406   000FA0                     u4051:
  4407   000FA0  EFE0  F007         	goto	l3558
  4408   000FA4                     u4050:
  4409   000FA4                     
  4410                           ; BSR set to: 0
  4411   000FA4  BFA3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4412   000FA6  EFDE  F007         	goto	u4061
  4413   000FAA  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  4414   000FAC  E109               	bnz	u4060
  4415   000FAE  0E4B               	movlw	75
  4416   000FB0  5DA2               	subwf	efgtoa@n& (0+255),w,b
  4417   000FB2  A0D8               	btfss	status,0,c
  4418   000FB4  EFDE  F007         	goto	u4061
  4419   000FB8  EFE0  F007         	goto	u4060
  4420   000FBC                     u4061:
  4421   000FBC  EFDE  F006         	goto	l3514
  4422   000FC0                     u4060:
  4423   000FC0                     l3558:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4427   000FC0  0E00               	movlw	0
  4428   000FC2  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4429   000FC4  0E4F               	movlw	79
  4430   000FC6  6F97               	movwf	efgtoa@i& (0+255),b
  4431   000FC8                     
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4434   000FC8  0E00               	movlw	low _dbuf
  4435   000FCA  2597               	addwf	efgtoa@i& (0+255),w,b
  4436   000FCC  6ED9               	movwf	fsr2l,c
  4437   000FCE  0E01               	movlw	high _dbuf
  4438   000FD0  2198               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4439   000FD2  6EDA               	movwf	fsr2h,c
  4440   000FD4  6ADF               	clrf	indf2,c
  4441   000FD6                     
  4442                           ; BSR set to: 0
  4443                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4444   000FD6  0E00               	movlw	low _dbuf
  4445   000FD8  6E5B               	movwf	??_efgtoa^0,c
  4446   000FDA  0E01               	movlw	high _dbuf
  4447   000FDC  6E5C               	movwf	(??_efgtoa+1)^0,c
  4448   000FDE  51A2               	movf	efgtoa@n& (0+255),w,b
  4449   000FE0  5E5B               	subwf	??_efgtoa^0,f,c
  4450   000FE2  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  4451   000FE4  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  4452   000FE6  5197               	movf	efgtoa@i& (0+255),w,b
  4453   000FE8  245B               	addwf	??_efgtoa^0,w,c
  4454   000FEA  6E01               	movwf	memcpy@d1^0,c
  4455   000FEC  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4456   000FEE  205C               	addwfc	(??_efgtoa+1)^0,w,c
  4457   000FF0  6E02               	movwf	(memcpy@d1+1)^0,c
  4458   000FF2  0E00               	movlw	low _dbuf
  4459   000FF4  6E03               	movwf	memcpy@s1^0,c
  4460   000FF6  0E01               	movlw	high _dbuf
  4461   000FF8  6E04               	movwf	(memcpy@s1+1)^0,c
  4462   000FFA  C0A2  F005         	movff	efgtoa@n,memcpy@n
  4463   000FFE  C0A3  F006         	movff	efgtoa@n+1,memcpy@n+1
  4464   001002  ECC0  F019         	call	_memcpy	;wreg free
  4465   001006                     
  4466                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4467   001006  0100               	movlb	0	; () banked
  4468   001008  51A2               	movf	efgtoa@n& (0+255),w,b
  4469   00100A  5D97               	subwf	efgtoa@i& (0+255),w,b
  4470   00100C  6FA2               	movwf	efgtoa@n& (0+255),b
  4471   00100E  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  4472   001010  5998               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4473   001012  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  4474   001014                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4477   001014  51A1               	movf	efgtoa@sign& (0+255),w,b
  4478   001016  A4D8               	btfss	status,2,c
  4479   001018  EF10  F008         	goto	u4071
  4480   00101C  EF13  F008         	goto	u4070
  4481   001020                     u4071:
  4482   001020  0E01               	movlw	1
  4483   001022  EF14  F008         	goto	u4080
  4484   001026                     u4070:
  4485   001026  0E00               	movlw	0
  4486   001028                     u4080:
  4487   001028  6F97               	movwf	efgtoa@i& (0+255),b
  4488   00102A  6B98               	clrf	(efgtoa@i+1)& (0+255),b
  4489   00102C                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4492   00102C  51A1               	movf	efgtoa@sign& (0+255),w,b
  4493   00102E  B4D8               	btfsc	status,2,c
  4494   001030  EF1C  F008         	goto	u4091
  4495   001034  EF1E  F008         	goto	u4090
  4496   001038                     u4091:
  4497   001038  EF29  F008         	goto	l3572
  4498   00103C                     u4090:
  4499   00103C                     
  4500                           ; BSR set to: 0
  4501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4502   00103C  07A2               	decf	efgtoa@n& (0+255),f,b
  4503   00103E  A0D8               	btfss	status,0,c
  4504   001040  07A3               	decf	(efgtoa@n+1)& (0+255),f,b
  4505   001042  0E00               	movlw	low _dbuf
  4506   001044  25A2               	addwf	efgtoa@n& (0+255),w,b
  4507   001046  6ED9               	movwf	fsr2l,c
  4508   001048  0E01               	movlw	high _dbuf
  4509   00104A  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4510   00104C  6EDA               	movwf	fsr2h,c
  4511   00104E  C0A1  FFDF         	movff	efgtoa@sign,indf2
  4512   001052                     l3572:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4516   001052  5197               	movf	efgtoa@i& (0+255),w,b
  4517   001054  5F91               	subwf	efgtoa@w& (0+255),f,b
  4518   001056  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4519   001058  5B92               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4520   00105A                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4523   00105A  C055  F00F         	movff	efgtoa@fp,pad@fp
  4524   00105E  0E00               	movlw	low _dbuf
  4525   001060  25A2               	addwf	efgtoa@n& (0+255),w,b
  4526   001062  6E10               	movwf	pad@buf^0,c
  4527   001064  0E01               	movlw	high _dbuf
  4528   001066  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4529   001068  6E11               	movwf	(pad@buf+1)^0,c
  4530   00106A  C091  F012         	movff	efgtoa@w,pad@p
  4531   00106E  C092  F013         	movff	efgtoa@w+1,pad@p+1
  4532   001072  ECB4  F018         	call	_pad	;wreg free
  4533   001076                     l960:
  4534   001076  0012               	return		;funcret
  4535   001078                     __end_of_efgtoa:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _strcpy *****************
  4539 ;; Defined at:
  4540 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4543 ;;		 -> dbuf(80), 
  4544 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4545 ;;		 -> STR_14(4), STR_11(4), 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  d               2    4[COMRAM] PTR unsigned char 
  4548 ;;		 -> dbuf(80), 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    0[COMRAM] PTR unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         3       0       0       0       0       0       0
  4559 ;;      Locals:         2       0       0       0       0       0       0
  4560 ;;      Temps:          1       0       0       0       0       0       0
  4561 ;;      Totals:         6       0       0       0       0       0       0
  4562 ;;Total ram usage:        6 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_efgtoa
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text6
  4573   0034E0                     __ptext6:
  4574                           	callstack 0
  4575   0034E0                     _strcpy:
  4576                           	callstack 25
  4577   0034E0  C001  F005         	movff	strcpy@dest,strcpy@d
  4578   0034E4  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4579   0034E8                     l3264:
  4580   0034E8  2A03               	incf	strcpy@src^0,f,c
  4581   0034EA  0403               	decf	strcpy@src^0,w,c
  4582   0034EC  6E04               	movwf	??_strcpy^0,c
  4583   0034EE  C004  FFF6         	movff	??_strcpy,tblptrl
  4584   0034F2                     	if	1	;There is more than 1 active tblptr byte
  4585   0034F2  0E06               	movlw	high __smallconst
  4586   0034F4  6EF7               	movwf	tblptrh,c
  4587   0034F6                     	endif
  4588   0034F6                     	if	0	;tblptru may be non-zero
  4589   0034F6                     	endif
  4590   0034F6                     	if	0	;tblptru may be non-zero
  4591   0034F6                     	endif
  4592   0034F6  C005  FFD9         	movff	strcpy@d,fsr2l
  4593   0034FA  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4594   0034FE  4A05               	infsnz	strcpy@d^0,f,c
  4595   003500  2A06               	incf	(strcpy@d+1)^0,f,c
  4596   003502  0008               	tblrd		*
  4597   003504  CFF5 FFDF          	movff	tablat,indf2
  4598   003508  50DF               	movf	indf2,w,c
  4599   00350A  A4D8               	btfss	status,2,c
  4600   00350C  EF8A  F01A         	goto	u3561
  4601   003510  EF8C  F01A         	goto	u3560
  4602   003514                     u3561:
  4603   003514  EF74  F01A         	goto	l3264
  4604   003518                     u3560:
  4605   003518  0012               	return		;funcret
  4606   00351A                     __end_of_strcpy:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _memcpy *****************
  4610 ;; Defined at:
  4611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  d1              2    0[COMRAM] PTR void 
  4614 ;;		 -> dbuf(80), 
  4615 ;;  s1              2    2[COMRAM] PTR const void 
  4616 ;;		 -> dbuf(80), 
  4617 ;;  n               2    4[COMRAM] unsigned int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4620 ;;		 -> dbuf(80), 
  4621 ;;  d               2    6[COMRAM] PTR unsigned char 
  4622 ;;		 -> dbuf(80), 
  4623 ;;  tmp             1   10[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  2    0[COMRAM] PTR void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4633 ;;      Params:         6       0       0       0       0       0       0
  4634 ;;      Locals:         5       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0
  4636 ;;      Totals:        11       0       0       0       0       0       0
  4637 ;;Total ram usage:       11 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 1
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_efgtoa
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text7
  4648   003380                     __ptext7:
  4649                           	callstack 0
  4650   003380                     _memcpy:
  4651                           	callstack 25
  4652   003380  C003  F009         	movff	memcpy@s1,memcpy@s
  4653   003384  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4654   003388  C001  F007         	movff	memcpy@d1,memcpy@d
  4655   00338C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4656   003390  EFDA  F019         	goto	l3312
  4657   003394                     l3304:
  4658   003394  C009  FFD9         	movff	memcpy@s,fsr2l
  4659   003398  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4660   00339C  50DF               	movf	indf2,w,c
  4661   00339E  6E0B               	movwf	memcpy@tmp^0,c
  4662   0033A0  4A09               	infsnz	memcpy@s^0,f,c
  4663   0033A2  2A0A               	incf	(memcpy@s+1)^0,f,c
  4664   0033A4  C007  FFD9         	movff	memcpy@d,fsr2l
  4665   0033A8  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4666   0033AC  C00B  FFDF         	movff	memcpy@tmp,indf2
  4667   0033B0  4A07               	infsnz	memcpy@d^0,f,c
  4668   0033B2  2A08               	incf	(memcpy@d+1)^0,f,c
  4669   0033B4                     l3312:
  4670   0033B4  0605               	decf	memcpy@n^0,f,c
  4671   0033B6  A0D8               	btfss	status,0,c
  4672   0033B8  0606               	decf	(memcpy@n+1)^0,f,c
  4673   0033BA  2805               	incf	memcpy@n^0,w,c
  4674   0033BC  E106               	bnz	u3681
  4675   0033BE  2806               	incf	(memcpy@n+1)^0,w,c
  4676   0033C0  A4D8               	btfss	status,2,c
  4677   0033C2  EFE5  F019         	goto	u3681
  4678   0033C6  EFE7  F019         	goto	u3680
  4679   0033CA                     u3681:
  4680   0033CA  EFCA  F019         	goto	l3304
  4681   0033CE                     u3680:
  4682   0033CE  0012               	return		;funcret
  4683   0033D0                     __end_of_memcpy:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _labs *****************
  4687 ;; Defined at:
  4688 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  a               4    0[COMRAM] long 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  4    0[COMRAM] long 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4702 ;;      Params:         4       0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0
  4704 ;;      Temps:          4       0       0       0       0       0       0
  4705 ;;      Totals:         8       0       0       0       0       0       0
  4706 ;;Total ram usage:        8 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_efgtoa
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text8
  4717   003284                     __ptext8:
  4718                           	callstack 0
  4719   003284                     _labs:
  4720                           	callstack 25
  4721   003284  BE04               	btfsc	(labs@a+3)^0,7,c
  4722   003286  EF47  F019         	goto	u3571
  4723   00328A  EF49  F019         	goto	u3570
  4724   00328E                     u3571:
  4725   00328E  EF53  F019         	goto	l3270
  4726   003292                     u3570:
  4727   003292  C001  F001         	movff	labs@a,?_labs
  4728   003296  C002  F002         	movff	labs@a+1,?_labs+1
  4729   00329A  C003  F003         	movff	labs@a+2,?_labs+2
  4730   00329E  C004  F004         	movff	labs@a+3,?_labs+3
  4731   0032A2  EF6C  F019         	goto	l1077
  4732   0032A6                     l3270:
  4733   0032A6  C001  F005         	movff	labs@a,??_labs
  4734   0032AA  C002  F006         	movff	labs@a+1,??_labs+1
  4735   0032AE  C003  F007         	movff	labs@a+2,??_labs+2
  4736   0032B2  C004  F008         	movff	labs@a+3,??_labs+3
  4737   0032B6  1E05               	comf	??_labs^0,f,c
  4738   0032B8  1E06               	comf	(??_labs+1)^0,f,c
  4739   0032BA  1E07               	comf	(??_labs+2)^0,f,c
  4740   0032BC  1E08               	comf	(??_labs+3)^0,f,c
  4741   0032BE  2A05               	incf	??_labs^0,f,c
  4742   0032C0  0E00               	movlw	0
  4743   0032C2  2206               	addwfc	(??_labs+1)^0,f,c
  4744   0032C4  2207               	addwfc	(??_labs+2)^0,f,c
  4745   0032C6  2208               	addwfc	(??_labs+3)^0,f,c
  4746   0032C8  C005  F001         	movff	??_labs,?_labs
  4747   0032CC  C006  F002         	movff	??_labs+1,?_labs+1
  4748   0032D0  C007  F003         	movff	??_labs+2,?_labs+2
  4749   0032D4  C008  F004         	movff	??_labs+3,?_labs+3
  4750   0032D8                     l1077:
  4751   0032D8  0012               	return		;funcret
  4752   0032DA                     __end_of_labs:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function _floorf *****************
  4756 ;; Defined at:
  4757 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  x               4   64[COMRAM] float 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  u               4   80[COMRAM] struct .
  4762 ;;  m               4   74[COMRAM] unsigned long 
  4763 ;;  e               2   78[COMRAM] int 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  4   64[COMRAM] float 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4773 ;;      Params:         4       0       0       0       0       0       0
  4774 ;;      Locals:        10       0       0       0       0       0       0
  4775 ;;      Temps:          6       0       0       0       0       0       0
  4776 ;;      Totals:        20       0       0       0       0       0       0
  4777 ;;Total ram usage:       20 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 1
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_efgtoa
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text9
  4788   002426                     __ptext9:
  4789                           	callstack 0
  4790   002426                     _floorf:
  4791                           	callstack 25
  4792   002426  C0CE  F051         	movff	floorf@F521,floorf@u
  4793   00242A  C0CF  F052         	movff	floorf@F521+1,floorf@u+1
  4794   00242E  C0D0  F053         	movff	floorf@F521+2,floorf@u+2
  4795   002432  C0D1  F054         	movff	floorf@F521+3,floorf@u+3
  4796   002436  C041  F051         	movff	floorf@x,floorf@u
  4797   00243A  C042  F052         	movff	floorf@x+1,floorf@u+1
  4798   00243E  C043  F053         	movff	floorf@x+2,floorf@u+2
  4799   002442  C044  F054         	movff	floorf@x+3,floorf@u+3
  4800   002446  0E81               	movlw	129
  4801   002448  6E45               	movwf	??_floorf^0,c
  4802   00244A  0EFF               	movlw	255
  4803   00244C  6E46               	movwf	(??_floorf+1)^0,c
  4804   00244E  C051  F047         	movff	floorf@u,??_floorf+2
  4805   002452  C052  F048         	movff	floorf@u+1,??_floorf+3
  4806   002456  C053  F049         	movff	floorf@u+2,??_floorf+4
  4807   00245A  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4808   00245E  0E18               	movlw	24
  4809   002460  EF37  F012         	goto	u3580
  4810   002464                     u3585:
  4811   002464  90D8               	bcf	status,0,c
  4812   002466  324A               	rrcf	(??_floorf+5)^0,f,c
  4813   002468  3249               	rrcf	(??_floorf+4)^0,f,c
  4814   00246A  3248               	rrcf	(??_floorf+3)^0,f,c
  4815   00246C  3247               	rrcf	(??_floorf+2)^0,f,c
  4816   00246E                     u3580:
  4817   00246E  2EE8               	decfsz	wreg,f,c
  4818   002470  EF32  F012         	goto	u3585
  4819   002474  5047               	movf	(??_floorf+2)^0,w,c
  4820   002476  2445               	addwf	??_floorf^0,w,c
  4821   002478  6E4F               	movwf	floorf@e^0,c
  4822   00247A  0E00               	movlw	0
  4823   00247C  2046               	addwfc	(??_floorf+1)^0,w,c
  4824   00247E  6E50               	movwf	(floorf@e+1)^0,c
  4825   002480  BE50               	btfsc	(floorf@e+1)^0,7,c
  4826   002482  EF4C  F012         	goto	u3591
  4827   002486  5050               	movf	(floorf@e+1)^0,w,c
  4828   002488  E109               	bnz	u3590
  4829   00248A  0E17               	movlw	23
  4830   00248C  5C4F               	subwf	floorf@e^0,w,c
  4831   00248E  A0D8               	btfss	status,0,c
  4832   002490  EF4C  F012         	goto	u3591
  4833   002494  EF4E  F012         	goto	u3590
  4834   002498                     u3591:
  4835   002498  EF58  F012         	goto	l3280
  4836   00249C                     u3590:
  4837   00249C                     l3278:
  4838   00249C  C041  F041         	movff	floorf@x,?_floorf
  4839   0024A0  C042  F042         	movff	floorf@x+1,?_floorf+1
  4840   0024A4  C043  F043         	movff	floorf@x+2,?_floorf+2
  4841   0024A8  C044  F044         	movff	floorf@x+3,?_floorf+3
  4842   0024AC  EF1B  F013         	goto	l1063
  4843   0024B0                     l3280:
  4844   0024B0  BE50               	btfsc	(floorf@e+1)^0,7,c
  4845   0024B2  EF5D  F012         	goto	u3601
  4846   0024B6  EF5F  F012         	goto	u3600
  4847   0024BA                     u3601:
  4848   0024BA  EFCF  F012         	goto	l3290
  4849   0024BE                     u3600:
  4850   0024BE  C04F  F045         	movff	floorf@e,??_floorf
  4851   0024C2  0EFF               	movlw	255
  4852   0024C4  6E46               	movwf	(??_floorf+1)^0,c
  4853   0024C6  0EFF               	movlw	255
  4854   0024C8  6E47               	movwf	(??_floorf+2)^0,c
  4855   0024CA  0E7F               	movlw	127
  4856   0024CC  6E48               	movwf	(??_floorf+3)^0,c
  4857   0024CE  0E00               	movlw	0
  4858   0024D0  6E49               	movwf	(??_floorf+4)^0,c
  4859   0024D2                     u3615:
  4860   0024D2  6645               	tstfsz	??_floorf^0,c
  4861   0024D4  EF6E  F012         	goto	u3616
  4862   0024D8  EF76  F012         	goto	u3617
  4863   0024DC                     u3616:
  4864   0024DC  3449               	rlcf	(??_floorf+4)^0,w,c
  4865   0024DE  3249               	rrcf	(??_floorf+4)^0,f,c
  4866   0024E0  3248               	rrcf	(??_floorf+3)^0,f,c
  4867   0024E2  3247               	rrcf	(??_floorf+2)^0,f,c
  4868   0024E4  3246               	rrcf	(??_floorf+1)^0,f,c
  4869   0024E6  2E45               	decfsz	??_floorf^0,f,c
  4870   0024E8  EF69  F012         	goto	u3615
  4871   0024EC                     u3617:
  4872   0024EC  C046  F04B         	movff	??_floorf+1,floorf@m
  4873   0024F0  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4874   0024F4  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4875   0024F8  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4876   0024FC  504B               	movf	floorf@m^0,w,c
  4877   0024FE  1451               	andwf	floorf@u^0,w,c
  4878   002500  6E45               	movwf	??_floorf^0,c
  4879   002502  504C               	movf	(floorf@m+1)^0,w,c
  4880   002504  1452               	andwf	(floorf@u+1)^0,w,c
  4881   002506  6E46               	movwf	(??_floorf+1)^0,c
  4882   002508  504D               	movf	(floorf@m+2)^0,w,c
  4883   00250A  1453               	andwf	(floorf@u+2)^0,w,c
  4884   00250C  6E47               	movwf	(??_floorf+2)^0,c
  4885   00250E  504E               	movf	(floorf@m+3)^0,w,c
  4886   002510  1454               	andwf	(floorf@u+3)^0,w,c
  4887   002512  6E48               	movwf	(??_floorf+3)^0,c
  4888   002514  5045               	movf	??_floorf^0,w,c
  4889   002516  1046               	iorwf	(??_floorf+1)^0,w,c
  4890   002518  1047               	iorwf	(??_floorf+2)^0,w,c
  4891   00251A  1048               	iorwf	(??_floorf+3)^0,w,c
  4892   00251C  A4D8               	btfss	status,2,c
  4893   00251E  EF93  F012         	goto	u3621
  4894   002522  EF95  F012         	goto	u3620
  4895   002526                     u3621:
  4896   002526  EF97  F012         	goto	l3286
  4897   00252A                     u3620:
  4898   00252A  EF4E  F012         	goto	l3278
  4899   00252E                     l3286:
  4900   00252E  C051  F045         	movff	floorf@u,??_floorf
  4901   002532  C052  F046         	movff	floorf@u+1,??_floorf+1
  4902   002536  C053  F047         	movff	floorf@u+2,??_floorf+2
  4903   00253A  C054  F048         	movff	floorf@u+3,??_floorf+3
  4904   00253E  0E20               	movlw	32
  4905   002540  EFA7  F012         	goto	u3630
  4906   002544                     u3635:
  4907   002544  90D8               	bcf	status,0,c
  4908   002546  3248               	rrcf	(??_floorf+3)^0,f,c
  4909   002548  3247               	rrcf	(??_floorf+2)^0,f,c
  4910   00254A  3246               	rrcf	(??_floorf+1)^0,f,c
  4911   00254C  3245               	rrcf	??_floorf^0,f,c
  4912   00254E                     u3630:
  4913   00254E  2EE8               	decfsz	wreg,f,c
  4914   002550  EFA2  F012         	goto	u3635
  4915   002554  5045               	movf	??_floorf^0,w,c
  4916   002556  1046               	iorwf	(??_floorf+1)^0,w,c
  4917   002558  1047               	iorwf	(??_floorf+2)^0,w,c
  4918   00255A  1048               	iorwf	(??_floorf+3)^0,w,c
  4919   00255C  B4D8               	btfsc	status,2,c
  4920   00255E  EFB3  F012         	goto	u3641
  4921   002562  EFB5  F012         	goto	u3640
  4922   002566                     u3641:
  4923   002566  EFBD  F012         	goto	l1066
  4924   00256A                     u3640:
  4925   00256A  504B               	movf	floorf@m^0,w,c
  4926   00256C  2651               	addwf	floorf@u^0,f,c
  4927   00256E  504C               	movf	(floorf@m+1)^0,w,c
  4928   002570  2252               	addwfc	(floorf@u+1)^0,f,c
  4929   002572  504D               	movf	(floorf@m+2)^0,w,c
  4930   002574  2253               	addwfc	(floorf@u+2)^0,f,c
  4931   002576  504E               	movf	(floorf@m+3)^0,w,c
  4932   002578  2254               	addwfc	(floorf@u+3)^0,f,c
  4933   00257A                     l1066:
  4934   00257A  1C4B               	comf	floorf@m^0,w,c
  4935   00257C  6E45               	movwf	??_floorf^0,c
  4936   00257E  1C4C               	comf	(floorf@m+1)^0,w,c
  4937   002580  6E46               	movwf	(??_floorf+1)^0,c
  4938   002582  1C4D               	comf	(floorf@m+2)^0,w,c
  4939   002584  6E47               	movwf	(??_floorf+2)^0,c
  4940   002586  1C4E               	comf	(floorf@m+3)^0,w,c
  4941   002588  6E48               	movwf	(??_floorf+3)^0,c
  4942   00258A  5045               	movf	??_floorf^0,w,c
  4943   00258C  1651               	andwf	floorf@u^0,f,c
  4944   00258E  5046               	movf	(??_floorf+1)^0,w,c
  4945   002590  1652               	andwf	(floorf@u+1)^0,f,c
  4946   002592  5047               	movf	(??_floorf+2)^0,w,c
  4947   002594  1653               	andwf	(floorf@u+2)^0,f,c
  4948   002596  5048               	movf	(??_floorf+3)^0,w,c
  4949   002598  1654               	andwf	(floorf@u+3)^0,f,c
  4950   00259A  EF13  F013         	goto	l3298
  4951   00259E                     l3290:
  4952   00259E  C051  F045         	movff	floorf@u,??_floorf
  4953   0025A2  C052  F046         	movff	floorf@u+1,??_floorf+1
  4954   0025A6  C053  F047         	movff	floorf@u+2,??_floorf+2
  4955   0025AA  C054  F048         	movff	floorf@u+3,??_floorf+3
  4956   0025AE  0E20               	movlw	32
  4957   0025B0  EFDF  F012         	goto	u3650
  4958   0025B4                     u3655:
  4959   0025B4  90D8               	bcf	status,0,c
  4960   0025B6  3248               	rrcf	(??_floorf+3)^0,f,c
  4961   0025B8  3247               	rrcf	(??_floorf+2)^0,f,c
  4962   0025BA  3246               	rrcf	(??_floorf+1)^0,f,c
  4963   0025BC  3245               	rrcf	??_floorf^0,f,c
  4964   0025BE                     u3650:
  4965   0025BE  2EE8               	decfsz	wreg,f,c
  4966   0025C0  EFDA  F012         	goto	u3655
  4967   0025C4  5045               	movf	??_floorf^0,w,c
  4968   0025C6  1046               	iorwf	(??_floorf+1)^0,w,c
  4969   0025C8  1047               	iorwf	(??_floorf+2)^0,w,c
  4970   0025CA  1048               	iorwf	(??_floorf+3)^0,w,c
  4971   0025CC  A4D8               	btfss	status,2,c
  4972   0025CE  EFEB  F012         	goto	u3661
  4973   0025D2  EFED  F012         	goto	u3660
  4974   0025D6                     u3661:
  4975   0025D6  EFF7  F012         	goto	l3294
  4976   0025DA                     u3660:
  4977   0025DA  0E00               	movlw	0
  4978   0025DC  6E51               	movwf	floorf@u^0,c
  4979   0025DE  0E00               	movlw	0
  4980   0025E0  6E52               	movwf	(floorf@u+1)^0,c
  4981   0025E2  0E00               	movlw	0
  4982   0025E4  6E53               	movwf	(floorf@u+2)^0,c
  4983   0025E6  0E00               	movlw	0
  4984   0025E8  6E54               	movwf	(floorf@u+3)^0,c
  4985   0025EA  EF13  F013         	goto	l3298
  4986   0025EE                     l3294:
  4987   0025EE  90D8               	bcf	status,0,c
  4988   0025F0  3451               	rlcf	floorf@u^0,w,c
  4989   0025F2  6E45               	movwf	??_floorf^0,c
  4990   0025F4  3452               	rlcf	(floorf@u+1)^0,w,c
  4991   0025F6  6E46               	movwf	(??_floorf+1)^0,c
  4992   0025F8  3453               	rlcf	(floorf@u+2)^0,w,c
  4993   0025FA  6E47               	movwf	(??_floorf+2)^0,c
  4994   0025FC  3454               	rlcf	(floorf@u+3)^0,w,c
  4995   0025FE  6E48               	movwf	(??_floorf+3)^0,c
  4996   002600  5045               	movf	??_floorf^0,w,c
  4997   002602  1046               	iorwf	(??_floorf+1)^0,w,c
  4998   002604  1047               	iorwf	(??_floorf+2)^0,w,c
  4999   002606  1048               	iorwf	(??_floorf+3)^0,w,c
  5000   002608  B4D8               	btfsc	status,2,c
  5001   00260A  EF09  F013         	goto	u3671
  5002   00260E  EF0B  F013         	goto	u3670
  5003   002612                     u3671:
  5004   002612  EF13  F013         	goto	l3298
  5005   002616                     u3670:
  5006   002616  0E00               	movlw	0
  5007   002618  6E51               	movwf	floorf@u^0,c
  5008   00261A  0E00               	movlw	0
  5009   00261C  6E52               	movwf	(floorf@u+1)^0,c
  5010   00261E  0E80               	movlw	128
  5011   002620  6E53               	movwf	(floorf@u+2)^0,c
  5012   002622  0EBF               	movlw	191
  5013   002624  6E54               	movwf	(floorf@u+3)^0,c
  5014   002626                     l3298:
  5015   002626  C051  F041         	movff	floorf@u,?_floorf
  5016   00262A  C052  F042         	movff	floorf@u+1,?_floorf+1
  5017   00262E  C053  F043         	movff	floorf@u+2,?_floorf+2
  5018   002632  C054  F044         	movff	floorf@u+3,?_floorf+3
  5019   002636                     l1063:
  5020   002636  0012               	return		;funcret
  5021   002638                     __end_of_floorf:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function ___fpclassifyf *****************
  5025 ;; Defined at:
  5026 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  x               4    0[COMRAM] float 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  u               4   10[COMRAM] struct .
  5031 ;;  e               2    8[COMRAM] int 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  2    0[COMRAM] int 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5041 ;;      Params:         4       0       0       0       0       0       0
  5042 ;;      Locals:         6       0       0       0       0       0       0
  5043 ;;      Temps:          4       0       0       0       0       0       0
  5044 ;;      Totals:        14       0       0       0       0       0       0
  5045 ;;Total ram usage:       14 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_efgtoa
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text10
  5056   002B6E                     __ptext10:
  5057                           	callstack 0
  5058   002B6E                     ___fpclassifyf:
  5059                           	callstack 25
  5060   002B6E  C076  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5061   002B72  C077  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5062   002B76  C078  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5063   002B7A  C079  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5064   002B7E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5065   002B82  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5066   002B86  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5067   002B8A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5068   002B8E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5069   002B92  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5070   002B96  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5071   002B9A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5072   002B9E  0E18               	movlw	24
  5073   002BA0  EFD7  F015         	goto	u3490
  5074   002BA4                     u3495:
  5075   002BA4  90D8               	bcf	status,0,c
  5076   002BA6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5077   002BA8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5078   002BAA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5079   002BAC  3205               	rrcf	??___fpclassifyf^0,f,c
  5080   002BAE                     u3490:
  5081   002BAE  2EE8               	decfsz	wreg,f,c
  5082   002BB0  EFD2  F015         	goto	u3495
  5083   002BB4  5005               	movf	??___fpclassifyf^0,w,c
  5084   002BB6  6E09               	movwf	___fpclassifyf@e^0,c
  5085   002BB8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5086   002BBA  5009               	movf	___fpclassifyf@e^0,w,c
  5087   002BBC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5088   002BBE  A4D8               	btfss	status,2,c
  5089   002BC0  EFE4  F015         	goto	u3501
  5090   002BC4  EFE6  F015         	goto	u3500
  5091   002BC8                     u3501:
  5092   002BC8  EF06  F016         	goto	l3252
  5093   002BCC                     u3500:
  5094   002BCC  90D8               	bcf	status,0,c
  5095   002BCE  340B               	rlcf	___fpclassifyf@u^0,w,c
  5096   002BD0  6E05               	movwf	??___fpclassifyf^0,c
  5097   002BD2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5098   002BD4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5099   002BD6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5100   002BD8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5101   002BDA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5102   002BDC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5103   002BDE  5005               	movf	??___fpclassifyf^0,w,c
  5104   002BE0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5105   002BE2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5106   002BE4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5107   002BE6  A4D8               	btfss	status,2,c
  5108   002BE8  EFF8  F015         	goto	u3511
  5109   002BEC  EFFA  F015         	goto	u3510
  5110   002BF0                     u3511:
  5111   002BF0  EF00  F016         	goto	l3248
  5112   002BF4                     u3510:
  5113   002BF4  0E00               	movlw	0
  5114   002BF6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5115   002BF8  0E02               	movlw	2
  5116   002BFA  6E01               	movwf	?___fpclassifyf^0,c
  5117   002BFC  EF35  F016         	goto	l1049
  5118   002C00                     l3248:
  5119   002C00  0E00               	movlw	0
  5120   002C02  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5121   002C04  0E03               	movlw	3
  5122   002C06  6E01               	movwf	?___fpclassifyf^0,c
  5123   002C08  EF35  F016         	goto	l1049
  5124   002C0C                     l3252:
  5125   002C0C  2809               	incf	___fpclassifyf@e^0,w,c
  5126   002C0E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5127   002C10  A4D8               	btfss	status,2,c
  5128   002C12  EF0D  F016         	goto	u3521
  5129   002C16  EF0F  F016         	goto	u3520
  5130   002C1A                     u3521:
  5131   002C1A  EF31  F016         	goto	l3258
  5132   002C1E                     u3520:
  5133   002C1E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5134   002C22  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5135   002C26  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5136   002C2A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5137   002C2E  0E09               	movlw	9
  5138   002C30                     u3535:
  5139   002C30  90D8               	bcf	status,0,c
  5140   002C32  3605               	rlcf	??___fpclassifyf^0,f,c
  5141   002C34  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5142   002C36  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5143   002C38  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5144   002C3A  2EE8               	decfsz	wreg,f,c
  5145   002C3C  EF18  F016         	goto	u3535
  5146   002C40  5005               	movf	??___fpclassifyf^0,w,c
  5147   002C42  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5148   002C44  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5149   002C46  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5150   002C48  B4D8               	btfsc	status,2,c
  5151   002C4A  EF29  F016         	goto	u3541
  5152   002C4E  EF2C  F016         	goto	u3540
  5153   002C52                     u3541:
  5154   002C52  0E01               	movlw	1
  5155   002C54  EF2D  F016         	goto	u3550
  5156   002C58                     u3540:
  5157   002C58  0E00               	movlw	0
  5158   002C5A                     u3550:
  5159   002C5A  6E01               	movwf	?___fpclassifyf^0,c
  5160   002C5C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5161   002C5E  EF35  F016         	goto	l1049
  5162   002C62                     l3258:
  5163   002C62  0E00               	movlw	0
  5164   002C64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5165   002C66  0E04               	movlw	4
  5166   002C68  6E01               	movwf	?___fpclassifyf^0,c
  5167   002C6A                     l1049:
  5168   002C6A  0012               	return		;funcret
  5169   002C6C                     __end_of___fpclassifyf:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function ___fltol *****************
  5173 ;; Defined at:
  5174 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  f1              4    0[COMRAM] int 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  exp1            1    9[COMRAM] unsigned char 
  5179 ;;  sign1           1    8[COMRAM] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  4    0[COMRAM] long 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5189 ;;      Params:         4       0       0       0       0       0       0
  5190 ;;      Locals:         2       0       0       0       0       0       0
  5191 ;;      Temps:          4       0       0       0       0       0       0
  5192 ;;      Totals:        10       0       0       0       0       0       0
  5193 ;;Total ram usage:       10 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 1
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_efgtoa
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text11
  5204   002964                     __ptext11:
  5205                           	callstack 0
  5206   002964                     ___fltol:
  5207                           	callstack 25
  5208   002964  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5209   002966  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5210   002968  6E0A               	movwf	___fltol@exp1^0,c
  5211   00296A  500A               	movf	___fltol@exp1^0,w,c
  5212   00296C  A4D8               	btfss	status,2,c
  5213   00296E  EFBB  F014         	goto	u3391
  5214   002972  EFBD  F014         	goto	u3390
  5215   002976                     u3391:
  5216   002976  EFC7  F014         	goto	l3186
  5217   00297A                     u3390:
  5218   00297A                     l3182:
  5219   00297A  0E00               	movlw	0
  5220   00297C  6E01               	movwf	?___fltol^0,c
  5221   00297E  0E00               	movlw	0
  5222   002980  6E02               	movwf	(?___fltol+1)^0,c
  5223   002982  0E00               	movlw	0
  5224   002984  6E03               	movwf	(?___fltol+2)^0,c
  5225   002986  0E00               	movlw	0
  5226   002988  6E04               	movwf	(?___fltol+3)^0,c
  5227   00298A  EF34  F015         	goto	l517
  5228   00298E                     l3186:
  5229   00298E  C001  F005         	movff	___fltol@f1,??___fltol
  5230   002992  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5231   002996  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5232   00299A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5233   00299E  0E20               	movlw	32
  5234   0029A0  EFD7  F014         	goto	u3400
  5235   0029A4                     u3405:
  5236   0029A4  90D8               	bcf	status,0,c
  5237   0029A6  3208               	rrcf	(??___fltol+3)^0,f,c
  5238   0029A8  3207               	rrcf	(??___fltol+2)^0,f,c
  5239   0029AA  3206               	rrcf	(??___fltol+1)^0,f,c
  5240   0029AC  3205               	rrcf	??___fltol^0,f,c
  5241   0029AE                     u3400:
  5242   0029AE  2EE8               	decfsz	wreg,f,c
  5243   0029B0  EFD2  F014         	goto	u3405
  5244   0029B4  5005               	movf	??___fltol^0,w,c
  5245   0029B6  6E09               	movwf	___fltol@sign1^0,c
  5246   0029B8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5247   0029BA  0EFF               	movlw	255
  5248   0029BC  1601               	andwf	___fltol@f1^0,f,c
  5249   0029BE  0EFF               	movlw	255
  5250   0029C0  1602               	andwf	(___fltol@f1+1)^0,f,c
  5251   0029C2  0EFF               	movlw	255
  5252   0029C4  1603               	andwf	(___fltol@f1+2)^0,f,c
  5253   0029C6  0E00               	movlw	0
  5254   0029C8  1604               	andwf	(___fltol@f1+3)^0,f,c
  5255   0029CA  0E96               	movlw	150
  5256   0029CC  5E0A               	subwf	___fltol@exp1^0,f,c
  5257   0029CE  BE0A               	btfsc	___fltol@exp1^0,7,c
  5258   0029D0  EFEE  F014         	goto	u3410
  5259   0029D4  EFEC  F014         	goto	u3411
  5260   0029D8                     u3411:
  5261   0029D8  EF04  F015         	goto	l3206
  5262   0029DC                     u3410:
  5263   0029DC  500A               	movf	___fltol@exp1^0,w,c
  5264   0029DE  0A80               	xorlw	128
  5265   0029E0  0F97               	addlw	151
  5266   0029E2  B0D8               	btfsc	status,0,c
  5267   0029E4  EFF6  F014         	goto	u3421
  5268   0029E8  EFF8  F014         	goto	u3420
  5269   0029EC                     u3421:
  5270   0029EC  EFFA  F014         	goto	l3202
  5271   0029F0                     u3420:
  5272   0029F0  EFBD  F014         	goto	l3182
  5273   0029F4                     l3202:
  5274   0029F4  90D8               	bcf	status,0,c
  5275   0029F6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5276   0029F8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5277   0029FA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5278   0029FC  3201               	rrcf	___fltol@f1^0,f,c
  5279   0029FE  3E0A               	incfsz	___fltol@exp1^0,f,c
  5280   002A00  EFFA  F014         	goto	l3202
  5281   002A04  EF1C  F015         	goto	l3216
  5282   002A08                     l3206:
  5283   002A08  0E1F               	movlw	31
  5284   002A0A  640A               	cpfsgt	___fltol@exp1^0,c
  5285   002A0C  EF0A  F015         	goto	u3431
  5286   002A10  EF0C  F015         	goto	u3430
  5287   002A14                     u3431:
  5288   002A14  EF14  F015         	goto	l3214
  5289   002A18                     u3430:
  5290   002A18  EFBD  F014         	goto	l3182
  5291   002A1C                     l3212:
  5292   002A1C  90D8               	bcf	status,0,c
  5293   002A1E  3601               	rlcf	___fltol@f1^0,f,c
  5294   002A20  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5295   002A22  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5296   002A24  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5297   002A26  060A               	decf	___fltol@exp1^0,f,c
  5298   002A28                     l3214:
  5299   002A28  500A               	movf	___fltol@exp1^0,w,c
  5300   002A2A  A4D8               	btfss	status,2,c
  5301   002A2C  EF1A  F015         	goto	u3441
  5302   002A30  EF1C  F015         	goto	u3440
  5303   002A34                     u3441:
  5304   002A34  EF0E  F015         	goto	l3212
  5305   002A38                     u3440:
  5306   002A38                     l3216:
  5307   002A38  5009               	movf	___fltol@sign1^0,w,c
  5308   002A3A  B4D8               	btfsc	status,2,c
  5309   002A3C  EF22  F015         	goto	u3451
  5310   002A40  EF24  F015         	goto	u3450
  5311   002A44                     u3451:
  5312   002A44  EF2C  F015         	goto	l3220
  5313   002A48                     u3450:
  5314   002A48  1E04               	comf	(___fltol@f1+3)^0,f,c
  5315   002A4A  1E03               	comf	(___fltol@f1+2)^0,f,c
  5316   002A4C  1E02               	comf	(___fltol@f1+1)^0,f,c
  5317   002A4E  6C01               	negf	___fltol@f1^0,c
  5318   002A50  0E00               	movlw	0
  5319   002A52  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5320   002A54  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5321   002A56  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5322   002A58                     l3220:
  5323   002A58  C001  F001         	movff	___fltol@f1,?___fltol
  5324   002A5C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5325   002A60  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5326   002A64  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5327   002A68                     l517:
  5328   002A68  0012               	return		;funcret
  5329   002A6A                     __end_of___fltol:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function ___flsub *****************
  5333 ;; Defined at:
  5334 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  b               4   39[COMRAM] long 
  5337 ;;  a               4   43[COMRAM] long 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  4   39[COMRAM] long 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5349 ;;      Params:         8       0       0       0       0       0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0
  5352 ;;      Totals:         8       0       0       0       0       0       0
  5353 ;;Total ram usage:        8 bytes
  5354 ;; Hardware stack levels used: 1
  5355 ;; Hardware stack levels required when called: 2
  5356 ;; This function calls:
  5357 ;;		___fladd
  5358 ;; This function is called by:
  5359 ;;		_efgtoa
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text12
  5364   00341A                     __ptext12:
  5365                           	callstack 0
  5366   00341A                     ___flsub:
  5367                           	callstack 24
  5368   00341A  0E00               	movlw	0
  5369   00341C  1A2C               	xorwf	___flsub@a^0,f,c
  5370   00341E  0E00               	movlw	0
  5371   003420  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5372   003422  0E00               	movlw	0
  5373   003424  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5374   003426  0E80               	movlw	128
  5375   003428  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5376   00342A  C028  F001         	movff	___flsub@b,___fladd@b
  5377   00342E  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5378   003432  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5379   003436  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5380   00343A  C02C  F005         	movff	___flsub@a,___fladd@a
  5381   00343E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5382   003442  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5383   003446  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5384   00344A  ECBA  F00A         	call	___fladd	;wreg free
  5385   00344E  C001  F028         	movff	?___fladd,?___flsub
  5386   003452  C002  F029         	movff	?___fladd+1,?___flsub+1
  5387   003456  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5388   00345A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5389   00345E  0012               	return		;funcret
  5390   003460                     __end_of___flsub:
  5391                           	callstack 0
  5392                           
  5393 ;; *************** function ___fladd *****************
  5394 ;; Defined at:
  5395 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  b               4    0[COMRAM] long 
  5398 ;;  a               4    4[COMRAM] long 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  grs             1   15[COMRAM] unsigned char 
  5401 ;;  bexp            1   14[COMRAM] unsigned char 
  5402 ;;  aexp            1   13[COMRAM] unsigned char 
  5403 ;;  signs           1   12[COMRAM] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  4    0[COMRAM] unsigned char 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5413 ;;      Params:         8       0       0       0       0       0       0
  5414 ;;      Locals:         4       0       0       0       0       0       0
  5415 ;;      Temps:          4       0       0       0       0       0       0
  5416 ;;      Totals:        16       0       0       0       0       0       0
  5417 ;;Total ram usage:       16 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 1
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		___flsub
  5424 ;;		_efgtoa
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text13
  5429   001574                     __ptext13:
  5430                           	callstack 0
  5431   001574                     ___fladd:
  5432                           	callstack 24
  5433   001574  5004               	movf	(___fladd@b+3)^0,w,c
  5434   001576  0B80               	andlw	128
  5435   001578  6E0D               	movwf	___fladd@signs^0,c
  5436   00157A  5004               	movf	(___fladd@b+3)^0,w,c
  5437   00157C  2404               	addwf	(___fladd@b+3)^0,w,c
  5438   00157E  6E0F               	movwf	___fladd@bexp^0,c
  5439   001580  AE03               	btfss	(___fladd@b+2)^0,7,c
  5440   001582  EFC5  F00A         	goto	u2361
  5441   001586  EFC7  F00A         	goto	u2360
  5442   00158A                     u2361:
  5443   00158A  EFC8  F00A         	goto	l2588
  5444   00158E                     u2360:
  5445   00158E  800F               	bsf	___fladd@bexp^0,0,c
  5446   001590                     l2588:
  5447   001590  500F               	movf	___fladd@bexp^0,w,c
  5448   001592  B4D8               	btfsc	status,2,c
  5449   001594  EFCE  F00A         	goto	u2371
  5450   001598  EFD0  F00A         	goto	u2370
  5451   00159C                     u2371:
  5452   00159C  EFE4  F00A         	goto	l2598
  5453   0015A0                     u2370:
  5454   0015A0  280F               	incf	___fladd@bexp^0,w,c
  5455   0015A2  A4D8               	btfss	status,2,c
  5456   0015A4  EFD6  F00A         	goto	u2381
  5457   0015A8  EFD8  F00A         	goto	u2380
  5458   0015AC                     u2381:
  5459   0015AC  EFE0  F00A         	goto	l2594
  5460   0015B0                     u2380:
  5461   0015B0  0E00               	movlw	0
  5462   0015B2  6E01               	movwf	___fladd@b^0,c
  5463   0015B4  0E00               	movlw	0
  5464   0015B6  6E02               	movwf	(___fladd@b+1)^0,c
  5465   0015B8  0E00               	movlw	0
  5466   0015BA  6E03               	movwf	(___fladd@b+2)^0,c
  5467   0015BC  0E00               	movlw	0
  5468   0015BE  6E04               	movwf	(___fladd@b+3)^0,c
  5469   0015C0                     l2594:
  5470   0015C0  8E03               	bsf	(___fladd@b+2)^0,7,c
  5471   0015C2  6A04               	clrf	(___fladd@b+3)^0,c
  5472   0015C4  EFEC  F00A         	goto	l2600
  5473   0015C8                     l2598:
  5474   0015C8  0E00               	movlw	0
  5475   0015CA  6E01               	movwf	___fladd@b^0,c
  5476   0015CC  0E00               	movlw	0
  5477   0015CE  6E02               	movwf	(___fladd@b+1)^0,c
  5478   0015D0  0E00               	movlw	0
  5479   0015D2  6E03               	movwf	(___fladd@b+2)^0,c
  5480   0015D4  0E00               	movlw	0
  5481   0015D6  6E04               	movwf	(___fladd@b+3)^0,c
  5482   0015D8                     l2600:
  5483   0015D8  5008               	movf	(___fladd@a+3)^0,w,c
  5484   0015DA  0B80               	andlw	128
  5485   0015DC  6E0E               	movwf	___fladd@aexp^0,c
  5486   0015DE  500D               	movf	___fladd@signs^0,w,c
  5487   0015E0  180E               	xorwf	___fladd@aexp^0,w,c
  5488   0015E2  B4D8               	btfsc	status,2,c
  5489   0015E4  EFF6  F00A         	goto	u2391
  5490   0015E8  EFF8  F00A         	goto	u2390
  5491   0015EC                     u2391:
  5492   0015EC  EFF9  F00A         	goto	l2606
  5493   0015F0                     u2390:
  5494   0015F0  8C0D               	bsf	___fladd@signs^0,6,c
  5495   0015F2                     l2606:
  5496   0015F2  5008               	movf	(___fladd@a+3)^0,w,c
  5497   0015F4  2408               	addwf	(___fladd@a+3)^0,w,c
  5498   0015F6  6E0E               	movwf	___fladd@aexp^0,c
  5499   0015F8  AE07               	btfss	(___fladd@a+2)^0,7,c
  5500   0015FA  EF01  F00B         	goto	u2401
  5501   0015FE  EF03  F00B         	goto	u2400
  5502   001602                     u2401:
  5503   001602  EF04  F00B         	goto	l2612
  5504   001606                     u2400:
  5505   001606  800E               	bsf	___fladd@aexp^0,0,c
  5506   001608                     l2612:
  5507   001608  500E               	movf	___fladd@aexp^0,w,c
  5508   00160A  B4D8               	btfsc	status,2,c
  5509   00160C  EF0A  F00B         	goto	u2411
  5510   001610  EF0C  F00B         	goto	u2410
  5511   001614                     u2411:
  5512   001614  EF20  F00B         	goto	l2622
  5513   001618                     u2410:
  5514   001618  280E               	incf	___fladd@aexp^0,w,c
  5515   00161A  A4D8               	btfss	status,2,c
  5516   00161C  EF12  F00B         	goto	u2421
  5517   001620  EF14  F00B         	goto	u2420
  5518   001624                     u2421:
  5519   001624  EF1C  F00B         	goto	l2618
  5520   001628                     u2420:
  5521   001628  0E00               	movlw	0
  5522   00162A  6E05               	movwf	___fladd@a^0,c
  5523   00162C  0E00               	movlw	0
  5524   00162E  6E06               	movwf	(___fladd@a+1)^0,c
  5525   001630  0E00               	movlw	0
  5526   001632  6E07               	movwf	(___fladd@a+2)^0,c
  5527   001634  0E00               	movlw	0
  5528   001636  6E08               	movwf	(___fladd@a+3)^0,c
  5529   001638                     l2618:
  5530   001638  8E07               	bsf	(___fladd@a+2)^0,7,c
  5531   00163A  6A08               	clrf	(___fladd@a+3)^0,c
  5532   00163C  EF28  F00B         	goto	l2624
  5533   001640                     l2622:
  5534   001640  0E00               	movlw	0
  5535   001642  6E05               	movwf	___fladd@a^0,c
  5536   001644  0E00               	movlw	0
  5537   001646  6E06               	movwf	(___fladd@a+1)^0,c
  5538   001648  0E00               	movlw	0
  5539   00164A  6E07               	movwf	(___fladd@a+2)^0,c
  5540   00164C  0E00               	movlw	0
  5541   00164E  6E08               	movwf	(___fladd@a+3)^0,c
  5542   001650                     l2624:
  5543   001650  500F               	movf	___fladd@bexp^0,w,c
  5544   001652  5C0E               	subwf	___fladd@aexp^0,w,c
  5545   001654  B0D8               	btfsc	status,0,c
  5546   001656  EF2F  F00B         	goto	u2431
  5547   00165A  EF31  F00B         	goto	u2430
  5548   00165E                     u2431:
  5549   00165E  EF58  F00B         	goto	l2660
  5550   001662                     u2430:
  5551   001662  AC0D               	btfss	___fladd@signs^0,6,c
  5552   001664  EF36  F00B         	goto	u2441
  5553   001668  EF38  F00B         	goto	u2440
  5554   00166C                     u2441:
  5555   00166C  EF3A  F00B         	goto	l2630
  5556   001670                     u2440:
  5557   001670  0E80               	movlw	128
  5558   001672  1A0D               	xorwf	___fladd@signs^0,f,c
  5559   001674                     l2630:
  5560   001674  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5561   001678  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5562   00167C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5563   001680  C001  F010         	movff	___fladd@b,___fladd@grs
  5564   001684  C005  F001         	movff	___fladd@a,___fladd@b
  5565   001688  C010  F005         	movff	___fladd@grs,___fladd@a
  5566   00168C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5567   001690  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5568   001694  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5569   001698  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5570   00169C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5571   0016A0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5572   0016A4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5573   0016A8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5574   0016AC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5575   0016B0                     l2660:
  5576   0016B0  6A10               	clrf	___fladd@grs^0,c
  5577   0016B2  500F               	movf	___fladd@bexp^0,w,c
  5578   0016B4  C00E  F009         	movff	___fladd@aexp,??___fladd
  5579   0016B8  6A0A               	clrf	(??___fladd+1)^0,c
  5580   0016BA  5E09               	subwf	??___fladd^0,f,c
  5581   0016BC  0E00               	movlw	0
  5582   0016BE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5583   0016C0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5584   0016C2  EF6C  F00B         	goto	u2451
  5585   0016C6  500A               	movf	(??___fladd+1)^0,w,c
  5586   0016C8  E109               	bnz	u2450
  5587   0016CA  0E1A               	movlw	26
  5588   0016CC  5C09               	subwf	??___fladd^0,w,c
  5589   0016CE  A0D8               	btfss	status,0,c
  5590   0016D0  EF6C  F00B         	goto	u2451
  5591   0016D4  EF6E  F00B         	goto	u2450
  5592   0016D8                     u2451:
  5593   0016D8  EFA5  F00B         	goto	l749
  5594   0016DC                     u2450:
  5595   0016DC  5001               	movf	___fladd@b^0,w,c
  5596   0016DE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5597   0016E0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5598   0016E2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5599   0016E4  A4D8               	btfss	status,2,c
  5600   0016E6  EF77  F00B         	goto	u2461
  5601   0016EA  EF7A  F00B         	goto	u2460
  5602   0016EE                     u2461:
  5603   0016EE  0E01               	movlw	1
  5604   0016F0  EF7B  F00B         	goto	u2470
  5605   0016F4                     u2460:
  5606   0016F4  0E00               	movlw	0
  5607   0016F6                     u2470:
  5608   0016F6  6E10               	movwf	___fladd@grs^0,c
  5609   0016F8  0E00               	movlw	0
  5610   0016FA  6E01               	movwf	___fladd@b^0,c
  5611   0016FC  0E00               	movlw	0
  5612   0016FE  6E02               	movwf	(___fladd@b+1)^0,c
  5613   001700  0E00               	movlw	0
  5614   001702  6E03               	movwf	(___fladd@b+2)^0,c
  5615   001704  0E00               	movlw	0
  5616   001706  6E04               	movwf	(___fladd@b+3)^0,c
  5617   001708  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5618   00170C  EFAE  F00B         	goto	l748
  5619   001710                     l750:
  5620   001710  A010               	btfss	___fladd@grs^0,0,c
  5621   001712  EF8D  F00B         	goto	u2481
  5622   001716  EF8F  F00B         	goto	u2480
  5623   00171A                     u2481:
  5624   00171A  EF95  F00B         	goto	l2670
  5625   00171E                     u2480:
  5626   00171E  90D8               	bcf	status,0,c
  5627   001720  3010               	rrcf	___fladd@grs^0,w,c
  5628   001722  0901               	iorlw	1
  5629   001724  6E10               	movwf	___fladd@grs^0,c
  5630   001726  EF97  F00B         	goto	l2672
  5631   00172A                     l2670:
  5632   00172A  90D8               	bcf	status,0,c
  5633   00172C  3210               	rrcf	___fladd@grs^0,f,c
  5634   00172E                     l2672:
  5635   00172E  A001               	btfss	___fladd@b^0,0,c
  5636   001730  EF9C  F00B         	goto	u2491
  5637   001734  EF9E  F00B         	goto	u2490
  5638   001738                     u2491:
  5639   001738  EF9F  F00B         	goto	l2676
  5640   00173C                     u2490:
  5641   00173C  8E10               	bsf	___fladd@grs^0,7,c
  5642   00173E                     l2676:
  5643   00173E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5644   001740  3204               	rrcf	(___fladd@b+3)^0,f,c
  5645   001742  3203               	rrcf	(___fladd@b+2)^0,f,c
  5646   001744  3202               	rrcf	(___fladd@b+1)^0,f,c
  5647   001746  3201               	rrcf	___fladd@b^0,f,c
  5648   001748  2A0F               	incf	___fladd@bexp^0,f,c
  5649   00174A                     l749:
  5650   00174A  500E               	movf	___fladd@aexp^0,w,c
  5651   00174C  5C0F               	subwf	___fladd@bexp^0,w,c
  5652   00174E  A0D8               	btfss	status,0,c
  5653   001750  EFAC  F00B         	goto	u2501
  5654   001754  EFAE  F00B         	goto	u2500
  5655   001758                     u2501:
  5656   001758  EF88  F00B         	goto	l750
  5657   00175C                     u2500:
  5658   00175C                     l748:
  5659   00175C  BC0D               	btfsc	___fladd@signs^0,6,c
  5660   00175E  EFB3  F00B         	goto	u2511
  5661   001762  EFB5  F00B         	goto	u2510
  5662   001766                     u2511:
  5663   001766  EFF5  F00B         	goto	l2704
  5664   00176A                     u2510:
  5665   00176A  500F               	movf	___fladd@bexp^0,w,c
  5666   00176C  A4D8               	btfss	status,2,c
  5667   00176E  EFBB  F00B         	goto	u2521
  5668   001772  EFBD  F00B         	goto	u2520
  5669   001776                     u2521:
  5670   001776  EFC7  F00B         	goto	l2686
  5671   00177A                     u2520:
  5672   00177A  0E00               	movlw	0
  5673   00177C  6E01               	movwf	?___fladd^0,c
  5674   00177E  0E00               	movlw	0
  5675   001780  6E02               	movwf	(?___fladd+1)^0,c
  5676   001782  0E00               	movlw	0
  5677   001784  6E03               	movwf	(?___fladd+2)^0,c
  5678   001786  0E00               	movlw	0
  5679   001788  6E04               	movwf	(?___fladd+3)^0,c
  5680   00178A  EF14  F00D         	goto	l757
  5681   00178E                     l2686:
  5682   00178E  5005               	movf	___fladd@a^0,w,c
  5683   001790  2601               	addwf	___fladd@b^0,f,c
  5684   001792  5006               	movf	(___fladd@a+1)^0,w,c
  5685   001794  2202               	addwfc	(___fladd@b+1)^0,f,c
  5686   001796  5007               	movf	(___fladd@a+2)^0,w,c
  5687   001798  2203               	addwfc	(___fladd@b+2)^0,f,c
  5688   00179A  5008               	movf	(___fladd@a+3)^0,w,c
  5689   00179C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5690   00179E  A004               	btfss	(___fladd@b+3)^0,0,c
  5691   0017A0  EFD4  F00B         	goto	u2531
  5692   0017A4  EFD6  F00B         	goto	u2530
  5693   0017A8                     u2531:
  5694   0017A8  EF82  F00C         	goto	l762
  5695   0017AC                     u2530:
  5696   0017AC  A010               	btfss	___fladd@grs^0,0,c
  5697   0017AE  EFDB  F00B         	goto	u2541
  5698   0017B2  EFDD  F00B         	goto	u2540
  5699   0017B6                     u2541:
  5700   0017B6  EFE3  F00B         	goto	l2694
  5701   0017BA                     u2540:
  5702   0017BA  90D8               	bcf	status,0,c
  5703   0017BC  3010               	rrcf	___fladd@grs^0,w,c
  5704   0017BE  0901               	iorlw	1
  5705   0017C0  6E10               	movwf	___fladd@grs^0,c
  5706   0017C2  EFE5  F00B         	goto	l2696
  5707   0017C6                     l2694:
  5708   0017C6  90D8               	bcf	status,0,c
  5709   0017C8  3210               	rrcf	___fladd@grs^0,f,c
  5710   0017CA                     l2696:
  5711   0017CA  A001               	btfss	___fladd@b^0,0,c
  5712   0017CC  EFEA  F00B         	goto	u2551
  5713   0017D0  EFEC  F00B         	goto	u2550
  5714   0017D4                     u2551:
  5715   0017D4  EFED  F00B         	goto	l2700
  5716   0017D8                     u2550:
  5717   0017D8  8E10               	bsf	___fladd@grs^0,7,c
  5718   0017DA                     l2700:
  5719   0017DA  3404               	rlcf	(___fladd@b+3)^0,w,c
  5720   0017DC  3204               	rrcf	(___fladd@b+3)^0,f,c
  5721   0017DE  3203               	rrcf	(___fladd@b+2)^0,f,c
  5722   0017E0  3202               	rrcf	(___fladd@b+1)^0,f,c
  5723   0017E2  3201               	rrcf	___fladd@b^0,f,c
  5724   0017E4  2A0F               	incf	___fladd@bexp^0,f,c
  5725   0017E6  EF82  F00C         	goto	l762
  5726   0017EA                     l2704:
  5727   0017EA  5005               	movf	___fladd@a^0,w,c
  5728   0017EC  5C01               	subwf	___fladd@b^0,w,c
  5729   0017EE  5006               	movf	(___fladd@a+1)^0,w,c
  5730   0017F0  5802               	subwfb	(___fladd@b+1)^0,w,c
  5731   0017F2  5007               	movf	(___fladd@a+2)^0,w,c
  5732   0017F4  5803               	subwfb	(___fladd@b+2)^0,w,c
  5733   0017F6  5004               	movf	(___fladd@b+3)^0,w,c
  5734   0017F8  0A80               	xorlw	128
  5735   0017FA  6E09               	movwf	??___fladd^0,c
  5736   0017FC  5008               	movf	(___fladd@a+3)^0,w,c
  5737   0017FE  0A80               	xorlw	128
  5738   001800  5809               	subwfb	??___fladd^0,w,c
  5739   001802  B0D8               	btfsc	status,0,c
  5740   001804  EF06  F00C         	goto	u2561
  5741   001808  EF08  F00C         	goto	u2560
  5742   00180C                     u2561:
  5743   00180C  EF33  F00C         	goto	l2714
  5744   001810                     u2560:
  5745   001810  5001               	movf	___fladd@b^0,w,c
  5746   001812  5C05               	subwf	___fladd@a^0,w,c
  5747   001814  6E09               	movwf	??___fladd^0,c
  5748   001816  5002               	movf	(___fladd@b+1)^0,w,c
  5749   001818  5806               	subwfb	(___fladd@a+1)^0,w,c
  5750   00181A  6E0A               	movwf	(??___fladd+1)^0,c
  5751   00181C  5003               	movf	(___fladd@b+2)^0,w,c
  5752   00181E  5807               	subwfb	(___fladd@a+2)^0,w,c
  5753   001820  6E0B               	movwf	(??___fladd+2)^0,c
  5754   001822  5004               	movf	(___fladd@b+3)^0,w,c
  5755   001824  5808               	subwfb	(___fladd@a+3)^0,w,c
  5756   001826  6E0C               	movwf	(??___fladd+3)^0,c
  5757   001828  0EFF               	movlw	255
  5758   00182A  2409               	addwf	??___fladd^0,w,c
  5759   00182C  6E01               	movwf	___fladd@b^0,c
  5760   00182E  0EFF               	movlw	255
  5761   001830  200A               	addwfc	(??___fladd+1)^0,w,c
  5762   001832  6E02               	movwf	(___fladd@b+1)^0,c
  5763   001834  0EFF               	movlw	255
  5764   001836  200B               	addwfc	(??___fladd+2)^0,w,c
  5765   001838  6E03               	movwf	(___fladd@b+2)^0,c
  5766   00183A  0EFF               	movlw	255
  5767   00183C  200C               	addwfc	(??___fladd+3)^0,w,c
  5768   00183E  6E04               	movwf	(___fladd@b+3)^0,c
  5769   001840  0E80               	movlw	128
  5770   001842  1A0D               	xorwf	___fladd@signs^0,f,c
  5771   001844  6C10               	negf	___fladd@grs^0,c
  5772   001846  5010               	movf	___fladd@grs^0,w,c
  5773   001848  A4D8               	btfss	status,2,c
  5774   00184A  EF29  F00C         	goto	u2571
  5775   00184E  EF2B  F00C         	goto	u2570
  5776   001852                     u2571:
  5777   001852  EF3B  F00C         	goto	l765
  5778   001856                     u2570:
  5779   001856  0E01               	movlw	1
  5780   001858  2601               	addwf	___fladd@b^0,f,c
  5781   00185A  0E00               	movlw	0
  5782   00185C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5783   00185E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5784   001860  2204               	addwfc	(___fladd@b+3)^0,f,c
  5785   001862  EF3B  F00C         	goto	l765
  5786   001866                     l2714:
  5787   001866  5005               	movf	___fladd@a^0,w,c
  5788   001868  5E01               	subwf	___fladd@b^0,f,c
  5789   00186A  5006               	movf	(___fladd@a+1)^0,w,c
  5790   00186C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5791   00186E  5007               	movf	(___fladd@a+2)^0,w,c
  5792   001870  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5793   001872  5008               	movf	(___fladd@a+3)^0,w,c
  5794   001874  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5795   001876                     l765:
  5796   001876  5001               	movf	___fladd@b^0,w,c
  5797   001878  1002               	iorwf	(___fladd@b+1)^0,w,c
  5798   00187A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5799   00187C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5800   00187E  A4D8               	btfss	status,2,c
  5801   001880  EF44  F00C         	goto	u2581
  5802   001884  EF46  F00C         	goto	u2580
  5803   001888                     u2581:
  5804   001888  EF7B  F00C         	goto	l2738
  5805   00188C                     u2580:
  5806   00188C  5010               	movf	___fladd@grs^0,w,c
  5807   00188E  A4D8               	btfss	status,2,c
  5808   001890  EF4C  F00C         	goto	u2591
  5809   001894  EF4E  F00C         	goto	u2590
  5810   001898                     u2591:
  5811   001898  EF7B  F00C         	goto	l2738
  5812   00189C                     u2590:
  5813   00189C  0E00               	movlw	0
  5814   00189E  6E01               	movwf	?___fladd^0,c
  5815   0018A0  0E00               	movlw	0
  5816   0018A2  6E02               	movwf	(?___fladd+1)^0,c
  5817   0018A4  0E00               	movlw	0
  5818   0018A6  6E03               	movwf	(?___fladd+2)^0,c
  5819   0018A8  0E00               	movlw	0
  5820   0018AA  6E04               	movwf	(?___fladd+3)^0,c
  5821   0018AC  EF14  F00D         	goto	l757
  5822   0018B0                     l2722:
  5823   0018B0  90D8               	bcf	status,0,c
  5824   0018B2  3601               	rlcf	___fladd@b^0,f,c
  5825   0018B4  3602               	rlcf	(___fladd@b+1)^0,f,c
  5826   0018B6  3603               	rlcf	(___fladd@b+2)^0,f,c
  5827   0018B8  3604               	rlcf	(___fladd@b+3)^0,f,c
  5828   0018BA  AE10               	btfss	___fladd@grs^0,7,c
  5829   0018BC  EF62  F00C         	goto	u2601
  5830   0018C0  EF64  F00C         	goto	u2600
  5831   0018C4                     u2601:
  5832   0018C4  EF65  F00C         	goto	l2728
  5833   0018C8                     u2600:
  5834   0018C8  8001               	bsf	___fladd@b^0,0,c
  5835   0018CA                     l2728:
  5836   0018CA  A010               	btfss	___fladd@grs^0,0,c
  5837   0018CC  EF6A  F00C         	goto	u2611
  5838   0018D0  EF6C  F00C         	goto	u2610
  5839   0018D4                     u2611:
  5840   0018D4  EF70  F00C         	goto	l2732
  5841   0018D8                     u2610:
  5842   0018D8  80D8               	bsf	status,0,c
  5843   0018DA  3610               	rlcf	___fladd@grs^0,f,c
  5844   0018DC  EF72  F00C         	goto	l2734
  5845   0018E0                     l2732:
  5846   0018E0  90D8               	bcf	status,0,c
  5847   0018E2  3610               	rlcf	___fladd@grs^0,f,c
  5848   0018E4                     l2734:
  5849   0018E4  500F               	movf	___fladd@bexp^0,w,c
  5850   0018E6  B4D8               	btfsc	status,2,c
  5851   0018E8  EF78  F00C         	goto	u2621
  5852   0018EC  EF7A  F00C         	goto	u2620
  5853   0018F0                     u2621:
  5854   0018F0  EF7B  F00C         	goto	l2738
  5855   0018F4                     u2620:
  5856   0018F4  060F               	decf	___fladd@bexp^0,f,c
  5857   0018F6                     l2738:
  5858   0018F6  AE03               	btfss	(___fladd@b+2)^0,7,c
  5859   0018F8  EF80  F00C         	goto	u2631
  5860   0018FC  EF82  F00C         	goto	u2630
  5861   001900                     u2631:
  5862   001900  EF58  F00C         	goto	l2722
  5863   001904                     u2630:
  5864   001904                     l762:
  5865   001904  6A0E               	clrf	___fladd@aexp^0,c
  5866   001906  AE10               	btfss	___fladd@grs^0,7,c
  5867   001908  EF88  F00C         	goto	u2641
  5868   00190C  EF8A  F00C         	goto	u2640
  5869   001910                     u2641:
  5870   001910  EFA2  F00C         	goto	l774
  5871   001914                     u2640:
  5872   001914  C010  F009         	movff	___fladd@grs,??___fladd
  5873   001918  0E7F               	movlw	127
  5874   00191A  1609               	andwf	??___fladd^0,f,c
  5875   00191C  B4D8               	btfsc	status,2,c
  5876   00191E  EF93  F00C         	goto	u2651
  5877   001922  EF95  F00C         	goto	u2650
  5878   001926                     u2651:
  5879   001926  EF99  F00C         	goto	l775
  5880   00192A                     u2650:
  5881   00192A                     l2742:
  5882   00192A  0E01               	movlw	1
  5883   00192C  6E0E               	movwf	___fladd@aexp^0,c
  5884   00192E  EFA2  F00C         	goto	l774
  5885   001932                     l775:
  5886   001932  A001               	btfss	___fladd@b^0,0,c
  5887   001934  EF9E  F00C         	goto	u2661
  5888   001938  EFA0  F00C         	goto	u2660
  5889   00193C                     u2661:
  5890   00193C  EFA2  F00C         	goto	l774
  5891   001940                     u2660:
  5892   001940  EF95  F00C         	goto	l2742
  5893   001944                     l774:
  5894   001944  500E               	movf	___fladd@aexp^0,w,c
  5895   001946  B4D8               	btfsc	status,2,c
  5896   001948  EFA8  F00C         	goto	u2671
  5897   00194C  EFAA  F00C         	goto	u2670
  5898   001950                     u2671:
  5899   001950  EFD5  F00C         	goto	l2754
  5900   001954                     u2670:
  5901   001954  0E01               	movlw	1
  5902   001956  2601               	addwf	___fladd@b^0,f,c
  5903   001958  0E00               	movlw	0
  5904   00195A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5905   00195C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5906   00195E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5907   001960  A004               	btfss	(___fladd@b+3)^0,0,c
  5908   001962  EFB5  F00C         	goto	u2681
  5909   001966  EFB7  F00C         	goto	u2680
  5910   00196A                     u2681:
  5911   00196A  EFD5  F00C         	goto	l2754
  5912   00196E                     u2680:
  5913   00196E  C001  F009         	movff	___fladd@b,??___fladd
  5914   001972  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5915   001976  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5916   00197A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5917   00197E  340C               	rlcf	(??___fladd+3)^0,w,c
  5918   001980  320C               	rrcf	(??___fladd+3)^0,f,c
  5919   001982  320B               	rrcf	(??___fladd+2)^0,f,c
  5920   001984  320A               	rrcf	(??___fladd+1)^0,f,c
  5921   001986  3209               	rrcf	??___fladd^0,f,c
  5922   001988  C009  F001         	movff	??___fladd,___fladd@b
  5923   00198C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5924   001990  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5925   001994  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5926   001998  280F               	incf	___fladd@bexp^0,w,c
  5927   00199A  B4D8               	btfsc	status,2,c
  5928   00199C  EFD2  F00C         	goto	u2691
  5929   0019A0  EFD4  F00C         	goto	u2690
  5930   0019A4                     u2691:
  5931   0019A4  EFD5  F00C         	goto	l2754
  5932   0019A8                     u2690:
  5933   0019A8  2A0F               	incf	___fladd@bexp^0,f,c
  5934   0019AA                     l2754:
  5935   0019AA  280F               	incf	___fladd@bexp^0,w,c
  5936   0019AC  B4D8               	btfsc	status,2,c
  5937   0019AE  EFDB  F00C         	goto	u2701
  5938   0019B2  EFDD  F00C         	goto	u2700
  5939   0019B6                     u2701:
  5940   0019B6  EFE5  F00C         	goto	l2758
  5941   0019BA                     u2700:
  5942   0019BA  500F               	movf	___fladd@bexp^0,w,c
  5943   0019BC  A4D8               	btfss	status,2,c
  5944   0019BE  EFE3  F00C         	goto	u2711
  5945   0019C2  EFE5  F00C         	goto	u2710
  5946   0019C6                     u2711:
  5947   0019C6  EFF6  F00C         	goto	l781
  5948   0019CA                     u2710:
  5949   0019CA                     l2758:
  5950   0019CA  0E00               	movlw	0
  5951   0019CC  6E01               	movwf	___fladd@b^0,c
  5952   0019CE  0E00               	movlw	0
  5953   0019D0  6E02               	movwf	(___fladd@b+1)^0,c
  5954   0019D2  0E00               	movlw	0
  5955   0019D4  6E03               	movwf	(___fladd@b+2)^0,c
  5956   0019D6  0E00               	movlw	0
  5957   0019D8  6E04               	movwf	(___fladd@b+3)^0,c
  5958   0019DA  500F               	movf	___fladd@bexp^0,w,c
  5959   0019DC  A4D8               	btfss	status,2,c
  5960   0019DE  EFF3  F00C         	goto	u2721
  5961   0019E2  EFF5  F00C         	goto	u2720
  5962   0019E6                     u2721:
  5963   0019E6  EFF6  F00C         	goto	l781
  5964   0019EA                     u2720:
  5965   0019EA  6A0D               	clrf	___fladd@signs^0,c
  5966   0019EC                     l781:
  5967   0019EC  A00F               	btfss	___fladd@bexp^0,0,c
  5968   0019EE  EFFB  F00C         	goto	u2731
  5969   0019F2  EFFD  F00C         	goto	u2730
  5970   0019F6                     u2731:
  5971   0019F6  EF00  F00D         	goto	l2764
  5972   0019FA                     u2730:
  5973   0019FA  8E03               	bsf	(___fladd@b+2)^0,7,c
  5974   0019FC  EF01  F00D         	goto	l2766
  5975   001A00                     l2764:
  5976   001A00  9E03               	bcf	(___fladd@b+2)^0,7,c
  5977   001A02                     l2766:
  5978   001A02  90D8               	bcf	status,0,c
  5979   001A04  300F               	rrcf	___fladd@bexp^0,w,c
  5980   001A06  6E04               	movwf	(___fladd@b+3)^0,c
  5981   001A08  AE0D               	btfss	___fladd@signs^0,7,c
  5982   001A0A  EF09  F00D         	goto	u2741
  5983   001A0E  EF0B  F00D         	goto	u2740
  5984   001A12                     u2741:
  5985   001A12  EF0C  F00D         	goto	l2772
  5986   001A16                     u2740:
  5987   001A16  8E04               	bsf	(___fladd@b+3)^0,7,c
  5988   001A18                     l2772:
  5989   001A18  C001  F001         	movff	___fladd@b,?___fladd
  5990   001A1C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5991   001A20  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5992   001A24  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5993   001A28                     l757:
  5994   001A28  0012               	return		;funcret
  5995   001A2A                     __end_of___fladd:
  5996                           	callstack 0
  5997                           
  5998 ;; *************** function ___flneg *****************
  5999 ;; Defined at:
  6000 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  f1              4    0[COMRAM] unsigned char 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  4    0[COMRAM] unsigned char 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6014 ;;      Params:         4       0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0
  6017 ;;      Totals:         4       0       0       0       0       0       0
  6018 ;;Total ram usage:        4 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 1
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_efgtoa
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text14
  6029   003552                     __ptext14:
  6030                           	callstack 0
  6031   003552                     ___flneg:
  6032                           	callstack 25
  6033   003552  5001               	movf	___flneg@f1^0,w,c
  6034   003554  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6035   003556  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6036   003558  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6037   00355A  B4D8               	btfsc	status,2,c
  6038   00355C  EFB2  F01A         	goto	u3381
  6039   003560  EFB4  F01A         	goto	u3380
  6040   003564                     u3381:
  6041   003564  EFBC  F01A         	goto	l3176
  6042   003568                     u3380:
  6043   003568  0E00               	movlw	0
  6044   00356A  1A01               	xorwf	___flneg@f1^0,f,c
  6045   00356C  0E00               	movlw	0
  6046   00356E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6047   003570  0E00               	movlw	0
  6048   003572  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6049   003574  0E80               	movlw	128
  6050   003576  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6051   003578                     l3176:
  6052   003578  C001  F001         	movff	___flneg@f1,?___flneg
  6053   00357C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6054   003580  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6055   003584  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6056   003588  0012               	return		;funcret
  6057   00358A                     __end_of___flneg:
  6058                           	callstack 0
  6059                           
  6060 ;; *************** function ___flge *****************
  6061 ;; Defined at:
  6062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  ff1             4   39[COMRAM] unsigned char 
  6065 ;;  ff2             4   43[COMRAM] unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;		None               void
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6077 ;;      Params:         8       0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0
  6079 ;;      Temps:          4       0       0       0       0       0       0
  6080 ;;      Totals:        12       0       0       0       0       0       0
  6081 ;;Total ram usage:       12 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 1
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_main
  6088 ;;		_efgtoa
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text15
  6093   002A6A                     __ptext15:
  6094                           	callstack 0
  6095   002A6A                     ___flge:
  6096                           	callstack 25
  6097   002A6A  0E00               	movlw	0
  6098   002A6C  1428               	andwf	___flge@ff1^0,w,c
  6099   002A6E  6E30               	movwf	??___flge^0,c
  6100   002A70  0E00               	movlw	0
  6101   002A72  1429               	andwf	(___flge@ff1+1)^0,w,c
  6102   002A74  6E31               	movwf	(??___flge+1)^0,c
  6103   002A76  0E80               	movlw	128
  6104   002A78  142A               	andwf	(___flge@ff1+2)^0,w,c
  6105   002A7A  6E32               	movwf	(??___flge+2)^0,c
  6106   002A7C  0E7F               	movlw	127
  6107   002A7E  142B               	andwf	(___flge@ff1+3)^0,w,c
  6108   002A80  6E33               	movwf	(??___flge+3)^0,c
  6109   002A82  5030               	movf	??___flge^0,w,c
  6110   002A84  1031               	iorwf	(??___flge+1)^0,w,c
  6111   002A86  1032               	iorwf	(??___flge+2)^0,w,c
  6112   002A88  1033               	iorwf	(??___flge+3)^0,w,c
  6113   002A8A  A4D8               	btfss	status,2,c
  6114   002A8C  EF4A  F015         	goto	u3331
  6115   002A90  EF4C  F015         	goto	u3330
  6116   002A94                     u3331:
  6117   002A94  EF54  F015         	goto	l3154
  6118   002A98                     u3330:
  6119   002A98  0E00               	movlw	0
  6120   002A9A  6E28               	movwf	___flge@ff1^0,c
  6121   002A9C  0E00               	movlw	0
  6122   002A9E  6E29               	movwf	(___flge@ff1+1)^0,c
  6123   002AA0  0E00               	movlw	0
  6124   002AA2  6E2A               	movwf	(___flge@ff1+2)^0,c
  6125   002AA4  0E00               	movlw	0
  6126   002AA6  6E2B               	movwf	(___flge@ff1+3)^0,c
  6127   002AA8                     l3154:
  6128   002AA8  0E00               	movlw	0
  6129   002AAA  142C               	andwf	___flge@ff2^0,w,c
  6130   002AAC  6E30               	movwf	??___flge^0,c
  6131   002AAE  0E00               	movlw	0
  6132   002AB0  142D               	andwf	(___flge@ff2+1)^0,w,c
  6133   002AB2  6E31               	movwf	(??___flge+1)^0,c
  6134   002AB4  0E80               	movlw	128
  6135   002AB6  142E               	andwf	(___flge@ff2+2)^0,w,c
  6136   002AB8  6E32               	movwf	(??___flge+2)^0,c
  6137   002ABA  0E7F               	movlw	127
  6138   002ABC  142F               	andwf	(___flge@ff2+3)^0,w,c
  6139   002ABE  6E33               	movwf	(??___flge+3)^0,c
  6140   002AC0  5030               	movf	??___flge^0,w,c
  6141   002AC2  1031               	iorwf	(??___flge+1)^0,w,c
  6142   002AC4  1032               	iorwf	(??___flge+2)^0,w,c
  6143   002AC6  1033               	iorwf	(??___flge+3)^0,w,c
  6144   002AC8  A4D8               	btfss	status,2,c
  6145   002ACA  EF69  F015         	goto	u3341
  6146   002ACE  EF6B  F015         	goto	u3340
  6147   002AD2                     u3341:
  6148   002AD2  EF73  F015         	goto	l3158
  6149   002AD6                     u3340:
  6150   002AD6  0E00               	movlw	0
  6151   002AD8  6E2C               	movwf	___flge@ff2^0,c
  6152   002ADA  0E00               	movlw	0
  6153   002ADC  6E2D               	movwf	(___flge@ff2+1)^0,c
  6154   002ADE  0E00               	movlw	0
  6155   002AE0  6E2E               	movwf	(___flge@ff2+2)^0,c
  6156   002AE2  0E00               	movlw	0
  6157   002AE4  6E2F               	movwf	(___flge@ff2+3)^0,c
  6158   002AE6                     l3158:
  6159   002AE6  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6160   002AE8  EF78  F015         	goto	u3351
  6161   002AEC  EF7A  F015         	goto	u3350
  6162   002AF0                     u3351:
  6163   002AF0  EF83  F015         	goto	l3162
  6164   002AF4                     u3350:
  6165   002AF4  6C28               	negf	___flge@ff1^0,c
  6166   002AF6  1E29               	comf	(___flge@ff1+1)^0,f,c
  6167   002AF8  B0D8               	btfsc	status,0,c
  6168   002AFA  2A29               	incf	(___flge@ff1+1)^0,f,c
  6169   002AFC  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6170   002AFE  B0D8               	btfsc	status,0,c
  6171   002B00  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6172   002B02  0E80               	movlw	128
  6173   002B04  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6174   002B06                     l3162:
  6175   002B06  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6176   002B08  EF88  F015         	goto	u3361
  6177   002B0C  EF8A  F015         	goto	u3360
  6178   002B10                     u3361:
  6179   002B10  EF93  F015         	goto	l485
  6180   002B14                     u3360:
  6181   002B14  6C2C               	negf	___flge@ff2^0,c
  6182   002B16  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6183   002B18  B0D8               	btfsc	status,0,c
  6184   002B1A  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6185   002B1C  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6186   002B1E  B0D8               	btfsc	status,0,c
  6187   002B20  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6188   002B22  0E80               	movlw	128
  6189   002B24  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6190   002B26                     l485:
  6191   002B26  0E00               	movlw	0
  6192   002B28  1A28               	xorwf	___flge@ff1^0,f,c
  6193   002B2A  0E00               	movlw	0
  6194   002B2C  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6195   002B2E  0E00               	movlw	0
  6196   002B30  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6197   002B32  0E80               	movlw	128
  6198   002B34  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6199   002B36  0E00               	movlw	0
  6200   002B38  1A2C               	xorwf	___flge@ff2^0,f,c
  6201   002B3A  0E00               	movlw	0
  6202   002B3C  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6203   002B3E  0E00               	movlw	0
  6204   002B40  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6205   002B42  0E80               	movlw	128
  6206   002B44  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6207   002B46  502C               	movf	___flge@ff2^0,w,c
  6208   002B48  5C28               	subwf	___flge@ff1^0,w,c
  6209   002B4A  502D               	movf	(___flge@ff2+1)^0,w,c
  6210   002B4C  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6211   002B4E  502E               	movf	(___flge@ff2+2)^0,w,c
  6212   002B50  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6213   002B52  502F               	movf	(___flge@ff2+3)^0,w,c
  6214   002B54  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6215   002B56  B0D8               	btfsc	status,0,c
  6216   002B58  EFB0  F015         	goto	u3371
  6217   002B5C  EFB2  F015         	goto	u3370
  6218   002B60                     u3371:
  6219   002B60  EFB5  F015         	goto	l3168
  6220   002B64                     u3370:
  6221   002B64  90D8               	bcf	status,0,c
  6222   002B66  EFB6  F015         	goto	l490
  6223   002B6A                     l3168:
  6224   002B6A  80D8               	bsf	status,0,c
  6225   002B6C                     l490:
  6226   002B6C  0012               	return		;funcret
  6227   002B6E                     __end_of___flge:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function ___fleq *****************
  6231 ;; Defined at:
  6232 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  ff1             4    0[COMRAM] unsigned char 
  6235 ;;  ff2             4    4[COMRAM] unsigned char 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;		None               void
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6247 ;;      Params:         8       0       0       0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0       0       0
  6249 ;;      Temps:          4       0       0       0       0       0       0
  6250 ;;      Totals:        12       0       0       0       0       0       0
  6251 ;;Total ram usage:       12 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_efgtoa
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text16
  6262   002DDC                     __ptext16:
  6263                           	callstack 0
  6264   002DDC                     ___fleq:
  6265                           	callstack 25
  6266   002DDC  0E00               	movlw	0
  6267   002DDE  1401               	andwf	___fleq@ff1^0,w,c
  6268   002DE0  6E09               	movwf	??___fleq^0,c
  6269   002DE2  0E00               	movlw	0
  6270   002DE4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6271   002DE6  6E0A               	movwf	(??___fleq+1)^0,c
  6272   002DE8  0E80               	movlw	128
  6273   002DEA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6274   002DEC  6E0B               	movwf	(??___fleq+2)^0,c
  6275   002DEE  0E7F               	movlw	127
  6276   002DF0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6277   002DF2  6E0C               	movwf	(??___fleq+3)^0,c
  6278   002DF4  5009               	movf	??___fleq^0,w,c
  6279   002DF6  100A               	iorwf	(??___fleq+1)^0,w,c
  6280   002DF8  100B               	iorwf	(??___fleq+2)^0,w,c
  6281   002DFA  100C               	iorwf	(??___fleq+3)^0,w,c
  6282   002DFC  A4D8               	btfss	status,2,c
  6283   002DFE  EF03  F017         	goto	u3301
  6284   002E02  EF05  F017         	goto	u3300
  6285   002E06                     u3301:
  6286   002E06  EF0D  F017         	goto	l3138
  6287   002E0A                     u3300:
  6288   002E0A  0E00               	movlw	0
  6289   002E0C  6E01               	movwf	___fleq@ff1^0,c
  6290   002E0E  0E00               	movlw	0
  6291   002E10  6E02               	movwf	(___fleq@ff1+1)^0,c
  6292   002E12  0E00               	movlw	0
  6293   002E14  6E03               	movwf	(___fleq@ff1+2)^0,c
  6294   002E16  0E00               	movlw	0
  6295   002E18  6E04               	movwf	(___fleq@ff1+3)^0,c
  6296   002E1A                     l3138:
  6297   002E1A  0E00               	movlw	0
  6298   002E1C  1405               	andwf	___fleq@ff2^0,w,c
  6299   002E1E  6E09               	movwf	??___fleq^0,c
  6300   002E20  0E00               	movlw	0
  6301   002E22  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6302   002E24  6E0A               	movwf	(??___fleq+1)^0,c
  6303   002E26  0E80               	movlw	128
  6304   002E28  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6305   002E2A  6E0B               	movwf	(??___fleq+2)^0,c
  6306   002E2C  0E7F               	movlw	127
  6307   002E2E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6308   002E30  6E0C               	movwf	(??___fleq+3)^0,c
  6309   002E32  5009               	movf	??___fleq^0,w,c
  6310   002E34  100A               	iorwf	(??___fleq+1)^0,w,c
  6311   002E36  100B               	iorwf	(??___fleq+2)^0,w,c
  6312   002E38  100C               	iorwf	(??___fleq+3)^0,w,c
  6313   002E3A  A4D8               	btfss	status,2,c
  6314   002E3C  EF22  F017         	goto	u3311
  6315   002E40  EF24  F017         	goto	u3310
  6316   002E44                     u3311:
  6317   002E44  EF2C  F017         	goto	l3142
  6318   002E48                     u3310:
  6319   002E48  0E00               	movlw	0
  6320   002E4A  6E05               	movwf	___fleq@ff2^0,c
  6321   002E4C  0E00               	movlw	0
  6322   002E4E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6323   002E50  0E00               	movlw	0
  6324   002E52  6E07               	movwf	(___fleq@ff2+2)^0,c
  6325   002E54  0E00               	movlw	0
  6326   002E56  6E08               	movwf	(___fleq@ff2+3)^0,c
  6327   002E58                     l3142:
  6328   002E58  5005               	movf	___fleq@ff2^0,w,c
  6329   002E5A  1801               	xorwf	___fleq@ff1^0,w,c
  6330   002E5C  E10F               	bnz	u3320
  6331   002E5E  5006               	movf	(___fleq@ff2+1)^0,w,c
  6332   002E60  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6333   002E62  E10C               	bnz	u3320
  6334   002E64  5007               	movf	(___fleq@ff2+2)^0,w,c
  6335   002E66  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6336   002E68  E109               	bnz	u3320
  6337   002E6A  5008               	movf	(___fleq@ff2+3)^0,w,c
  6338   002E6C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6339   002E6E  B4D8               	btfsc	status,2,c
  6340   002E70  EF3C  F017         	goto	u3321
  6341   002E74  EF3E  F017         	goto	u3320
  6342   002E78                     u3321:
  6343   002E78  EF41  F017         	goto	l3146
  6344   002E7C                     u3320:
  6345   002E7C  90D8               	bcf	status,0,c
  6346   002E7E  EF42  F017         	goto	l479
  6347   002E82                     l3146:
  6348   002E82  80D8               	bsf	status,0,c
  6349   002E84                     l479:
  6350   002E84  0012               	return		;funcret
  6351   002E86                     __end_of___fleq:
  6352                           	callstack 0
  6353                           
  6354 ;; *************** function _dtoa *****************
  6355 ;; Defined at:
  6356 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6359 ;;		 -> sprintf@f(11), 
  6360 ;;  d               2   23[COMRAM] int 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  i               2   32[COMRAM] int 
  6363 ;;  p               2   29[COMRAM] int 
  6364 ;;  w               2   27[COMRAM] int 
  6365 ;;  s               1   31[COMRAM] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6375 ;;      Params:         3       0       0       0       0       0       0
  6376 ;;      Locals:         9       0       0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0
  6378 ;;      Totals:        12       0       0       0       0       0       0
  6379 ;;Total ram usage:       12 bytes
  6380 ;; Hardware stack levels used: 1
  6381 ;; Hardware stack levels required when called: 5
  6382 ;; This function calls:
  6383 ;;		___awdiv
  6384 ;;		___awmod
  6385 ;;		_abs
  6386 ;;		_pad
  6387 ;; This function is called by:
  6388 ;;		_vfpfcnvrt
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text17
  6393   0027EC                     __ptext17:
  6394                           	callstack 0
  6395   0027EC                     _dtoa:
  6396                           	callstack 22
  6397   0027EC                     
  6398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6399   0027EC  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6400   0027EE  EFFB  F013         	goto	u3691
  6401   0027F2  EFFE  F013         	goto	u3690
  6402   0027F6                     u3691:
  6403   0027F6  0E01               	movlw	1
  6404   0027F8  EFFF  F013         	goto	u3700
  6405   0027FC                     u3690:
  6406   0027FC  0E00               	movlw	0
  6407   0027FE                     u3700:
  6408   0027FE  6E20               	movwf	dtoa@s^0,c
  6409                           
  6410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6411   002800  0100               	movlb	0	; () banked
  6412   002802  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  6413   002804  EF08  F014         	goto	u3710
  6414   002808  EF06  F014         	goto	u3711
  6415   00280C                     u3711:
  6416   00280C  EF0E  F014         	goto	l935
  6417   002810                     u3710:
  6418   002810                     
  6419                           ; BSR set to: 0
  6420   002810  0E00               	movlw	0
  6421   002812  6E1F               	movwf	(dtoa@p+1)^0,c
  6422   002814  0E01               	movlw	1
  6423   002816  6E1E               	movwf	dtoa@p^0,c
  6424   002818  EF12  F014         	goto	l937
  6425   00281C                     l935:
  6426                           
  6427                           ; BSR set to: 0
  6428   00281C  C0DC  F01E         	movff	_prec,dtoa@p
  6429   002820  C0DD  F01F         	movff	_prec+1,dtoa@p+1
  6430   002824                     l937:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6434   002824  C0DA  F01C         	movff	_width,dtoa@w
  6435   002828  C0DB  F01D         	movff	_width+1,dtoa@w+1
  6436   00282C                     
  6437                           ; BSR set to: 0
  6438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  6439   00282C  5020               	movf	dtoa@s^0,w,c
  6440   00282E  B4D8               	btfsc	status,2,c
  6441   002830  EF1C  F014         	goto	u3721
  6442   002834  EF1E  F014         	goto	u3720
  6443   002838                     u3721:
  6444   002838  EF35  F014         	goto	l938
  6445   00283C                     u3720:
  6446   00283C                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  6449   00283C  061C               	decf	dtoa@w^0,f,c
  6450   00283E  A0D8               	btfss	status,0,c
  6451   002840  061D               	decf	(dtoa@w+1)^0,f,c
  6452   002842                     
  6453                           ; BSR set to: 0
  6454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6455   002842  5020               	movf	dtoa@s^0,w,c
  6456   002844  A4D8               	btfss	status,2,c
  6457   002846  EF27  F014         	goto	u3731
  6458   00284A  EF29  F014         	goto	u3730
  6459   00284E                     u3731:
  6460   00284E  EF2F  F014         	goto	l3326
  6461   002852                     u3730:
  6462   002852                     
  6463                           ; BSR set to: 0
  6464   002852  0E00               	movlw	0
  6465   002854  6E1B               	movwf	(_dtoa$1349+1)^0,c
  6466   002856  0E2B               	movlw	43
  6467   002858  6E1A               	movwf	_dtoa$1349^0,c
  6468   00285A  EF33  F014         	goto	l3328
  6469   00285E                     l3326:
  6470                           
  6471                           ; BSR set to: 0
  6472   00285E  0E00               	movlw	0
  6473   002860  6E1B               	movwf	(_dtoa$1349+1)^0,c
  6474   002862  0E2D               	movlw	45
  6475   002864  6E1A               	movwf	_dtoa$1349^0,c
  6476   002866                     l3328:
  6477                           
  6478                           ; BSR set to: 0
  6479   002866  C01A  F020         	movff	_dtoa$1349,dtoa@s
  6480   00286A                     l938:
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6484   00286A  0E00               	movlw	0
  6485   00286C  6E22               	movwf	(dtoa@i+1)^0,c
  6486   00286E  0E4F               	movlw	79
  6487   002870  6E21               	movwf	dtoa@i^0,c
  6488   002872                     
  6489                           ; BSR set to: 0
  6490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6491   002872  0101               	movlb	1	; () banked
  6492   002874  6B4F               	clrf	(_dbuf+79)& (0+255),b
  6493                           
  6494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6495   002876  EF6D  F014         	goto	l3342
  6496   00287A                     l3332:
  6497                           
  6498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  6499   00287A  0621               	decf	dtoa@i^0,f,c
  6500   00287C  A0D8               	btfss	status,0,c
  6501   00287E  0622               	decf	(dtoa@i+1)^0,f,c
  6502   002880                     
  6503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6504   002880  0E00               	movlw	low _dbuf
  6505   002882  2421               	addwf	dtoa@i^0,w,c
  6506   002884  6ED9               	movwf	fsr2l,c
  6507   002886  0E01               	movlw	high _dbuf
  6508   002888  2022               	addwfc	(dtoa@i+1)^0,w,c
  6509   00288A  6EDA               	movwf	fsr2h,c
  6510   00288C  C018  F001         	movff	dtoa@d,___awmod@dividend
  6511   002890  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6512   002894  0E00               	movlw	0
  6513   002896  6E04               	movwf	(___awmod@divisor+1)^0,c
  6514   002898  0E0A               	movlw	10
  6515   00289A  6E03               	movwf	___awmod@divisor^0,c
  6516   00289C  EC97  F016         	call	___awmod	;wreg free
  6517   0028A0  C001  F007         	movff	?___awmod,abs@a
  6518   0028A4  C002  F008         	movff	?___awmod+1,abs@a+1
  6519   0028A8  ECC5  F01A         	call	_abs	;wreg free
  6520   0028AC  5007               	movf	?_abs^0,w,c
  6521   0028AE  0F30               	addlw	48
  6522   0028B0  6EDF               	movwf	indf2,c
  6523   0028B2                     
  6524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
  6525   0028B2  061E               	decf	dtoa@p^0,f,c
  6526   0028B4  A0D8               	btfss	status,0,c
  6527   0028B6  061F               	decf	(dtoa@p+1)^0,f,c
  6528   0028B8                     
  6529                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  6530   0028B8  061C               	decf	dtoa@w^0,f,c
  6531   0028BA  A0D8               	btfss	status,0,c
  6532   0028BC  061D               	decf	(dtoa@w+1)^0,f,c
  6533   0028BE                     
  6534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6535   0028BE  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6536   0028C2  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6537   0028C6  0E00               	movlw	0
  6538   0028C8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6539   0028CA  0E0A               	movlw	10
  6540   0028CC  6E03               	movwf	___awdiv@divisor^0,c
  6541   0028CE  EC36  F016         	call	___awdiv	;wreg free
  6542   0028D2  C001  F018         	movff	?___awdiv,dtoa@d
  6543   0028D6  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6544   0028DA                     l3342:
  6545                           
  6546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6547   0028DA  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6548   0028DC  EF78  F014         	goto	u3741
  6549   0028E0  5022               	movf	(dtoa@i+1)^0,w,c
  6550   0028E2  E108               	bnz	u3740
  6551   0028E4  0421               	decf	dtoa@i^0,w,c
  6552   0028E6  A0D8               	btfss	status,0,c
  6553   0028E8  EF78  F014         	goto	u3741
  6554   0028EC  EF7A  F014         	goto	u3740
  6555   0028F0                     u3741:
  6556   0028F0  EF90  F014         	goto	l3348
  6557   0028F4                     u3740:
  6558   0028F4  5018               	movf	dtoa@d^0,w,c
  6559   0028F6  1019               	iorwf	(dtoa@d+1)^0,w,c
  6560   0028F8  A4D8               	btfss	status,2,c
  6561   0028FA  EF81  F014         	goto	u3751
  6562   0028FE  EF83  F014         	goto	u3750
  6563   002902                     u3751:
  6564   002902  EF3D  F014         	goto	l3332
  6565   002906                     u3750:
  6566   002906  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6567   002908  EF90  F014         	goto	u3760
  6568   00290C  501F               	movf	(dtoa@p+1)^0,w,c
  6569   00290E  E106               	bnz	u3761
  6570   002910  041E               	decf	dtoa@p^0,w,c
  6571   002912  B0D8               	btfsc	status,0,c
  6572   002914  EF8E  F014         	goto	u3761
  6573   002918  EF90  F014         	goto	u3760
  6574   00291C                     u3761:
  6575   00291C  EF3D  F014         	goto	l3332
  6576   002920                     u3760:
  6577   002920                     l3348:
  6578                           
  6579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6580   002920  5020               	movf	dtoa@s^0,w,c
  6581   002922  B4D8               	btfsc	status,2,c
  6582   002924  EF96  F014         	goto	u3771
  6583   002928  EF98  F014         	goto	u3770
  6584   00292C                     u3771:
  6585   00292C  EFA3  F014         	goto	l3354
  6586   002930                     u3770:
  6587   002930                     
  6588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  6589   002930  0621               	decf	dtoa@i^0,f,c
  6590   002932  A0D8               	btfss	status,0,c
  6591   002934  0622               	decf	(dtoa@i+1)^0,f,c
  6592   002936                     
  6593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6594   002936  0E00               	movlw	low _dbuf
  6595   002938  2421               	addwf	dtoa@i^0,w,c
  6596   00293A  6ED9               	movwf	fsr2l,c
  6597   00293C  0E01               	movlw	high _dbuf
  6598   00293E  2022               	addwfc	(dtoa@i+1)^0,w,c
  6599   002940  6EDA               	movwf	fsr2h,c
  6600   002942  C020  FFDF         	movff	dtoa@s,indf2
  6601   002946                     l3354:
  6602                           
  6603                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6604   002946  C017  F00F         	movff	dtoa@fp,pad@fp
  6605   00294A  0E00               	movlw	low _dbuf
  6606   00294C  2421               	addwf	dtoa@i^0,w,c
  6607   00294E  6E10               	movwf	pad@buf^0,c
  6608   002950  0E01               	movlw	high _dbuf
  6609   002952  2022               	addwfc	(dtoa@i+1)^0,w,c
  6610   002954  6E11               	movwf	(pad@buf+1)^0,c
  6611   002956  C01C  F012         	movff	dtoa@w,pad@p
  6612   00295A  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6613   00295E  ECB4  F018         	call	_pad	;wreg free
  6614   002962  0012               	return		;funcret
  6615   002964                     __end_of_dtoa:
  6616                           	callstack 0
  6617                           
  6618 ;; *************** function _pad *****************
  6619 ;; Defined at:
  6620 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6623 ;;		 -> sprintf@f(11), 
  6624 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6625 ;;		 -> dbuf(80), 
  6626 ;;  p               2   17[COMRAM] int 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  i               2   20[COMRAM] int 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6638 ;;      Params:         5       0       0       0       0       0       0
  6639 ;;      Locals:         2       0       0       0       0       0       0
  6640 ;;      Temps:          1       0       0       0       0       0       0
  6641 ;;      Totals:         8       0       0       0       0       0       0
  6642 ;;Total ram usage:        8 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 4
  6645 ;; This function calls:
  6646 ;;		_fputc
  6647 ;;		_fputs
  6648 ;; This function is called by:
  6649 ;;		_dtoa
  6650 ;;		_efgtoa
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text18
  6655   003168                     __ptext18:
  6656                           	callstack 0
  6657   003168                     _pad:
  6658                           	callstack 22
  6659   003168                     
  6660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6661   003168  BE13               	btfsc	(pad@p+1)^0,7,c
  6662   00316A  EFBB  F018         	goto	u3460
  6663   00316E  EFB9  F018         	goto	u3461
  6664   003172                     u3461:
  6665   003172  EFBF  F018         	goto	l927
  6666   003176                     u3460:
  6667   003176                     
  6668                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6669   003176  0E00               	movlw	0
  6670   003178  6E13               	movwf	(pad@p+1)^0,c
  6671   00317A  0E00               	movlw	0
  6672   00317C  6E12               	movwf	pad@p^0,c
  6673   00317E                     l927:
  6674                           
  6675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6676   00317E  0E00               	movlw	0
  6677   003180  6E16               	movwf	(pad@i+1)^0,c
  6678   003182  0E00               	movlw	0
  6679   003184  6E15               	movwf	pad@i^0,c
  6680                           
  6681                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6682   003186  EFCF  F018         	goto	l3232
  6683   00318A                     l3228:
  6684                           
  6685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6686   00318A  0E00               	movlw	0
  6687   00318C  6E02               	movwf	(fputc@c+1)^0,c
  6688   00318E  0E20               	movlw	32
  6689   003190  6E01               	movwf	fputc@c^0,c
  6690   003192  C00F  F003         	movff	pad@fp,fputc@fp
  6691   003196  EC43  F017         	call	_fputc	;wreg free
  6692   00319A                     
  6693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6694   00319A  4A15               	infsnz	pad@i^0,f,c
  6695   00319C  2A16               	incf	(pad@i+1)^0,f,c
  6696   00319E                     l3232:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6699   00319E  5012               	movf	pad@p^0,w,c
  6700   0031A0  5C15               	subwf	pad@i^0,w,c
  6701   0031A2  5016               	movf	(pad@i+1)^0,w,c
  6702   0031A4  0A80               	xorlw	128
  6703   0031A6  6E14               	movwf	??_pad^0,c
  6704   0031A8  5013               	movf	(pad@p+1)^0,w,c
  6705   0031AA  0A80               	xorlw	128
  6706   0031AC  5814               	subwfb	??_pad^0,w,c
  6707   0031AE  A0D8               	btfss	status,0,c
  6708   0031B0  EFDC  F018         	goto	u3471
  6709   0031B4  EFDE  F018         	goto	u3470
  6710   0031B8                     u3471:
  6711   0031B8  EFC5  F018         	goto	l3228
  6712   0031BC                     u3470:
  6713   0031BC                     
  6714                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6715   0031BC  C010  F009         	movff	pad@buf,fputs@s
  6716   0031C0  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6717   0031C4  C00F  F00B         	movff	pad@fp,fputs@fp
  6718   0031C8  EC50  F01A         	call	_fputs	;wreg free
  6719   0031CC  0012               	return		;funcret
  6720   0031CE                     __end_of_pad:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function _fputs *****************
  6724 ;; Defined at:
  6725 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6728 ;;		 -> dbuf(80), 
  6729 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6730 ;;		 -> sprintf@f(11), 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  i               2   12[COMRAM] int 
  6733 ;;  c               1   11[COMRAM] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  2    8[COMRAM] int 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6743 ;;      Params:         3       0       0       0       0       0       0
  6744 ;;      Locals:         3       0       0       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0
  6746 ;;      Totals:         6       0       0       0       0       0       0
  6747 ;;Total ram usage:        6 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 3
  6750 ;; This function calls:
  6751 ;;		_fputc
  6752 ;; This function is called by:
  6753 ;;		_pad
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text19
  6758   0034A0                     __ptext19:
  6759                           	callstack 0
  6760   0034A0                     _fputs:
  6761                           	callstack 22
  6762   0034A0  0E00               	movlw	0
  6763   0034A2  6E0E               	movwf	(fputs@i+1)^0,c
  6764   0034A4  0E00               	movlw	0
  6765   0034A6  6E0D               	movwf	fputs@i^0,c
  6766   0034A8  EF5F  F01A         	goto	l2782
  6767   0034AC                     l2778:
  6768   0034AC  C00C  F001         	movff	fputs@c,fputc@c
  6769   0034B0  6A02               	clrf	(fputc@c+1)^0,c
  6770   0034B2  C00B  F003         	movff	fputs@fp,fputc@fp
  6771   0034B6  EC43  F017         	call	_fputc	;wreg free
  6772   0034BA  4A0D               	infsnz	fputs@i^0,f,c
  6773   0034BC  2A0E               	incf	(fputs@i+1)^0,f,c
  6774   0034BE                     l2782:
  6775   0034BE  500D               	movf	fputs@i^0,w,c
  6776   0034C0  2409               	addwf	fputs@s^0,w,c
  6777   0034C2  6ED9               	movwf	fsr2l,c
  6778   0034C4  500E               	movf	(fputs@i+1)^0,w,c
  6779   0034C6  200A               	addwfc	(fputs@s+1)^0,w,c
  6780   0034C8  6EDA               	movwf	fsr2h,c
  6781   0034CA  50DF               	movf	indf2,w,c
  6782   0034CC  6E0C               	movwf	fputs@c^0,c
  6783   0034CE  500C               	movf	fputs@c^0,w,c
  6784   0034D0  A4D8               	btfss	status,2,c
  6785   0034D2  EF6D  F01A         	goto	u2751
  6786   0034D6  EF6F  F01A         	goto	u2750
  6787   0034DA                     u2751:
  6788   0034DA  EF56  F01A         	goto	l2778
  6789   0034DE                     u2750:
  6790   0034DE  0012               	return		;funcret
  6791   0034E0                     __end_of_fputs:
  6792                           	callstack 0
  6793                           
  6794 ;; *************** function _fputc *****************
  6795 ;; Defined at:
  6796 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  c               2    0[COMRAM] int 
  6799 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6800 ;;		 -> sprintf@f(11), 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  2    0[COMRAM] int 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6812 ;;      Params:         3       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0
  6814 ;;      Temps:          5       0       0       0       0       0       0
  6815 ;;      Totals:         8       0       0       0       0       0       0
  6816 ;;Total ram usage:        8 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 2
  6819 ;; This function calls:
  6820 ;;		_putch
  6821 ;; This function is called by:
  6822 ;;		_pad
  6823 ;;		_vfpfcnvrt
  6824 ;;		_fputs
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text20
  6829   002E86                     __ptext20:
  6830                           	callstack 0
  6831   002E86                     _fputc:
  6832                           	callstack 25
  6833   002E86  5003               	movf	fputc@fp^0,w,c
  6834   002E88  B4D8               	btfsc	status,2,c
  6835   002E8A  EF49  F017         	goto	u2321
  6836   002E8E  EF4B  F017         	goto	u2320
  6837   002E92                     u2321:
  6838   002E92  EF53  F017         	goto	l2572
  6839   002E96                     u2320:
  6840   002E96  5003               	movf	fputc@fp^0,w,c
  6841   002E98  A4D8               	btfss	status,2,c
  6842   002E9A  EF51  F017         	goto	u2331
  6843   002E9E  EF53  F017         	goto	u2330
  6844   002EA2                     u2331:
  6845   002EA2  EF58  F017         	goto	l2574
  6846   002EA6                     u2330:
  6847   002EA6                     l2572:
  6848   002EA6  5001               	movf	fputc@c^0,w,c
  6849   002EA8  EC69  F01B         	call	_putch
  6850   002EAC  EF97  F017         	goto	l1095
  6851   002EB0                     l2574:
  6852   002EB0  5003               	movf	fputc@fp^0,w,c
  6853   002EB2  6ED9               	movwf	fsr2l,c
  6854   002EB4  6ADA               	clrf	fsr2h,c
  6855   002EB6  0E09               	movlw	9
  6856   002EB8  26D9               	addwf	fsr2l,f,c
  6857   002EBA  50DE               	movf	postinc2,w,c
  6858   002EBC  10DE               	iorwf	postinc2,w,c
  6859   002EBE  B4D8               	btfsc	status,2,c
  6860   002EC0  EF64  F017         	goto	u2341
  6861   002EC4  EF66  F017         	goto	u2340
  6862   002EC8                     u2341:
  6863   002EC8  EF7F  F017         	goto	l2578
  6864   002ECC                     u2340:
  6865   002ECC  5003               	movf	fputc@fp^0,w,c
  6866   002ECE  6ED9               	movwf	fsr2l,c
  6867   002ED0  6ADA               	clrf	fsr2h,c
  6868   002ED2  0E09               	movlw	9
  6869   002ED4  26D9               	addwf	fsr2l,f,c
  6870   002ED6  5003               	movf	fputc@fp^0,w,c
  6871   002ED8  6EE1               	movwf	fsr1l,c
  6872   002EDA  6AE2               	clrf	fsr1h,c
  6873   002EDC  0E02               	movlw	2
  6874   002EDE  26E1               	addwf	fsr1l,f,c
  6875   002EE0  50DE               	movf	postinc2,w,c
  6876   002EE2  5CE6               	subwf	postinc1,w,c
  6877   002EE4  50E6               	movf	postinc1,w,c
  6878   002EE6  0A80               	xorlw	128
  6879   002EE8  6E08               	movwf	(??_fputc+4)^0,c
  6880   002EEA  50DE               	movf	postinc2,w,c
  6881   002EEC  0A80               	xorlw	128
  6882   002EEE  5808               	subwfb	(??_fputc+4)^0,w,c
  6883   002EF0  B0D8               	btfsc	status,0,c
  6884   002EF2  EF7D  F017         	goto	u2351
  6885   002EF6  EF7F  F017         	goto	u2350
  6886   002EFA                     u2351:
  6887   002EFA  EF97  F017         	goto	l1095
  6888   002EFE                     u2350:
  6889   002EFE                     l2578:
  6890   002EFE  5003               	movf	fputc@fp^0,w,c
  6891   002F00  6ED9               	movwf	fsr2l,c
  6892   002F02  6ADA               	clrf	fsr2h,c
  6893   002F04  0E02               	movlw	2
  6894   002F06  26D9               	addwf	fsr2l,f,c
  6895   002F08  50DF               	movf	indf2,w,c
  6896   002F0A  6E04               	movwf	??_fputc^0,c
  6897   002F0C  5003               	movf	fputc@fp^0,w,c
  6898   002F0E  6ED9               	movwf	fsr2l,c
  6899   002F10  6ADA               	clrf	fsr2h,c
  6900   002F12  50DF               	movf	indf2,w,c
  6901   002F14  2404               	addwf	??_fputc^0,w,c
  6902   002F16  6ED9               	movwf	fsr2l,c
  6903   002F18  6ADA               	clrf	fsr2h,c
  6904   002F1A  C001  FFDF         	movff	fputc@c,indf2
  6905   002F1E  5003               	movf	fputc@fp^0,w,c
  6906   002F20  6ED9               	movwf	fsr2l,c
  6907   002F22  6ADA               	clrf	fsr2h,c
  6908   002F24  0E02               	movlw	2
  6909   002F26  26D9               	addwf	fsr2l,f,c
  6910   002F28  2ADE               	incf	postinc2,f,c
  6911   002F2A  0E00               	movlw	0
  6912   002F2C  22DD               	addwfc	postdec2,f,c
  6913   002F2E                     l1095:
  6914   002F2E  0012               	return		;funcret
  6915   002F30                     __end_of_fputc:
  6916                           	callstack 0
  6917                           
  6918 ;; *************** function _putch *****************
  6919 ;; Defined at:
  6920 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  c               1    wreg     unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  c               1    0[COMRAM] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6934 ;;      Params:         0       0       0       0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 1
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_fputc
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text21
  6949   0036D2                     __ptext21:
  6950                           	callstack 0
  6951   0036D2                     _putch:
  6952                           	callstack 25
  6953   0036D2  0012               	return		;funcret
  6954   0036D4                     __end_of_putch:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _abs *****************
  6958 ;; Defined at:
  6959 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  a               2    6[COMRAM] int 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  2    6[COMRAM] int 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6973 ;;      Params:         2       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0
  6975 ;;      Temps:          2       0       0       0       0       0       0
  6976 ;;      Totals:         4       0       0       0       0       0       0
  6977 ;;Total ram usage:        4 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 1
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_dtoa
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text22
  6988   00358A                     __ptext22:
  6989                           	callstack 0
  6990   00358A                     _abs:
  6991                           	callstack 25
  6992   00358A  BE08               	btfsc	(abs@a+1)^0,7,c
  6993   00358C  EFCA  F01A         	goto	u3481
  6994   003590  EFCC  F01A         	goto	u3480
  6995   003594                     u3481:
  6996   003594  EFD2  F01A         	goto	l1054
  6997   003598                     u3480:
  6998   003598  C007  F007         	movff	abs@a,?_abs
  6999   00359C  C008  F008         	movff	abs@a+1,?_abs+1
  7000   0035A0  EFDE  F01A         	goto	l1057
  7001   0035A4                     l1054:
  7002   0035A4  C007  F009         	movff	abs@a,??_abs
  7003   0035A8  C008  F00A         	movff	abs@a+1,??_abs+1
  7004   0035AC  1E09               	comf	??_abs^0,f,c
  7005   0035AE  1E0A               	comf	(??_abs+1)^0,f,c
  7006   0035B0  4A09               	infsnz	??_abs^0,f,c
  7007   0035B2  2A0A               	incf	(??_abs+1)^0,f,c
  7008   0035B4  C009  F007         	movff	??_abs,?_abs
  7009   0035B8  C00A  F008         	movff	??_abs+1,?_abs+1
  7010   0035BC                     l1057:
  7011   0035BC  0012               	return		;funcret
  7012   0035BE                     __end_of_abs:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function ___awmod *****************
  7016 ;; Defined at:
  7017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  dividend        2    0[COMRAM] int 
  7020 ;;  divisor         2    2[COMRAM] int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  sign            1    5[COMRAM] unsigned char 
  7023 ;;  counter         1    4[COMRAM] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  2    0[COMRAM] int 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7033 ;;      Params:         4       0       0       0       0       0       0
  7034 ;;      Locals:         2       0       0       0       0       0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0
  7036 ;;      Totals:         6       0       0       0       0       0       0
  7037 ;;Total ram usage:        6 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_dtoa
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text23
  7048   002D2E                     __ptext23:
  7049                           	callstack 0
  7050   002D2E                     ___awmod:
  7051                           	callstack 25
  7052   002D2E  6A06               	clrf	___awmod@sign^0,c
  7053   002D30  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7054   002D32  EF9F  F016         	goto	u3240
  7055   002D36  EF9D  F016         	goto	u3241
  7056   002D3A                     u3241:
  7057   002D3A  EFA5  F016         	goto	l3106
  7058   002D3E                     u3240:
  7059   002D3E  6C01               	negf	___awmod@dividend^0,c
  7060   002D40  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7061   002D42  B0D8               	btfsc	status,0,c
  7062   002D44  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7063   002D46  0E01               	movlw	1
  7064   002D48  6E06               	movwf	___awmod@sign^0,c
  7065   002D4A                     l3106:
  7066   002D4A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7067   002D4C  EFAC  F016         	goto	u3250
  7068   002D50  EFAA  F016         	goto	u3251
  7069   002D54                     u3251:
  7070   002D54  EFB0  F016         	goto	l3110
  7071   002D58                     u3250:
  7072   002D58  6C03               	negf	___awmod@divisor^0,c
  7073   002D5A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7074   002D5C  B0D8               	btfsc	status,0,c
  7075   002D5E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7076   002D60                     l3110:
  7077   002D60  5003               	movf	___awmod@divisor^0,w,c
  7078   002D62  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7079   002D64  B4D8               	btfsc	status,2,c
  7080   002D66  EFB7  F016         	goto	u3261
  7081   002D6A  EFB9  F016         	goto	u3260
  7082   002D6E                     u3261:
  7083   002D6E  EFDD  F016         	goto	l3126
  7084   002D72                     u3260:
  7085   002D72  0E01               	movlw	1
  7086   002D74  6E05               	movwf	___awmod@counter^0,c
  7087   002D76  EFC1  F016         	goto	l3116
  7088   002D7A                     l3114:
  7089   002D7A  90D8               	bcf	status,0,c
  7090   002D7C  3603               	rlcf	___awmod@divisor^0,f,c
  7091   002D7E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7092   002D80  2A05               	incf	___awmod@counter^0,f,c
  7093   002D82                     l3116:
  7094   002D82  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7095   002D84  EFC6  F016         	goto	u3271
  7096   002D88  EFC8  F016         	goto	u3270
  7097   002D8C                     u3271:
  7098   002D8C  EFBD  F016         	goto	l3114
  7099   002D90                     u3270:
  7100   002D90                     l3118:
  7101   002D90  5003               	movf	___awmod@divisor^0,w,c
  7102   002D92  5C01               	subwf	___awmod@dividend^0,w,c
  7103   002D94  5004               	movf	(___awmod@divisor+1)^0,w,c
  7104   002D96  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7105   002D98  A0D8               	btfss	status,0,c
  7106   002D9A  EFD1  F016         	goto	u3281
  7107   002D9E  EFD3  F016         	goto	u3280
  7108   002DA2                     u3281:
  7109   002DA2  EFD7  F016         	goto	l3122
  7110   002DA6                     u3280:
  7111   002DA6  5003               	movf	___awmod@divisor^0,w,c
  7112   002DA8  5E01               	subwf	___awmod@dividend^0,f,c
  7113   002DAA  5004               	movf	(___awmod@divisor+1)^0,w,c
  7114   002DAC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7115   002DAE                     l3122:
  7116   002DAE  90D8               	bcf	status,0,c
  7117   002DB0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7118   002DB2  3203               	rrcf	___awmod@divisor^0,f,c
  7119   002DB4  2E05               	decfsz	___awmod@counter^0,f,c
  7120   002DB6  EFC8  F016         	goto	l3118
  7121   002DBA                     l3126:
  7122   002DBA  5006               	movf	___awmod@sign^0,w,c
  7123   002DBC  B4D8               	btfsc	status,2,c
  7124   002DBE  EFE3  F016         	goto	u3291
  7125   002DC2  EFE5  F016         	goto	u3290
  7126   002DC6                     u3291:
  7127   002DC6  EFE9  F016         	goto	l3130
  7128   002DCA                     u3290:
  7129   002DCA  6C01               	negf	___awmod@dividend^0,c
  7130   002DCC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7131   002DCE  B0D8               	btfsc	status,0,c
  7132   002DD0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7133   002DD2                     l3130:
  7134   002DD2  C001  F001         	movff	___awmod@dividend,?___awmod
  7135   002DD6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7136   002DDA  0012               	return		;funcret
  7137   002DDC                     __end_of___awmod:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function ___awdiv *****************
  7141 ;; Defined at:
  7142 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  dividend        2    0[COMRAM] int 
  7145 ;;  divisor         2    2[COMRAM] int 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  quotient        2    6[COMRAM] int 
  7148 ;;  sign            1    5[COMRAM] unsigned char 
  7149 ;;  counter         1    4[COMRAM] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  2    0[COMRAM] int 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7159 ;;      Params:         4       0       0       0       0       0       0
  7160 ;;      Locals:         4       0       0       0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0
  7162 ;;      Totals:         8       0       0       0       0       0       0
  7163 ;;Total ram usage:        8 bytes
  7164 ;; Hardware stack levels used: 1
  7165 ;; Hardware stack levels required when called: 1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_dtoa
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text24
  7174   002C6C                     __ptext24:
  7175                           	callstack 0
  7176   002C6C                     ___awdiv:
  7177                           	callstack 25
  7178   002C6C  6A06               	clrf	___awdiv@sign^0,c
  7179   002C6E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7180   002C70  EF3E  F016         	goto	u3180
  7181   002C74  EF3C  F016         	goto	u3181
  7182   002C78                     u3181:
  7183   002C78  EF44  F016         	goto	l3062
  7184   002C7C                     u3180:
  7185   002C7C  6C03               	negf	___awdiv@divisor^0,c
  7186   002C7E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7187   002C80  B0D8               	btfsc	status,0,c
  7188   002C82  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7189   002C84  0E01               	movlw	1
  7190   002C86  6E06               	movwf	___awdiv@sign^0,c
  7191   002C88                     l3062:
  7192   002C88  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7193   002C8A  EF4B  F016         	goto	u3190
  7194   002C8E  EF49  F016         	goto	u3191
  7195   002C92                     u3191:
  7196   002C92  EF51  F016         	goto	l3068
  7197   002C96                     u3190:
  7198   002C96  6C01               	negf	___awdiv@dividend^0,c
  7199   002C98  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7200   002C9A  B0D8               	btfsc	status,0,c
  7201   002C9C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7202   002C9E  0E01               	movlw	1
  7203   002CA0  1A06               	xorwf	___awdiv@sign^0,f,c
  7204   002CA2                     l3068:
  7205   002CA2  0E00               	movlw	0
  7206   002CA4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7207   002CA6  0E00               	movlw	0
  7208   002CA8  6E07               	movwf	___awdiv@quotient^0,c
  7209   002CAA  5003               	movf	___awdiv@divisor^0,w,c
  7210   002CAC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7211   002CAE  B4D8               	btfsc	status,2,c
  7212   002CB0  EF5C  F016         	goto	u3201
  7213   002CB4  EF5E  F016         	goto	u3200
  7214   002CB8                     u3201:
  7215   002CB8  EF86  F016         	goto	l3090
  7216   002CBC                     u3200:
  7217   002CBC  0E01               	movlw	1
  7218   002CBE  6E05               	movwf	___awdiv@counter^0,c
  7219   002CC0  EF66  F016         	goto	l3076
  7220   002CC4                     l3074:
  7221   002CC4  90D8               	bcf	status,0,c
  7222   002CC6  3603               	rlcf	___awdiv@divisor^0,f,c
  7223   002CC8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7224   002CCA  2A05               	incf	___awdiv@counter^0,f,c
  7225   002CCC                     l3076:
  7226   002CCC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7227   002CCE  EF6B  F016         	goto	u3211
  7228   002CD2  EF6D  F016         	goto	u3210
  7229   002CD6                     u3211:
  7230   002CD6  EF62  F016         	goto	l3074
  7231   002CDA                     u3210:
  7232   002CDA                     l3078:
  7233   002CDA  90D8               	bcf	status,0,c
  7234   002CDC  3607               	rlcf	___awdiv@quotient^0,f,c
  7235   002CDE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7236   002CE0  5003               	movf	___awdiv@divisor^0,w,c
  7237   002CE2  5C01               	subwf	___awdiv@dividend^0,w,c
  7238   002CE4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7239   002CE6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7240   002CE8  A0D8               	btfss	status,0,c
  7241   002CEA  EF79  F016         	goto	u3221
  7242   002CEE  EF7B  F016         	goto	u3220
  7243   002CF2                     u3221:
  7244   002CF2  EF80  F016         	goto	l3086
  7245   002CF6                     u3220:
  7246   002CF6  5003               	movf	___awdiv@divisor^0,w,c
  7247   002CF8  5E01               	subwf	___awdiv@dividend^0,f,c
  7248   002CFA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7249   002CFC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7250   002CFE  8007               	bsf	___awdiv@quotient^0,0,c
  7251   002D00                     l3086:
  7252   002D00  90D8               	bcf	status,0,c
  7253   002D02  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7254   002D04  3203               	rrcf	___awdiv@divisor^0,f,c
  7255   002D06  2E05               	decfsz	___awdiv@counter^0,f,c
  7256   002D08  EF6D  F016         	goto	l3078
  7257   002D0C                     l3090:
  7258   002D0C  5006               	movf	___awdiv@sign^0,w,c
  7259   002D0E  B4D8               	btfsc	status,2,c
  7260   002D10  EF8C  F016         	goto	u3231
  7261   002D14  EF8E  F016         	goto	u3230
  7262   002D18                     u3231:
  7263   002D18  EF92  F016         	goto	l3094
  7264   002D1C                     u3230:
  7265   002D1C  6C07               	negf	___awdiv@quotient^0,c
  7266   002D1E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7267   002D20  B0D8               	btfsc	status,0,c
  7268   002D22  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7269   002D24                     l3094:
  7270   002D24  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7271   002D28  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7272   002D2C  0012               	return		;funcret
  7273   002D2E                     __end_of___awdiv:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _lcd_string *****************
  7277 ;; Defined at:
  7278 ;;		line 40 in file "lcd.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  str             2    2[COMRAM] PTR const unsigned char 
  7281 ;;		 -> STR_8(13), STR_7(17), STR_6(17), STR_5(17), 
  7282 ;;		 -> main@buffer(16), STR_3(13), STR_2(2), STR_1(10), 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7294 ;;      Params:         2       0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0
  7297 ;;      Totals:         2       0       0       0       0       0       0
  7298 ;;Total ram usage:        2 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; Hardware stack levels required when called: 3
  7301 ;; This function calls:
  7302 ;;		_lcd_data
  7303 ;; This function is called by:
  7304 ;;		_main
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text25
  7309   0031CE                     __ptext25:
  7310                           	callstack 0
  7311   0031CE                     _lcd_string:
  7312                           	callstack 27
  7313   0031CE                     
  7314                           ;lcd.c: 41:     while(*str) lcd_data(*str++);
  7315   0031CE  EFFD  F018         	goto	l3770
  7316   0031D2                     l3766:
  7317   0031D2  C003  FFF6         	movff	lcd_string@str,tblptrl
  7318   0031D6  C004  FFF7         	movff	lcd_string@str+1,tblptrh
  7319   0031DA  6AF8               	clrf	tblptru,c
  7320   0031DC  0E05               	movlw	(high __ramtop+-1)
  7321   0031DE  64F7               	cpfsgt	tblptrh,c
  7322   0031E0  D003               	bra	u4317
  7323   0031E2  0008               	tblrd		*
  7324   0031E4  50F5               	movf	tablat,w,c
  7325   0031E6  D005               	bra	u4310
  7326   0031E8                     u4317:
  7327   0031E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7328   0031EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7329   0031F0  50E7               	movf	indf1,w,c
  7330   0031F2                     u4310:
  7331   0031F2  EC53  F01B         	call	_lcd_data
  7332   0031F6  4A03               	infsnz	lcd_string@str^0,f,c
  7333   0031F8  2A04               	incf	(lcd_string@str+1)^0,f,c
  7334   0031FA                     l3770:
  7335   0031FA  C003  FFF6         	movff	lcd_string@str,tblptrl
  7336   0031FE  C004  FFF7         	movff	lcd_string@str+1,tblptrh
  7337   003202  6AF8               	clrf	tblptru,c
  7338   003204  0E05               	movlw	(high __ramtop+-1)
  7339   003206  64F7               	cpfsgt	tblptrh,c
  7340   003208  D003               	bra	u4327
  7341   00320A  0008               	tblrd		*
  7342   00320C  50F5               	movf	tablat,w,c
  7343   00320E  D005               	bra	u4320
  7344   003210                     u4327:
  7345   003210  CFF6 FFE1          	movff	tblptrl,fsr1l
  7346   003214  CFF7 FFE2          	movff	tblptrh,fsr1h
  7347   003218  50E7               	movf	indf1,w,c
  7348   00321A                     u4320:
  7349   00321A  0900               	iorlw	0
  7350   00321C  A4D8               	btfss	status,2,c
  7351   00321E  EF13  F019         	goto	u4331
  7352   003222  EF15  F019         	goto	u4330
  7353   003226                     u4331:
  7354   003226  EFE9  F018         	goto	l3766
  7355   00322A                     u4330:
  7356   00322A  0012               	return		;funcret
  7357   00322C                     __end_of_lcd_string:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function _lcd_data *****************
  7361 ;; Defined at:
  7362 ;;		line 22 in file "lcd.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  data            1    wreg     unsigned char 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  data            1    1[COMRAM] unsigned char 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7376 ;;      Params:         0       0       0       0       0       0       0
  7377 ;;      Locals:         1       0       0       0       0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0
  7379 ;;      Totals:         1       0       0       0       0       0       0
  7380 ;;Total ram usage:        1 bytes
  7381 ;; Hardware stack levels used: 1
  7382 ;; Hardware stack levels required when called: 2
  7383 ;; This function calls:
  7384 ;;		_lcd_enable
  7385 ;; This function is called by:
  7386 ;;		_lcd_string
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text26
  7391   0036A6                     __ptext26:
  7392                           	callstack 0
  7393   0036A6                     _lcd_data:
  7394                           	callstack 27
  7395                           
  7396                           ;incstack = 0
  7397                           ;lcd_data@data stored from wreg
  7398   0036A6  6E02               	movwf	lcd_data@data^0,c
  7399   0036A8                     
  7400                           ;lcd.c: 23:     PORTDbits.RD1 = 1;
  7401   0036A8  8283               	bsf	131,1,c	;volatile
  7402   0036AA                     
  7403                           ;lcd.c: 24:     PORTB = data;
  7404   0036AA  C002  FF81         	movff	lcd_data@data,3969	;volatile
  7405   0036AE                     
  7406                           ;lcd.c: 25:     lcd_enable();
  7407   0036AE  EC47  F01B         	call	_lcd_enable	;wreg free
  7408   0036B2  0012               	return		;funcret
  7409   0036B4                     __end_of_lcd_data:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _lcd_set_cursor *****************
  7413 ;; Defined at:
  7414 ;;		line 44 in file "lcd.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  row             1    wreg     unsigned char 
  7417 ;;  col             1    2[COMRAM] unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  row             1    5[COMRAM] unsigned char 
  7420 ;;  positions       2    3[COMRAM] unsigned char [2]
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7430 ;;      Params:         1       0       0       0       0       0       0
  7431 ;;      Locals:         3       0       0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0
  7433 ;;      Totals:         4       0       0       0       0       0       0
  7434 ;;Total ram usage:        4 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 3
  7437 ;; This function calls:
  7438 ;;		_lcd_cmd
  7439 ;; This function is called by:
  7440 ;;		_main
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text27
  7445   00365A                     __ptext27:
  7446                           	callstack 0
  7447   00365A                     _lcd_set_cursor:
  7448                           	callstack 27
  7449                           
  7450                           ;incstack = 0
  7451                           ;lcd_set_cursor@row stored from wreg
  7452   00365A  6E06               	movwf	lcd_set_cursor@row^0,c
  7453   00365C                     
  7454                           ;lcd.c: 45:     unsigned char positions[] = {0x80, 0xC0};
  7455   00365C  C07D  F004         	movff	lcd_set_cursor@F2716,lcd_set_cursor@positions
  7456   003660  C07E  F005         	movff	lcd_set_cursor@F2716+1,lcd_set_cursor@positions+1
  7457   003664                     
  7458                           ;lcd.c: 46:     lcd_cmd(positions[row] + col);
  7459   003664  5006               	movf	lcd_set_cursor@row^0,w,c
  7460   003666  0F04               	addlw	low lcd_set_cursor@positions
  7461   003668  6ED9               	movwf	fsr2l,c
  7462   00366A  6ADA               	clrf	fsr2h,c
  7463   00366C  50DF               	movf	indf2,w,c
  7464   00366E  2403               	addwf	lcd_set_cursor@col^0,w,c
  7465   003670  EC5A  F01B         	call	_lcd_cmd
  7466   003674  0012               	return		;funcret
  7467   003676                     __end_of_lcd_set_cursor:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function _lcd_init *****************
  7471 ;; Defined at:
  7472 ;;		line 28 in file "lcd.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7486 ;;      Params:         0       0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0
  7488 ;;      Temps:          1       0       0       0       0       0       0
  7489 ;;      Totals:         1       0       0       0       0       0       0
  7490 ;;Total ram usage:        1 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; Hardware stack levels required when called: 3
  7493 ;; This function calls:
  7494 ;;		_lcd_cmd
  7495 ;; This function is called by:
  7496 ;;		_main
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text28
  7501   0035BE                     __ptext28:
  7502                           	callstack 0
  7503   0035BE                     _lcd_init:
  7504                           	callstack 27
  7505   0035BE                     
  7506                           ;lcd.c: 29:     TRISB = 0x00;
  7507   0035BE  6A93               	clrf	147,c	;volatile
  7508                           
  7509                           ;lcd.c: 30:     TRISD1 = 0;
  7510   0035C0  9295               	bcf	3989,1,c	;volatile
  7511                           
  7512                           ;lcd.c: 31:     TRISD7 = 0;
  7513   0035C2  9E95               	bcf	3989,7,c	;volatile
  7514   0035C4                     
  7515                           ;lcd.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7516   0035C4  0E34               	movlw	52
  7517   0035C6  6E03               	movwf	??_lcd_init^0,c
  7518   0035C8  0EF2               	movlw	242
  7519   0035CA                     u4687:
  7520   0035CA  2EE8               	decfsz	wreg,f,c
  7521   0035CC  D7FE               	bra	u4687
  7522   0035CE  2E03               	decfsz	??_lcd_init^0,f,c
  7523   0035D0  D7FC               	bra	u4687
  7524   0035D2                     
  7525                           ;lcd.c: 34:     lcd_cmd(0x38);
  7526   0035D2  0E38               	movlw	56
  7527   0035D4  EC5A  F01B         	call	_lcd_cmd
  7528   0035D8                     
  7529                           ;lcd.c: 35:     lcd_cmd(0x0C);
  7530   0035D8  0E0C               	movlw	12
  7531   0035DA  EC5A  F01B         	call	_lcd_cmd
  7532   0035DE                     
  7533                           ;lcd.c: 36:     lcd_cmd(0x06);
  7534   0035DE  0E06               	movlw	6
  7535   0035E0  EC5A  F01B         	call	_lcd_cmd
  7536   0035E4                     
  7537                           ;lcd.c: 37:     lcd_cmd(0x01);
  7538   0035E4  0E01               	movlw	1
  7539   0035E6  EC5A  F01B         	call	_lcd_cmd
  7540   0035EA  0012               	return		;funcret
  7541   0035EC                     __end_of_lcd_init:
  7542                           	callstack 0
  7543                           
  7544 ;; *************** function _lcd_clear *****************
  7545 ;; Defined at:
  7546 ;;		line 49 in file "lcd.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7560 ;;      Params:         0       0       0       0       0       0       0
  7561 ;;      Locals:         0       0       0       0       0       0       0
  7562 ;;      Temps:          1       0       0       0       0       0       0
  7563 ;;      Totals:         1       0       0       0       0       0       0
  7564 ;;Total ram usage:        1 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 3
  7567 ;; This function calls:
  7568 ;;		_lcd_cmd
  7569 ;; This function is called by:
  7570 ;;		_main
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text29
  7575   003676                     __ptext29:
  7576                           	callstack 0
  7577   003676                     _lcd_clear:
  7578                           	callstack 27
  7579   003676                     
  7580                           ;lcd.c: 50:     lcd_cmd(0x01);
  7581   003676  0E01               	movlw	1
  7582   003678  EC5A  F01B         	call	_lcd_cmd
  7583   00367C                     
  7584                           ;lcd.c: 51:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7585   00367C  0E06               	movlw	6
  7586   00367E  6E03               	movwf	??_lcd_clear^0,c
  7587   003680  0E30               	movlw	48
  7588   003682                     u4697:
  7589   003682  2EE8               	decfsz	wreg,f,c
  7590   003684  D7FE               	bra	u4697
  7591   003686  2E03               	decfsz	??_lcd_clear^0,f,c
  7592   003688  D7FC               	bra	u4697
  7593   00368A  D000               	nop2	
  7594   00368C  0012               	return		;funcret
  7595   00368E                     __end_of_lcd_clear:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function _lcd_cmd *****************
  7599 ;; Defined at:
  7600 ;;		line 16 in file "lcd.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  cmd             1    wreg     unsigned char 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  cmd             1    1[COMRAM] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7614 ;;      Params:         0       0       0       0       0       0       0
  7615 ;;      Locals:         1       0       0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0
  7617 ;;      Totals:         1       0       0       0       0       0       0
  7618 ;;Total ram usage:        1 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 2
  7621 ;; This function calls:
  7622 ;;		_lcd_enable
  7623 ;; This function is called by:
  7624 ;;		_lcd_init
  7625 ;;		_lcd_set_cursor
  7626 ;;		_lcd_clear
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text30
  7631   0036B4                     __ptext30:
  7632                           	callstack 0
  7633   0036B4                     _lcd_cmd:
  7634                           	callstack 27
  7635                           
  7636                           ;incstack = 0
  7637                           ;lcd_cmd@cmd stored from wreg
  7638   0036B4  6E02               	movwf	lcd_cmd@cmd^0,c
  7639   0036B6                     
  7640                           ;lcd.c: 17:     PORTDbits.RD1 = 0;
  7641   0036B6  9283               	bcf	131,1,c	;volatile
  7642   0036B8                     
  7643                           ;lcd.c: 18:     PORTB = cmd;
  7644   0036B8  C002  FF81         	movff	lcd_cmd@cmd,3969	;volatile
  7645   0036BC                     
  7646                           ;lcd.c: 19:     lcd_enable();
  7647   0036BC  EC47  F01B         	call	_lcd_enable	;wreg free
  7648   0036C0  0012               	return		;funcret
  7649   0036C2                     __end_of_lcd_cmd:
  7650                           	callstack 0
  7651                           
  7652 ;; *************** function _lcd_enable *****************
  7653 ;; Defined at:
  7654 ;;		line 9 in file "lcd.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;		None
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7668 ;;      Params:         0       0       0       0       0       0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0
  7670 ;;      Temps:          1       0       0       0       0       0       0
  7671 ;;      Totals:         1       0       0       0       0       0       0
  7672 ;;Total ram usage:        1 bytes
  7673 ;; Hardware stack levels used: 1
  7674 ;; Hardware stack levels required when called: 1
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_lcd_cmd
  7679 ;;		_lcd_data
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text31
  7684   00368E                     __ptext31:
  7685                           	callstack 0
  7686   00368E                     _lcd_enable:
  7687                           	callstack 27
  7688   00368E                     
  7689                           ;lcd.c: 10:     PORTDbits.RD7 = 1;
  7690   00368E  8E83               	bsf	131,7,c	;volatile
  7691                           
  7692                           ;lcd.c: 11:     _delay((unsigned long)((1)*(8000000/4000000.0)));
  7693   003690  D000               	nop2		;2 cycle nop
  7694                           
  7695                           ;lcd.c: 12:     PORTDbits.RD7 = 0;
  7696   003692  9E83               	bcf	131,7,c	;volatile
  7697   003694                     
  7698                           ;lcd.c: 13:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7699   003694  0E06               	movlw	6
  7700   003696  6E01               	movwf	??_lcd_enable^0,c
  7701   003698  0E30               	movlw	48
  7702   00369A                     u4707:
  7703   00369A  2EE8               	decfsz	wreg,f,c
  7704   00369C  D7FE               	bra	u4707
  7705   00369E  2E01               	decfsz	??_lcd_enable^0,f,c
  7706   0036A0  D7FC               	bra	u4707
  7707   0036A2  D000               	nop2	
  7708   0036A4  0012               	return		;funcret
  7709   0036A6                     __end_of_lcd_enable:
  7710                           	callstack 0
  7711                           
  7712 ;; *************** function _PWM_init *****************
  7713 ;; Defined at:
  7714 ;;		line 15 in file "pwm.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg, status,2
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7728 ;;      Params:         0       0       0       0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0       0       0
  7730 ;;      Temps:          0       0       0       0       0       0       0
  7731 ;;      Totals:         0       0       0       0       0       0       0
  7732 ;;Total ram usage:        0 bytes
  7733 ;; Hardware stack levels used: 1
  7734 ;; Hardware stack levels required when called: 1
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_main
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           	psect	text32
  7743   00363C                     __ptext32:
  7744                           	callstack 0
  7745   00363C                     _PWM_init:
  7746                           	callstack 29
  7747   00363C                     
  7748                           ;pwm.c: 18:     PR2 = (8000000 / (unsigned long)(500 * 4 * 16)) - 1;
  7749   00363C  0EF9               	movlw	249
  7750   00363E  6ECB               	movwf	203,c	;volatile
  7751                           
  7752                           ;pwm.c: 21:     CCP1CONbits.P1M = 0b00;
  7753   003640  0E3F               	movlw	-193
  7754   003642  16BD               	andwf	189,f,c	;volatile
  7755   003644                     
  7756                           ;pwm.c: 22:     TRISCbits.RC2 = 0;
  7757   003644  9494               	bcf	148,2,c	;volatile
  7758                           
  7759                           ;pwm.c: 25:     T2CONbits.T2CKPS = 0b10;
  7760   003646  50CA               	movf	202,w,c	;volatile
  7761   003648  0BFC               	andlw	-4
  7762   00364A  0902               	iorlw	2
  7763   00364C  6ECA               	movwf	202,c	;volatile
  7764   00364E                     
  7765                           ;pwm.c: 26:     T2CONbits.TMR2ON = 1;
  7766   00364E  84CA               	bsf	202,2,c	;volatile
  7767                           
  7768                           ;pwm.c: 29:     CCP1CONbits.CCP1M = 0b1100;
  7769   003650  50BD               	movf	189,w,c	;volatile
  7770   003652  0BF0               	andlw	-16
  7771   003654  090C               	iorlw	12
  7772   003656  6EBD               	movwf	189,c	;volatile
  7773   003658  0012               	return		;funcret
  7774   00365A                     __end_of_PWM_init:
  7775                           	callstack 0
  7776                           
  7777 ;; *************** function _PWM_control *****************
  7778 ;; Defined at:
  7779 ;;		line 32 in file "pwm.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  value           2    0[COMRAM] int 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      void 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7793 ;;      Params:         2       0       0       0       0       0       0
  7794 ;;      Locals:         0       0       0       0       0       0       0
  7795 ;;      Temps:          2       0       0       0       0       0       0
  7796 ;;      Totals:         4       0       0       0       0       0       0
  7797 ;;Total ram usage:        4 bytes
  7798 ;; Hardware stack levels used: 1
  7799 ;; Hardware stack levels required when called: 1
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_main
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text33
  7808   0032DA                     __ptext33:
  7809                           	callstack 0
  7810   0032DA                     _PWM_control:
  7811                           	callstack 29
  7812   0032DA                     
  7813                           ;pwm.c: 34:     if (value >= 0 && value <= 1023) {
  7814   0032DA  BE02               	btfsc	(PWM_control@value+1)^0,7,c
  7815   0032DC  EF72  F019         	goto	u4401
  7816   0032E0  EF74  F019         	goto	u4400
  7817   0032E4                     u4401:
  7818   0032E4  EF96  F019         	goto	l151
  7819   0032E8                     u4400:
  7820   0032E8  BE02               	btfsc	(PWM_control@value+1)^0,7,c
  7821   0032EA  EF80  F019         	goto	u4410
  7822   0032EE  0E04               	movlw	4
  7823   0032F0  5C02               	subwf	(PWM_control@value+1)^0,w,c
  7824   0032F2  B0D8               	btfsc	status,0,c
  7825   0032F4  EF7E  F019         	goto	u4411
  7826   0032F8  EF80  F019         	goto	u4410
  7827   0032FC                     u4411:
  7828   0032FC  EF96  F019         	goto	l151
  7829   003300                     u4410:
  7830   003300                     
  7831                           ;pwm.c: 35:         CCPR1L = (unsigned char)(value >> 2);
  7832   003300  C001  F003         	movff	PWM_control@value,??_PWM_control
  7833   003304  C002  F004         	movff	PWM_control@value+1,??_PWM_control+1
  7834   003308  3404               	rlcf	(??_PWM_control+1)^0,w,c
  7835   00330A  3204               	rrcf	(??_PWM_control+1)^0,f,c
  7836   00330C  3203               	rrcf	??_PWM_control^0,f,c
  7837   00330E  3404               	rlcf	(??_PWM_control+1)^0,w,c
  7838   003310  3204               	rrcf	(??_PWM_control+1)^0,f,c
  7839   003312  3203               	rrcf	??_PWM_control^0,f,c
  7840   003314  5003               	movf	??_PWM_control^0,w,c
  7841   003316  6EBE               	movwf	190,c	;volatile
  7842                           
  7843                           ;pwm.c: 36:         CCP1CONbits.DC1B = value & 0x03;
  7844   003318  C001  F003         	movff	PWM_control@value,??_PWM_control
  7845   00331C  0E03               	movlw	3
  7846   00331E  1603               	andwf	??_PWM_control^0,f,c
  7847   003320  3A03               	swapf	??_PWM_control^0,f,c
  7848   003322  50BD               	movf	189,w,c	;volatile
  7849   003324  1803               	xorwf	??_PWM_control^0,w,c
  7850   003326  0BCF               	andlw	-49
  7851   003328  1803               	xorwf	??_PWM_control^0,w,c
  7852   00332A  6EBD               	movwf	189,c	;volatile
  7853   00332C                     l151:
  7854   00332C  0012               	return		;funcret
  7855   00332E                     __end_of_PWM_control:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function _DHT11_ReadData *****************
  7859 ;; Defined at:
  7860 ;;		line 5 in file "dht11.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  data            1    1[COMRAM] unsigned char 
  7865 ;;  i               1    0[COMRAM] unsigned char 
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  1    wreg      unsigned char 
  7868 ;; Registers used:
  7869 ;;		wreg, status,2, status,0
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7875 ;;      Params:         0       0       0       0       0       0       0
  7876 ;;      Locals:         2       0       0       0       0       0       0
  7877 ;;      Temps:          0       0       0       0       0       0       0
  7878 ;;      Totals:         2       0       0       0       0       0       0
  7879 ;;Total ram usage:        2 bytes
  7880 ;; Hardware stack levels used: 1
  7881 ;; Hardware stack levels required when called: 1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text34
  7890   00322C                     __ptext34:
  7891                           	callstack 0
  7892   00322C                     _DHT11_ReadData:
  7893                           	callstack 29
  7894   00322C                     
  7895                           ;dht11.c: 6:   char i,data = 0;
  7896   00322C  6A02               	clrf	DHT11_ReadData@data^0,c
  7897                           
  7898                           ;dht11.c: 7:     for(i=0;i<8;i++)
  7899   00322E  6A01               	clrf	DHT11_ReadData@i^0,c
  7900   003230                     l194:
  7901   003230  A880               	btfss	128,4,c	;volatile
  7902   003232  EF1D  F019         	goto	u4361
  7903   003236  EF1F  F019         	goto	u4360
  7904   00323A                     u4361:
  7905   00323A  EF18  F019         	goto	l194
  7906   00323E                     u4360:
  7907   00323E                     
  7908                           ;dht11.c: 10:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  7909   00323E  0E14               	movlw	20
  7910   003240                     u4717:
  7911   003240  2EE8               	decfsz	wreg,f,c
  7912   003242  D7FE               	bra	u4717
  7913   003244                     
  7914                           ;dht11.c: 11:         if(PORTAbits.RA4 & 1)
  7915   003244  A880               	btfss	128,4,c	;volatile
  7916   003246  EF27  F019         	goto	u4371
  7917   00324A  EF29  F019         	goto	u4370
  7918   00324E                     u4371:
  7919   00324E  EF2D  F019         	goto	l3832
  7920   003252                     u4370:
  7921   003252                     
  7922                           ;dht11.c: 12:           data = (char)(((data)<<1) | 1);
  7923   003252  80D8               	bsf	status,0,c
  7924   003254  3602               	rlcf	DHT11_ReadData@data^0,f,c
  7925   003256  EF30  F019         	goto	l199
  7926   00325A                     l3832:
  7927                           
  7928                           ;dht11.c: 14:           data = (char)((data)<<1);
  7929   00325A  5002               	movf	DHT11_ReadData@data^0,w,c
  7930   00325C  2402               	addwf	DHT11_ReadData@data^0,w,c
  7931   00325E  6E02               	movwf	DHT11_ReadData@data^0,c
  7932   003260                     l199:
  7933   003260  B880               	btfsc	128,4,c	;volatile
  7934   003262  EF35  F019         	goto	u4381
  7935   003266  EF37  F019         	goto	u4380
  7936   00326A                     u4381:
  7937   00326A  EF30  F019         	goto	l199
  7938   00326E                     u4380:
  7939   00326E                     
  7940                           ;dht11.c: 16:     }
  7941   00326E  2A01               	incf	DHT11_ReadData@i^0,f,c
  7942   003270  0E07               	movlw	7
  7943   003272  6401               	cpfsgt	DHT11_ReadData@i^0,c
  7944   003274  EF3E  F019         	goto	u4391
  7945   003278  EF40  F019         	goto	u4390
  7946   00327C                     u4391:
  7947   00327C  EF18  F019         	goto	l194
  7948   003280                     u4390:
  7949   003280                     
  7950                           ;dht11.c: 17:   return data;
  7951   003280  5002               	movf	DHT11_ReadData@data^0,w,c
  7952   003282  0012               	return		;funcret
  7953   003284                     __end_of_DHT11_ReadData:
  7954                           	callstack 0
  7955                           
  7956 ;; *************** function _DHT11_Init *****************
  7957 ;; Defined at:
  7958 ;;		line 26 in file "dht11.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7972 ;;      Params:         0       0       0       0       0       0       0
  7973 ;;      Locals:         0       0       0       0       0       0       0
  7974 ;;      Temps:          1       0       0       0       0       0       0
  7975 ;;      Totals:         1       0       0       0       0       0       0
  7976 ;;Total ram usage:        1 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; Hardware stack levels required when called: 2
  7979 ;; This function calls:
  7980 ;;		_DHT11_CheckResponse
  7981 ;; This function is called by:
  7982 ;;		_main
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text35
  7987   003618                     __ptext35:
  7988                           	callstack 0
  7989   003618                     _DHT11_Init:
  7990                           	callstack 28
  7991   003618                     
  7992                           ;dht11.c: 27:     TRISAbits.RA4 = 0;
  7993   003618  9892               	bcf	146,4,c	;volatile
  7994                           
  7995                           ;dht11.c: 28:     LATAbits.LATA4 = 0;
  7996   00361A  9889               	bcf	137,4,c	;volatile
  7997   00361C                     
  7998                           ;dht11.c: 29:     _delay((unsigned long)((18)*(8000000/4000.0)));
  7999   00361C  0E2F               	movlw	47
  8000   00361E  6E01               	movwf	??_DHT11_Init^0,c
  8001   003620  0EC0               	movlw	192
  8002   003622                     u4727:
  8003   003622  2EE8               	decfsz	wreg,f,c
  8004   003624  D7FE               	bra	u4727
  8005   003626  2E01               	decfsz	??_DHT11_Init^0,f,c
  8006   003628  D7FC               	bra	u4727
  8007   00362A                     
  8008                           ;dht11.c: 30:     LATAbits.LATA4 = 1;
  8009   00362A  8889               	bsf	137,4,c	;volatile
  8010                           
  8011                           ;dht11.c: 31:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  8012   00362C  0E0D               	movlw	13
  8013   00362E                     u4737:
  8014   00362E  2EE8               	decfsz	wreg,f,c
  8015   003630  D7FE               	bra	u4737
  8016   003632  0000               	nop	
  8017   003634                     
  8018                           ;dht11.c: 32:     TRISAbits.RA4 = 1;
  8019   003634  8892               	bsf	146,4,c	;volatile
  8020   003636                     
  8021                           ;dht11.c: 33:     DHT11_CheckResponse();
  8022   003636  ECF6  F01A         	call	_DHT11_CheckResponse	;wreg free
  8023   00363A  0012               	return		;funcret
  8024   00363C                     __end_of_DHT11_Init:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function _DHT11_CheckResponse *****************
  8028 ;; Defined at:
  8029 ;;		line 20 in file "dht11.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;		None
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;		None
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  1    wreg      void 
  8036 ;; Registers used:
  8037 ;;		None
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8043 ;;      Params:         0       0       0       0       0       0       0
  8044 ;;      Locals:         0       0       0       0       0       0       0
  8045 ;;      Temps:          0       0       0       0       0       0       0
  8046 ;;      Totals:         0       0       0       0       0       0       0
  8047 ;;Total ram usage:        0 bytes
  8048 ;; Hardware stack levels used: 1
  8049 ;; Hardware stack levels required when called: 1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_DHT11_Init
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text36
  8058   0035EC                     __ptext36:
  8059                           	callstack 0
  8060   0035EC                     _DHT11_CheckResponse:
  8061                           	callstack 28
  8062   0035EC                     l205:
  8063   0035EC  B880               	btfsc	128,4,c	;volatile
  8064   0035EE  EFFB  F01A         	goto	u4171
  8065   0035F2  EFFD  F01A         	goto	u4170
  8066   0035F6                     u4171:
  8067   0035F6  EFF6  F01A         	goto	l205
  8068   0035FA                     u4170:
  8069   0035FA                     l208:
  8070   0035FA  A880               	btfss	128,4,c	;volatile
  8071   0035FC  EF02  F01B         	goto	u4181
  8072   003600  EF04  F01B         	goto	u4180
  8073   003604                     u4181:
  8074   003604  EFFD  F01A         	goto	l208
  8075   003608                     u4180:
  8076   003608                     l211:
  8077   003608  B880               	btfsc	128,4,c	;volatile
  8078   00360A  EF09  F01B         	goto	u4191
  8079   00360E  EF0B  F01B         	goto	u4190
  8080   003612                     u4191:
  8081   003612  EF04  F01B         	goto	l211
  8082   003616                     u4190:
  8083   003616  0012               	return		;funcret
  8084   003618                     __end_of_DHT11_CheckResponse:
  8085                           	callstack 0
  8086                           
  8087 ;; *************** function _ADC_read_temp *****************
  8088 ;; Defined at:
  8089 ;;		line 43 in file "adc.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  value           2   64[COMRAM] unsigned int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  4   64[COMRAM] float 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8103 ;;      Params:         4       0       0       0       0       0       0
  8104 ;;      Locals:         4       0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0
  8106 ;;      Totals:         8       0       0       0       0       0       0
  8107 ;;Total ram usage:        8 bytes
  8108 ;; Hardware stack levels used: 1
  8109 ;; Hardware stack levels required when called: 2
  8110 ;; This function calls:
  8111 ;;		___fldiv
  8112 ;;		___flmul
  8113 ;;		___xxtofl
  8114 ;; This function is called by:
  8115 ;;		_main
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text37
  8120   002FD4                     __ptext37:
  8121                           	callstack 0
  8122   002FD4                     _ADC_read_temp:
  8123                           	callstack 28
  8124   002FD4                     
  8125                           ;adc.c: 45:     return (value * 5.0 * 100.0) / 1023.0;
  8126   002FD4  0E00               	movlw	0
  8127   002FD6  6E13               	movwf	___flmul@a^0,c
  8128   002FD8  0E00               	movlw	0
  8129   002FDA  6E14               	movwf	(___flmul@a+1)^0,c
  8130   002FDC  0EA0               	movlw	160
  8131   002FDE  6E15               	movwf	(___flmul@a+2)^0,c
  8132   002FE0  0E40               	movlw	64
  8133   002FE2  6E16               	movwf	(___flmul@a+3)^0,c
  8134   002FE4  C041  F001         	movff	ADC_read_temp@value,___xxtofl@val
  8135   002FE8  C042  F002         	movff	ADC_read_temp@value+1,___xxtofl@val+1
  8136   002FEC  6A03               	clrf	(___xxtofl@val+2)^0,c
  8137   002FEE  6A04               	clrf	(___xxtofl@val+3)^0,c
  8138   002FF0  0E00               	movlw	0
  8139   002FF2  EC1C  F013         	call	___xxtofl
  8140   002FF6  C001  F00F         	movff	?___xxtofl,___flmul@b
  8141   002FFA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8142   002FFE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8143   003002  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8144   003006  EC15  F00D         	call	___flmul	;wreg free
  8145   00300A  C00F  F045         	movff	?___flmul,_ADC_read_temp$1688
  8146   00300E  C010  F046         	movff	?___flmul+1,_ADC_read_temp$1688+1
  8147   003012  C011  F047         	movff	?___flmul+2,_ADC_read_temp$1688+2
  8148   003016  C012  F048         	movff	?___flmul+3,_ADC_read_temp$1688+3
  8149                           
  8150                           ;adc.c: 45:     return (value * 5.0 * 100.0) / 1023.0;
  8151   00301A  0E00               	movlw	0
  8152   00301C  6E13               	movwf	___flmul@a^0,c
  8153   00301E  0E00               	movlw	0
  8154   003020  6E14               	movwf	(___flmul@a+1)^0,c
  8155   003022  0EC8               	movlw	200
  8156   003024  6E15               	movwf	(___flmul@a+2)^0,c
  8157   003026  0E42               	movlw	66
  8158   003028  6E16               	movwf	(___flmul@a+3)^0,c
  8159   00302A  C045  F00F         	movff	_ADC_read_temp$1688,___flmul@b
  8160   00302E  C046  F010         	movff	_ADC_read_temp$1688+1,___flmul@b+1
  8161   003032  C047  F011         	movff	_ADC_read_temp$1688+2,___flmul@b+2
  8162   003036  C048  F012         	movff	_ADC_read_temp$1688+3,___flmul@b+3
  8163   00303A  EC15  F00D         	call	___flmul	;wreg free
  8164   00303E  C00F  F028         	movff	?___flmul,___fldiv@b
  8165   003042  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  8166   003046  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  8167   00304A  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  8168   00304E  0E00               	movlw	0
  8169   003050  6E2C               	movwf	___fldiv@a^0,c
  8170   003052  0EC0               	movlw	192
  8171   003054  6E2D               	movwf	(___fldiv@a+1)^0,c
  8172   003056  0E7F               	movlw	127
  8173   003058  6E2E               	movwf	(___fldiv@a+2)^0,c
  8174   00305A  0E44               	movlw	68
  8175   00305C  6E2F               	movwf	(___fldiv@a+3)^0,c
  8176   00305E  EC28  F00F         	call	___fldiv	;wreg free
  8177   003062  C028  F041         	movff	?___fldiv,?_ADC_read_temp
  8178   003066  C029  F042         	movff	?___fldiv+1,?_ADC_read_temp+1
  8179   00306A  C02A  F043         	movff	?___fldiv+2,?_ADC_read_temp+2
  8180   00306E  C02B  F044         	movff	?___fldiv+3,?_ADC_read_temp+3
  8181   003072  0012               	return		;funcret
  8182   003074                     __end_of_ADC_read_temp:
  8183                           	callstack 0
  8184                           
  8185 ;; *************** function _ADC_read_lumi *****************
  8186 ;; Defined at:
  8187 ;;		line 38 in file "adc.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  value           2   64[COMRAM] unsigned int 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  4   64[COMRAM] float 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8201 ;;      Params:         4       0       0       0       0       0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0
  8204 ;;      Totals:         4       0       0       0       0       0       0
  8205 ;;Total ram usage:        4 bytes
  8206 ;; Hardware stack levels used: 1
  8207 ;; Hardware stack levels required when called: 2
  8208 ;; This function calls:
  8209 ;;		___fldiv
  8210 ;;		___flmul
  8211 ;;		___xxtofl
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text38
  8218   0030FC                     __ptext38:
  8219                           	callstack 0
  8220   0030FC                     _ADC_read_lumi:
  8221                           	callstack 28
  8222   0030FC                     
  8223                           ;adc.c: 40:     return (value * 5.0 / 1023.0);
  8224   0030FC  0E00               	movlw	0
  8225   0030FE  6E13               	movwf	___flmul@a^0,c
  8226   003100  0E00               	movlw	0
  8227   003102  6E14               	movwf	(___flmul@a+1)^0,c
  8228   003104  0EA0               	movlw	160
  8229   003106  6E15               	movwf	(___flmul@a+2)^0,c
  8230   003108  0E40               	movlw	64
  8231   00310A  6E16               	movwf	(___flmul@a+3)^0,c
  8232   00310C  C041  F001         	movff	ADC_read_lumi@value,___xxtofl@val
  8233   003110  C042  F002         	movff	ADC_read_lumi@value+1,___xxtofl@val+1
  8234   003114  6A03               	clrf	(___xxtofl@val+2)^0,c
  8235   003116  6A04               	clrf	(___xxtofl@val+3)^0,c
  8236   003118  0E00               	movlw	0
  8237   00311A  EC1C  F013         	call	___xxtofl
  8238   00311E  C001  F00F         	movff	?___xxtofl,___flmul@b
  8239   003122  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  8240   003126  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  8241   00312A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  8242   00312E  EC15  F00D         	call	___flmul	;wreg free
  8243   003132  C00F  F028         	movff	?___flmul,___fldiv@b
  8244   003136  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  8245   00313A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  8246   00313E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  8247   003142  0E00               	movlw	0
  8248   003144  6E2C               	movwf	___fldiv@a^0,c
  8249   003146  0EC0               	movlw	192
  8250   003148  6E2D               	movwf	(___fldiv@a+1)^0,c
  8251   00314A  0E7F               	movlw	127
  8252   00314C  6E2E               	movwf	(___fldiv@a+2)^0,c
  8253   00314E  0E44               	movlw	68
  8254   003150  6E2F               	movwf	(___fldiv@a+3)^0,c
  8255   003152  EC28  F00F         	call	___fldiv	;wreg free
  8256   003156  C028  F041         	movff	?___fldiv,?_ADC_read_lumi
  8257   00315A  C029  F042         	movff	?___fldiv+1,?_ADC_read_lumi+1
  8258   00315E  C02A  F043         	movff	?___fldiv+2,?_ADC_read_lumi+2
  8259   003162  C02B  F044         	movff	?___fldiv+3,?_ADC_read_lumi+3
  8260   003166  0012               	return		;funcret
  8261   003168                     __end_of_ADC_read_lumi:
  8262                           	callstack 0
  8263                           
  8264 ;; *************** function ___xxtofl *****************
  8265 ;; Defined at:
  8266 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  sign            1    wreg     unsigned char 
  8269 ;;  val             4    0[COMRAM] long 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  sign            1    8[COMRAM] unsigned char 
  8272 ;;  arg             4   10[COMRAM] unsigned long 
  8273 ;;  exp             1    9[COMRAM] unsigned char 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  4    0[COMRAM] unsigned char 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8283 ;;      Params:         4       0       0       0       0       0       0
  8284 ;;      Locals:         6       0       0       0       0       0       0
  8285 ;;      Temps:          4       0       0       0       0       0       0
  8286 ;;      Totals:        14       0       0       0       0       0       0
  8287 ;;Total ram usage:       14 bytes
  8288 ;; Hardware stack levels used: 1
  8289 ;; Hardware stack levels required when called: 1
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_ADC_read_lumi
  8294 ;;		_ADC_read_temp
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text39
  8299   002638                     __ptext39:
  8300                           	callstack 0
  8301   002638                     ___xxtofl:
  8302                           	callstack 28
  8303                           
  8304                           ;incstack = 0
  8305                           ;___xxtofl@sign stored from wreg
  8306   002638  6E09               	movwf	___xxtofl@sign^0,c
  8307   00263A  5009               	movf	___xxtofl@sign^0,w,c
  8308   00263C  B4D8               	btfsc	status,2,c
  8309   00263E  EF23  F013         	goto	u4201
  8310   002642  EF25  F013         	goto	u4200
  8311   002646                     u4201:
  8312   002646  EF47  F013         	goto	l875
  8313   00264A                     u4200:
  8314   00264A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8315   00264C  EF2C  F013         	goto	u4210
  8316   002650  EF2A  F013         	goto	u4211
  8317   002654                     u4211:
  8318   002654  EF47  F013         	goto	l875
  8319   002658                     u4210:
  8320   002658  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8321   00265C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8322   002660  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8323   002664  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8324   002668  1E05               	comf	??___xxtofl^0,f,c
  8325   00266A  1E06               	comf	(??___xxtofl+1)^0,f,c
  8326   00266C  1E07               	comf	(??___xxtofl+2)^0,f,c
  8327   00266E  1E08               	comf	(??___xxtofl+3)^0,f,c
  8328   002670  2A05               	incf	??___xxtofl^0,f,c
  8329   002672  0E00               	movlw	0
  8330   002674  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8331   002676  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8332   002678  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8333   00267A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8334   00267E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8335   002682  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8336   002686  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8337   00268A  EF4F  F013         	goto	l3686
  8338   00268E                     l875:
  8339   00268E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8340   002692  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8341   002696  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8342   00269A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8343   00269E                     l3686:
  8344   00269E  5001               	movf	___xxtofl@val^0,w,c
  8345   0026A0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8346   0026A2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8347   0026A4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8348   0026A6  A4D8               	btfss	status,2,c
  8349   0026A8  EF58  F013         	goto	u4221
  8350   0026AC  EF5A  F013         	goto	u4220
  8351   0026B0                     u4221:
  8352   0026B0  EF64  F013         	goto	l3692
  8353   0026B4                     u4220:
  8354   0026B4  0E00               	movlw	0
  8355   0026B6  6E01               	movwf	?___xxtofl^0,c
  8356   0026B8  0E00               	movlw	0
  8357   0026BA  6E02               	movwf	(?___xxtofl+1)^0,c
  8358   0026BC  0E00               	movlw	0
  8359   0026BE  6E03               	movwf	(?___xxtofl+2)^0,c
  8360   0026C0  0E00               	movlw	0
  8361   0026C2  6E04               	movwf	(?___xxtofl+3)^0,c
  8362   0026C4  EFF5  F013         	goto	l878
  8363   0026C8                     l3692:
  8364   0026C8  0E96               	movlw	150
  8365   0026CA  6E0A               	movwf	___xxtofl@exp^0,c
  8366   0026CC  EF6E  F013         	goto	l3696
  8367   0026D0                     l3694:
  8368   0026D0  2A0A               	incf	___xxtofl@exp^0,f,c
  8369   0026D2  90D8               	bcf	status,0,c
  8370   0026D4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8371   0026D6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8372   0026D8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8373   0026DA  320B               	rrcf	___xxtofl@arg^0,f,c
  8374   0026DC                     l3696:
  8375   0026DC  0E00               	movlw	0
  8376   0026DE  140B               	andwf	___xxtofl@arg^0,w,c
  8377   0026E0  6E05               	movwf	??___xxtofl^0,c
  8378   0026E2  0E00               	movlw	0
  8379   0026E4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8380   0026E6  6E06               	movwf	(??___xxtofl+1)^0,c
  8381   0026E8  0E00               	movlw	0
  8382   0026EA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8383   0026EC  6E07               	movwf	(??___xxtofl+2)^0,c
  8384   0026EE  0EFE               	movlw	254
  8385   0026F0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8386   0026F2  6E08               	movwf	(??___xxtofl+3)^0,c
  8387   0026F4  5005               	movf	??___xxtofl^0,w,c
  8388   0026F6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8389   0026F8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8390   0026FA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8391   0026FC  A4D8               	btfss	status,2,c
  8392   0026FE  EF83  F013         	goto	u4231
  8393   002702  EF85  F013         	goto	u4230
  8394   002706                     u4231:
  8395   002706  EF68  F013         	goto	l3694
  8396   00270A                     u4230:
  8397   00270A  EF93  F013         	goto	l882
  8398   00270E                     l3698:
  8399   00270E  2A0A               	incf	___xxtofl@exp^0,f,c
  8400   002710  0E01               	movlw	1
  8401   002712  260B               	addwf	___xxtofl@arg^0,f,c
  8402   002714  0E00               	movlw	0
  8403   002716  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8404   002718  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8405   00271A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8406   00271C  90D8               	bcf	status,0,c
  8407   00271E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8408   002720  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8409   002722  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8410   002724  320B               	rrcf	___xxtofl@arg^0,f,c
  8411   002726                     l882:
  8412   002726  0E00               	movlw	0
  8413   002728  140B               	andwf	___xxtofl@arg^0,w,c
  8414   00272A  6E05               	movwf	??___xxtofl^0,c
  8415   00272C  0E00               	movlw	0
  8416   00272E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8417   002730  6E06               	movwf	(??___xxtofl+1)^0,c
  8418   002732  0E00               	movlw	0
  8419   002734  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8420   002736  6E07               	movwf	(??___xxtofl+2)^0,c
  8421   002738  0EFF               	movlw	255
  8422   00273A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8423   00273C  6E08               	movwf	(??___xxtofl+3)^0,c
  8424   00273E  5005               	movf	??___xxtofl^0,w,c
  8425   002740  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8426   002742  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8427   002744  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8428   002746  A4D8               	btfss	status,2,c
  8429   002748  EFA8  F013         	goto	u4241
  8430   00274C  EFAA  F013         	goto	u4240
  8431   002750                     u4241:
  8432   002750  EF87  F013         	goto	l3698
  8433   002754                     u4240:
  8434   002754  EFB2  F013         	goto	l3706
  8435   002758                     l3704:
  8436   002758  060A               	decf	___xxtofl@exp^0,f,c
  8437   00275A  90D8               	bcf	status,0,c
  8438   00275C  360B               	rlcf	___xxtofl@arg^0,f,c
  8439   00275E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8440   002760  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8441   002762  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8442   002764                     l3706:
  8443   002764  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8444   002766  EFB7  F013         	goto	u4251
  8445   00276A  EFB9  F013         	goto	u4250
  8446   00276E                     u4251:
  8447   00276E  EFC1  F013         	goto	l889
  8448   002772                     u4250:
  8449   002772  0E02               	movlw	2
  8450   002774  600A               	cpfslt	___xxtofl@exp^0,c
  8451   002776  EFBF  F013         	goto	u4261
  8452   00277A  EFC1  F013         	goto	u4260
  8453   00277E                     u4261:
  8454   00277E  EFAC  F013         	goto	l3704
  8455   002782                     u4260:
  8456   002782                     l889:
  8457   002782  B00A               	btfsc	___xxtofl@exp^0,0,c
  8458   002784  EFC6  F013         	goto	u4271
  8459   002788  EFC8  F013         	goto	u4270
  8460   00278C                     u4271:
  8461   00278C  EFC9  F013         	goto	l3712
  8462   002790                     u4270:
  8463   002790  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8464   002792                     l3712:
  8465   002792  90D8               	bcf	status,0,c
  8466   002794  320A               	rrcf	___xxtofl@exp^0,f,c
  8467   002796  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8468   00279A  6A06               	clrf	(??___xxtofl+1)^0,c
  8469   00279C  6A07               	clrf	(??___xxtofl+2)^0,c
  8470   00279E  6A08               	clrf	(??___xxtofl+3)^0,c
  8471   0027A0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8472   0027A4  6A07               	clrf	(??___xxtofl+2)^0,c
  8473   0027A6  6A06               	clrf	(??___xxtofl+1)^0,c
  8474   0027A8  6A05               	clrf	??___xxtofl^0,c
  8475   0027AA  5005               	movf	??___xxtofl^0,w,c
  8476   0027AC  120B               	iorwf	___xxtofl@arg^0,f,c
  8477   0027AE  5006               	movf	(??___xxtofl+1)^0,w,c
  8478   0027B0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8479   0027B2  5007               	movf	(??___xxtofl+2)^0,w,c
  8480   0027B4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8481   0027B6  5008               	movf	(??___xxtofl+3)^0,w,c
  8482   0027B8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8483   0027BA  5009               	movf	___xxtofl@sign^0,w,c
  8484   0027BC  B4D8               	btfsc	status,2,c
  8485   0027BE  EFE3  F013         	goto	u4281
  8486   0027C2  EFE5  F013         	goto	u4280
  8487   0027C6                     u4281:
  8488   0027C6  EFED  F013         	goto	l3722
  8489   0027CA                     u4280:
  8490   0027CA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8491   0027CC  EFEC  F013         	goto	u4290
  8492   0027D0  EFEA  F013         	goto	u4291
  8493   0027D4                     u4291:
  8494   0027D4  EFED  F013         	goto	l3722
  8495   0027D8                     u4290:
  8496   0027D8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8497   0027DA                     l3722:
  8498   0027DA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8499   0027DE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8500   0027E2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8501   0027E6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8502   0027EA                     l878:
  8503   0027EA  0012               	return		;funcret
  8504   0027EC                     __end_of___xxtofl:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function ___flmul *****************
  8508 ;; Defined at:
  8509 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  b               4   14[COMRAM] unsigned char 
  8512 ;;  a               4   18[COMRAM] unsigned char 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  prod            4   33[COMRAM] struct .
  8515 ;;  grs             4   27[COMRAM] unsigned long 
  8516 ;;  temp            2   37[COMRAM] struct .
  8517 ;;  bexp            1   32[COMRAM] unsigned char 
  8518 ;;  aexp            1   31[COMRAM] unsigned char 
  8519 ;;  sign            1   26[COMRAM] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  4   14[COMRAM] unsigned char 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0, prodl, prodh
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8529 ;;      Params:         8       0       0       0       0       0       0
  8530 ;;      Locals:        13       0       0       0       0       0       0
  8531 ;;      Temps:          4       0       0       0       0       0       0
  8532 ;;      Totals:        25       0       0       0       0       0       0
  8533 ;;Total ram usage:       25 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 1
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		_ADC_read_lumi
  8540 ;;		_ADC_read_temp
  8541 ;;		_efgtoa
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text40
  8546   001A2A                     __ptext40:
  8547                           	callstack 0
  8548   001A2A                     ___flmul:
  8549                           	callstack 25
  8550   001A2A  5012               	movf	(___flmul@b+3)^0,w,c
  8551   001A2C  0B80               	andlw	128
  8552   001A2E  6E1B               	movwf	___flmul@sign^0,c
  8553   001A30  5012               	movf	(___flmul@b+3)^0,w,c
  8554   001A32  2412               	addwf	(___flmul@b+3)^0,w,c
  8555   001A34  6E21               	movwf	___flmul@bexp^0,c
  8556   001A36  AE11               	btfss	(___flmul@b+2)^0,7,c
  8557   001A38  EF20  F00D         	goto	u2991
  8558   001A3C  EF22  F00D         	goto	u2990
  8559   001A40                     u2991:
  8560   001A40  EF23  F00D         	goto	l2926
  8561   001A44                     u2990:
  8562   001A44  8021               	bsf	___flmul@bexp^0,0,c
  8563   001A46                     l2926:
  8564   001A46  5021               	movf	___flmul@bexp^0,w,c
  8565   001A48  B4D8               	btfsc	status,2,c
  8566   001A4A  EF29  F00D         	goto	u3001
  8567   001A4E  EF2B  F00D         	goto	u3000
  8568   001A52                     u3001:
  8569   001A52  EF3E  F00D         	goto	l2934
  8570   001A56                     u3000:
  8571   001A56  2821               	incf	___flmul@bexp^0,w,c
  8572   001A58  A4D8               	btfss	status,2,c
  8573   001A5A  EF31  F00D         	goto	u3011
  8574   001A5E  EF33  F00D         	goto	u3010
  8575   001A62                     u3011:
  8576   001A62  EF3B  F00D         	goto	l2932
  8577   001A66                     u3010:
  8578   001A66  0E00               	movlw	0
  8579   001A68  6E0F               	movwf	___flmul@b^0,c
  8580   001A6A  0E00               	movlw	0
  8581   001A6C  6E10               	movwf	(___flmul@b+1)^0,c
  8582   001A6E  0E00               	movlw	0
  8583   001A70  6E11               	movwf	(___flmul@b+2)^0,c
  8584   001A72  0E00               	movlw	0
  8585   001A74  6E12               	movwf	(___flmul@b+3)^0,c
  8586   001A76                     l2932:
  8587   001A76  8E11               	bsf	(___flmul@b+2)^0,7,c
  8588   001A78  EF46  F00D         	goto	l2936
  8589   001A7C                     l2934:
  8590   001A7C  0E00               	movlw	0
  8591   001A7E  6E0F               	movwf	___flmul@b^0,c
  8592   001A80  0E00               	movlw	0
  8593   001A82  6E10               	movwf	(___flmul@b+1)^0,c
  8594   001A84  0E00               	movlw	0
  8595   001A86  6E11               	movwf	(___flmul@b+2)^0,c
  8596   001A88  0E00               	movlw	0
  8597   001A8A  6E12               	movwf	(___flmul@b+3)^0,c
  8598   001A8C                     l2936:
  8599   001A8C  5016               	movf	(___flmul@a+3)^0,w,c
  8600   001A8E  0B80               	andlw	128
  8601   001A90  1A1B               	xorwf	___flmul@sign^0,f,c
  8602   001A92  5016               	movf	(___flmul@a+3)^0,w,c
  8603   001A94  2416               	addwf	(___flmul@a+3)^0,w,c
  8604   001A96  6E20               	movwf	___flmul@aexp^0,c
  8605   001A98  AE15               	btfss	(___flmul@a+2)^0,7,c
  8606   001A9A  EF51  F00D         	goto	u3021
  8607   001A9E  EF53  F00D         	goto	u3020
  8608   001AA2                     u3021:
  8609   001AA2  EF54  F00D         	goto	l2944
  8610   001AA6                     u3020:
  8611   001AA6  8020               	bsf	___flmul@aexp^0,0,c
  8612   001AA8                     l2944:
  8613   001AA8  5020               	movf	___flmul@aexp^0,w,c
  8614   001AAA  B4D8               	btfsc	status,2,c
  8615   001AAC  EF5A  F00D         	goto	u3031
  8616   001AB0  EF5C  F00D         	goto	u3030
  8617   001AB4                     u3031:
  8618   001AB4  EF6F  F00D         	goto	l2952
  8619   001AB8                     u3030:
  8620   001AB8  2820               	incf	___flmul@aexp^0,w,c
  8621   001ABA  A4D8               	btfss	status,2,c
  8622   001ABC  EF62  F00D         	goto	u3041
  8623   001AC0  EF64  F00D         	goto	u3040
  8624   001AC4                     u3041:
  8625   001AC4  EF6C  F00D         	goto	l2950
  8626   001AC8                     u3040:
  8627   001AC8  0E00               	movlw	0
  8628   001ACA  6E13               	movwf	___flmul@a^0,c
  8629   001ACC  0E00               	movlw	0
  8630   001ACE  6E14               	movwf	(___flmul@a+1)^0,c
  8631   001AD0  0E00               	movlw	0
  8632   001AD2  6E15               	movwf	(___flmul@a+2)^0,c
  8633   001AD4  0E00               	movlw	0
  8634   001AD6  6E16               	movwf	(___flmul@a+3)^0,c
  8635   001AD8                     l2950:
  8636   001AD8  8E15               	bsf	(___flmul@a+2)^0,7,c
  8637   001ADA  EF77  F00D         	goto	l834
  8638   001ADE                     l2952:
  8639   001ADE  0E00               	movlw	0
  8640   001AE0  6E13               	movwf	___flmul@a^0,c
  8641   001AE2  0E00               	movlw	0
  8642   001AE4  6E14               	movwf	(___flmul@a+1)^0,c
  8643   001AE6  0E00               	movlw	0
  8644   001AE8  6E15               	movwf	(___flmul@a+2)^0,c
  8645   001AEA  0E00               	movlw	0
  8646   001AEC  6E16               	movwf	(___flmul@a+3)^0,c
  8647   001AEE                     l834:
  8648   001AEE  5020               	movf	___flmul@aexp^0,w,c
  8649   001AF0  B4D8               	btfsc	status,2,c
  8650   001AF2  EF7D  F00D         	goto	u3051
  8651   001AF6  EF7F  F00D         	goto	u3050
  8652   001AFA                     u3051:
  8653   001AFA  EF87  F00D         	goto	l2956
  8654   001AFE                     u3050:
  8655   001AFE  5021               	movf	___flmul@bexp^0,w,c
  8656   001B00  A4D8               	btfss	status,2,c
  8657   001B02  EF85  F00D         	goto	u3061
  8658   001B06  EF87  F00D         	goto	u3060
  8659   001B0A                     u3061:
  8660   001B0A  EF91  F00D         	goto	l2960
  8661   001B0E                     u3060:
  8662   001B0E                     l2956:
  8663   001B0E  0E00               	movlw	0
  8664   001B10  6E0F               	movwf	?___flmul^0,c
  8665   001B12  0E00               	movlw	0
  8666   001B14  6E10               	movwf	(?___flmul+1)^0,c
  8667   001B16  0E00               	movlw	0
  8668   001B18  6E11               	movwf	(?___flmul+2)^0,c
  8669   001B1A  0E00               	movlw	0
  8670   001B1C  6E12               	movwf	(?___flmul+3)^0,c
  8671   001B1E  EF27  F00F         	goto	l838
  8672   001B22                     l2960:
  8673   001B22  5015               	movf	(___flmul@a+2)^0,w,c
  8674   001B24  020F               	mulwf	___flmul@b^0,c
  8675   001B26  CFF3 F026          	movff	prodl,___flmul@temp
  8676   001B2A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8677   001B2E  5026               	movf	___flmul@temp^0,w,c
  8678   001B30  6E1C               	movwf	___flmul@grs^0,c
  8679   001B32  6A1D               	clrf	(___flmul@grs+1)^0,c
  8680   001B34  6A1E               	clrf	(___flmul@grs+2)^0,c
  8681   001B36  6A1F               	clrf	(___flmul@grs+3)^0,c
  8682   001B38  5027               	movf	(___flmul@temp+1)^0,w,c
  8683   001B3A  6E22               	movwf	___flmul@prod^0,c
  8684   001B3C  6A23               	clrf	(___flmul@prod+1)^0,c
  8685   001B3E  6A24               	clrf	(___flmul@prod+2)^0,c
  8686   001B40  6A25               	clrf	(___flmul@prod+3)^0,c
  8687   001B42  5014               	movf	(___flmul@a+1)^0,w,c
  8688   001B44  0210               	mulwf	(___flmul@b+1)^0,c
  8689   001B46  CFF3 F026          	movff	prodl,___flmul@temp
  8690   001B4A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8691   001B4E  5026               	movf	___flmul@temp^0,w,c
  8692   001B50  261C               	addwf	___flmul@grs^0,f,c
  8693   001B52  0E00               	movlw	0
  8694   001B54  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8695   001B56  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8696   001B58  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8697   001B5A  5027               	movf	(___flmul@temp+1)^0,w,c
  8698   001B5C  2622               	addwf	___flmul@prod^0,f,c
  8699   001B5E  0E00               	movlw	0
  8700   001B60  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8701   001B62  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8702   001B64  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8703   001B66  5013               	movf	___flmul@a^0,w,c
  8704   001B68  0211               	mulwf	(___flmul@b+2)^0,c
  8705   001B6A  CFF3 F026          	movff	prodl,___flmul@temp
  8706   001B6E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8707   001B72  5026               	movf	___flmul@temp^0,w,c
  8708   001B74  261C               	addwf	___flmul@grs^0,f,c
  8709   001B76  0E00               	movlw	0
  8710   001B78  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8711   001B7A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8712   001B7C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8713   001B7E  5027               	movf	(___flmul@temp+1)^0,w,c
  8714   001B80  2622               	addwf	___flmul@prod^0,f,c
  8715   001B82  0E00               	movlw	0
  8716   001B84  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8717   001B86  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8718   001B88  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8719   001B8A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8720   001B8E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8721   001B92  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8722   001B96  6A1C               	clrf	___flmul@grs^0,c
  8723   001B98  5013               	movf	___flmul@a^0,w,c
  8724   001B9A  0210               	mulwf	(___flmul@b+1)^0,c
  8725   001B9C  CFF3 F026          	movff	prodl,___flmul@temp
  8726   001BA0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8727   001BA4  5026               	movf	___flmul@temp^0,w,c
  8728   001BA6  261C               	addwf	___flmul@grs^0,f,c
  8729   001BA8  5027               	movf	(___flmul@temp+1)^0,w,c
  8730   001BAA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8731   001BAC  0E00               	movlw	0
  8732   001BAE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8733   001BB0  0E00               	movlw	0
  8734   001BB2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8735   001BB4  5014               	movf	(___flmul@a+1)^0,w,c
  8736   001BB6  020F               	mulwf	___flmul@b^0,c
  8737   001BB8  CFF3 F026          	movff	prodl,___flmul@temp
  8738   001BBC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8739   001BC0  5026               	movf	___flmul@temp^0,w,c
  8740   001BC2  261C               	addwf	___flmul@grs^0,f,c
  8741   001BC4  5027               	movf	(___flmul@temp+1)^0,w,c
  8742   001BC6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8743   001BC8  0E00               	movlw	0
  8744   001BCA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8745   001BCC  0E00               	movlw	0
  8746   001BCE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8747   001BD0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8748   001BD4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8749   001BD8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8750   001BDC  6A1C               	clrf	___flmul@grs^0,c
  8751   001BDE  5013               	movf	___flmul@a^0,w,c
  8752   001BE0  020F               	mulwf	___flmul@b^0,c
  8753   001BE2  CFF3 F026          	movff	prodl,___flmul@temp
  8754   001BE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8755   001BEA  5026               	movf	___flmul@temp^0,w,c
  8756   001BEC  261C               	addwf	___flmul@grs^0,f,c
  8757   001BEE  5027               	movf	(___flmul@temp+1)^0,w,c
  8758   001BF0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8759   001BF2  0E00               	movlw	0
  8760   001BF4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8761   001BF6  0E00               	movlw	0
  8762   001BF8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8763   001BFA  5015               	movf	(___flmul@a+2)^0,w,c
  8764   001BFC  0210               	mulwf	(___flmul@b+1)^0,c
  8765   001BFE  CFF3 F026          	movff	prodl,___flmul@temp
  8766   001C02  CFF4 F027          	movff	prodh,___flmul@temp+1
  8767   001C06  5026               	movf	___flmul@temp^0,w,c
  8768   001C08  2622               	addwf	___flmul@prod^0,f,c
  8769   001C0A  5027               	movf	(___flmul@temp+1)^0,w,c
  8770   001C0C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8771   001C0E  0E00               	movlw	0
  8772   001C10  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8773   001C12  0E00               	movlw	0
  8774   001C14  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8775   001C16  5014               	movf	(___flmul@a+1)^0,w,c
  8776   001C18  0211               	mulwf	(___flmul@b+2)^0,c
  8777   001C1A  CFF3 F026          	movff	prodl,___flmul@temp
  8778   001C1E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8779   001C22  5026               	movf	___flmul@temp^0,w,c
  8780   001C24  2622               	addwf	___flmul@prod^0,f,c
  8781   001C26  5027               	movf	(___flmul@temp+1)^0,w,c
  8782   001C28  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8783   001C2A  0E00               	movlw	0
  8784   001C2C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8785   001C2E  0E00               	movlw	0
  8786   001C30  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8787   001C32  5015               	movf	(___flmul@a+2)^0,w,c
  8788   001C34  0211               	mulwf	(___flmul@b+2)^0,c
  8789   001C36  CFF3 F026          	movff	prodl,___flmul@temp
  8790   001C3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8791   001C3E  5026               	movf	___flmul@temp^0,w,c
  8792   001C40  6E17               	movwf	??___flmul^0,c
  8793   001C42  5027               	movf	(___flmul@temp+1)^0,w,c
  8794   001C44  6E18               	movwf	(??___flmul+1)^0,c
  8795   001C46  6A19               	clrf	(??___flmul+2)^0,c
  8796   001C48  6A1A               	clrf	(??___flmul+3)^0,c
  8797   001C4A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8798   001C4E  C018  F019         	movff	??___flmul+1,??___flmul+2
  8799   001C52  C017  F018         	movff	??___flmul,??___flmul+1
  8800   001C56  6A17               	clrf	??___flmul^0,c
  8801   001C58  5017               	movf	??___flmul^0,w,c
  8802   001C5A  2622               	addwf	___flmul@prod^0,f,c
  8803   001C5C  5018               	movf	(??___flmul+1)^0,w,c
  8804   001C5E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8805   001C60  5019               	movf	(??___flmul+2)^0,w,c
  8806   001C62  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8807   001C64  501A               	movf	(??___flmul+3)^0,w,c
  8808   001C66  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8809   001C68  C01C  F017         	movff	___flmul@grs,??___flmul
  8810   001C6C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8811   001C70  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8812   001C74  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8813   001C78  0E19               	movlw	25
  8814   001C7A  EF44  F00E         	goto	u3070
  8815   001C7E                     u3075:
  8816   001C7E  90D8               	bcf	status,0,c
  8817   001C80  321A               	rrcf	(??___flmul+3)^0,f,c
  8818   001C82  3219               	rrcf	(??___flmul+2)^0,f,c
  8819   001C84  3218               	rrcf	(??___flmul+1)^0,f,c
  8820   001C86  3217               	rrcf	??___flmul^0,f,c
  8821   001C88                     u3070:
  8822   001C88  2EE8               	decfsz	wreg,f,c
  8823   001C8A  EF3F  F00E         	goto	u3075
  8824   001C8E  5017               	movf	??___flmul^0,w,c
  8825   001C90  2622               	addwf	___flmul@prod^0,f,c
  8826   001C92  5018               	movf	(??___flmul+1)^0,w,c
  8827   001C94  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8828   001C96  5019               	movf	(??___flmul+2)^0,w,c
  8829   001C98  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8830   001C9A  501A               	movf	(??___flmul+3)^0,w,c
  8831   001C9C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8832   001C9E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8833   001CA2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8834   001CA6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8835   001CAA  6A1C               	clrf	___flmul@grs^0,c
  8836   001CAC  5020               	movf	___flmul@aexp^0,w,c
  8837   001CAE  C021  F017         	movff	___flmul@bexp,??___flmul
  8838   001CB2  6A18               	clrf	(??___flmul+1)^0,c
  8839   001CB4  2617               	addwf	??___flmul^0,f,c
  8840   001CB6  0E00               	movlw	0
  8841   001CB8  2218               	addwfc	(??___flmul+1)^0,f,c
  8842   001CBA  0E82               	movlw	130
  8843   001CBC  2417               	addwf	??___flmul^0,w,c
  8844   001CBE  6E26               	movwf	___flmul@temp^0,c
  8845   001CC0  0EFF               	movlw	255
  8846   001CC2  2018               	addwfc	(??___flmul+1)^0,w,c
  8847   001CC4  6E27               	movwf	(___flmul@temp+1)^0,c
  8848   001CC6  EF7A  F00E         	goto	l3008
  8849   001CCA                     l3002:
  8850   001CCA  90D8               	bcf	status,0,c
  8851   001CCC  3622               	rlcf	___flmul@prod^0,f,c
  8852   001CCE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8853   001CD0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8854   001CD2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8855   001CD4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8856   001CD6  EF6F  F00E         	goto	u3081
  8857   001CDA  EF71  F00E         	goto	u3080
  8858   001CDE                     u3081:
  8859   001CDE  EF72  F00E         	goto	l841
  8860   001CE2                     u3080:
  8861   001CE2  8022               	bsf	___flmul@prod^0,0,c
  8862   001CE4                     l841:
  8863   001CE4  90D8               	bcf	status,0,c
  8864   001CE6  361C               	rlcf	___flmul@grs^0,f,c
  8865   001CE8  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8866   001CEA  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8867   001CEC  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8868   001CEE  0626               	decf	___flmul@temp^0,f,c
  8869   001CF0  A0D8               	btfss	status,0,c
  8870   001CF2  0627               	decf	(___flmul@temp+1)^0,f,c
  8871   001CF4                     l3008:
  8872   001CF4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8873   001CF6  EF7F  F00E         	goto	u3091
  8874   001CFA  EF81  F00E         	goto	u3090
  8875   001CFE                     u3091:
  8876   001CFE  EF65  F00E         	goto	l3002
  8877   001D02                     u3090:
  8878   001D02  6A20               	clrf	___flmul@aexp^0,c
  8879   001D04  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8880   001D06  EF87  F00E         	goto	u3101
  8881   001D0A  EF89  F00E         	goto	u3100
  8882   001D0E                     u3101:
  8883   001D0E  EFAD  F00E         	goto	l843
  8884   001D12                     u3100:
  8885   001D12  0EFF               	movlw	255
  8886   001D14  141C               	andwf	___flmul@grs^0,w,c
  8887   001D16  6E17               	movwf	??___flmul^0,c
  8888   001D18  0EFF               	movlw	255
  8889   001D1A  141D               	andwf	(___flmul@grs+1)^0,w,c
  8890   001D1C  6E18               	movwf	(??___flmul+1)^0,c
  8891   001D1E  0EFF               	movlw	255
  8892   001D20  141E               	andwf	(___flmul@grs+2)^0,w,c
  8893   001D22  6E19               	movwf	(??___flmul+2)^0,c
  8894   001D24  0E7F               	movlw	127
  8895   001D26  141F               	andwf	(___flmul@grs+3)^0,w,c
  8896   001D28  6E1A               	movwf	(??___flmul+3)^0,c
  8897   001D2A  5017               	movf	??___flmul^0,w,c
  8898   001D2C  1018               	iorwf	(??___flmul+1)^0,w,c
  8899   001D2E  1019               	iorwf	(??___flmul+2)^0,w,c
  8900   001D30  101A               	iorwf	(??___flmul+3)^0,w,c
  8901   001D32  B4D8               	btfsc	status,2,c
  8902   001D34  EF9E  F00E         	goto	u3111
  8903   001D38  EFA0  F00E         	goto	u3110
  8904   001D3C                     u3111:
  8905   001D3C  EFA4  F00E         	goto	l844
  8906   001D40                     u3110:
  8907   001D40                     l3012:
  8908   001D40  0E01               	movlw	1
  8909   001D42  6E20               	movwf	___flmul@aexp^0,c
  8910   001D44  EFAD  F00E         	goto	l843
  8911   001D48                     l844:
  8912   001D48  A022               	btfss	___flmul@prod^0,0,c
  8913   001D4A  EFA9  F00E         	goto	u3121
  8914   001D4E  EFAB  F00E         	goto	u3120
  8915   001D52                     u3121:
  8916   001D52  EFAD  F00E         	goto	l843
  8917   001D56                     u3120:
  8918   001D56  EFA0  F00E         	goto	l3012
  8919   001D5A                     l843:
  8920   001D5A  5020               	movf	___flmul@aexp^0,w,c
  8921   001D5C  B4D8               	btfsc	status,2,c
  8922   001D5E  EFB3  F00E         	goto	u3131
  8923   001D62  EFB5  F00E         	goto	u3130
  8924   001D66                     u3131:
  8925   001D66  EFD9  F00E         	goto	l3024
  8926   001D6A                     u3130:
  8927   001D6A  0E01               	movlw	1
  8928   001D6C  2622               	addwf	___flmul@prod^0,f,c
  8929   001D6E  0E00               	movlw	0
  8930   001D70  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8931   001D72  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8932   001D74  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8933   001D76  A025               	btfss	(___flmul@prod+3)^0,0,c
  8934   001D78  EFC0  F00E         	goto	u3141
  8935   001D7C  EFC2  F00E         	goto	u3140
  8936   001D80                     u3141:
  8937   001D80  EFD9  F00E         	goto	l3024
  8938   001D84                     u3140:
  8939   001D84  C022  F017         	movff	___flmul@prod,??___flmul
  8940   001D88  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8941   001D8C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8942   001D90  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8943   001D94  341A               	rlcf	(??___flmul+3)^0,w,c
  8944   001D96  321A               	rrcf	(??___flmul+3)^0,f,c
  8945   001D98  3219               	rrcf	(??___flmul+2)^0,f,c
  8946   001D9A  3218               	rrcf	(??___flmul+1)^0,f,c
  8947   001D9C  3217               	rrcf	??___flmul^0,f,c
  8948   001D9E  C017  F022         	movff	??___flmul,___flmul@prod
  8949   001DA2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8950   001DA6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8951   001DAA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8952   001DAE  4A26               	infsnz	___flmul@temp^0,f,c
  8953   001DB0  2A27               	incf	(___flmul@temp+1)^0,f,c
  8954   001DB2                     l3024:
  8955   001DB2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8956   001DB4  EFE4  F00E         	goto	u3151
  8957   001DB8  5027               	movf	(___flmul@temp+1)^0,w,c
  8958   001DBA  E108               	bnz	u3150
  8959   001DBC  2826               	incf	___flmul@temp^0,w,c
  8960   001DBE  A0D8               	btfss	status,0,c
  8961   001DC0  EFE4  F00E         	goto	u3151
  8962   001DC4  EFE6  F00E         	goto	u3150
  8963   001DC8                     u3151:
  8964   001DC8  EFF0  F00E         	goto	l3028
  8965   001DCC                     u3150:
  8966   001DCC  0E00               	movlw	0
  8967   001DCE  6E22               	movwf	___flmul@prod^0,c
  8968   001DD0  0E00               	movlw	0
  8969   001DD2  6E23               	movwf	(___flmul@prod+1)^0,c
  8970   001DD4  0E80               	movlw	128
  8971   001DD6  6E24               	movwf	(___flmul@prod+2)^0,c
  8972   001DD8  0E7F               	movlw	127
  8973   001DDA  6E25               	movwf	(___flmul@prod+3)^0,c
  8974   001DDC  EF1D  F00F         	goto	l3042
  8975   001DE0                     l3028:
  8976   001DE0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8977   001DE2  EFFD  F00E         	goto	u3160
  8978   001DE6  5027               	movf	(___flmul@temp+1)^0,w,c
  8979   001DE8  E106               	bnz	u3161
  8980   001DEA  0426               	decf	___flmul@temp^0,w,c
  8981   001DEC  B0D8               	btfsc	status,0,c
  8982   001DEE  EFFB  F00E         	goto	u3161
  8983   001DF2  EFFD  F00E         	goto	u3160
  8984   001DF6                     u3161:
  8985   001DF6  EF08  F00F         	goto	l851
  8986   001DFA                     u3160:
  8987   001DFA  0E00               	movlw	0
  8988   001DFC  6E22               	movwf	___flmul@prod^0,c
  8989   001DFE  0E00               	movlw	0
  8990   001E00  6E23               	movwf	(___flmul@prod+1)^0,c
  8991   001E02  0E00               	movlw	0
  8992   001E04  6E24               	movwf	(___flmul@prod+2)^0,c
  8993   001E06  0E00               	movlw	0
  8994   001E08  6E25               	movwf	(___flmul@prod+3)^0,c
  8995   001E0A  6A1B               	clrf	___flmul@sign^0,c
  8996   001E0C  EF1D  F00F         	goto	l3042
  8997   001E10                     l851:
  8998   001E10  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8999   001E14  0EFF               	movlw	255
  9000   001E16  1622               	andwf	___flmul@prod^0,f,c
  9001   001E18  0EFF               	movlw	255
  9002   001E1A  1623               	andwf	(___flmul@prod+1)^0,f,c
  9003   001E1C  0E7F               	movlw	127
  9004   001E1E  1624               	andwf	(___flmul@prod+2)^0,f,c
  9005   001E20  0E00               	movlw	0
  9006   001E22  1625               	andwf	(___flmul@prod+3)^0,f,c
  9007   001E24  A021               	btfss	___flmul@bexp^0,0,c
  9008   001E26  EF17  F00F         	goto	u3171
  9009   001E2A  EF19  F00F         	goto	u3170
  9010   001E2E                     u3171:
  9011   001E2E  EF1A  F00F         	goto	l3040
  9012   001E32                     u3170:
  9013   001E32  8E24               	bsf	(___flmul@prod+2)^0,7,c
  9014   001E34                     l3040:
  9015   001E34  90D8               	bcf	status,0,c
  9016   001E36  3021               	rrcf	___flmul@bexp^0,w,c
  9017   001E38  6E25               	movwf	(___flmul@prod+3)^0,c
  9018   001E3A                     l3042:
  9019   001E3A  501B               	movf	___flmul@sign^0,w,c
  9020   001E3C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  9021   001E3E  C022  F00F         	movff	___flmul@prod,?___flmul
  9022   001E42  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9023   001E46  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9024   001E4A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9025   001E4E                     l838:
  9026   001E4E  0012               	return		;funcret
  9027   001E50                     __end_of___flmul:
  9028                           	callstack 0
  9029                           
  9030 ;; *************** function ___fldiv *****************
  9031 ;; Defined at:
  9032 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  b               4   39[COMRAM] unsigned char 
  9035 ;;  a               4   43[COMRAM] unsigned char 
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  grs             4   58[COMRAM] unsigned long 
  9038 ;;  rem             4   51[COMRAM] unsigned long 
  9039 ;;  new_exp         2   56[COMRAM] short 
  9040 ;;  aexp            1   63[COMRAM] unsigned char 
  9041 ;;  bexp            1   62[COMRAM] unsigned char 
  9042 ;;  sign            1   55[COMRAM] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  4   39[COMRAM] unsigned char 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2, status,0
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9052 ;;      Params:         8       0       0       0       0       0       0
  9053 ;;      Locals:        13       0       0       0       0       0       0
  9054 ;;      Temps:          4       0       0       0       0       0       0
  9055 ;;      Totals:        25       0       0       0       0       0       0
  9056 ;;Total ram usage:       25 bytes
  9057 ;; Hardware stack levels used: 1
  9058 ;; Hardware stack levels required when called: 1
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_ADC_read_lumi
  9063 ;;		_ADC_read_temp
  9064 ;;		_efgtoa
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text41
  9069   001E50                     __ptext41:
  9070                           	callstack 0
  9071   001E50                     ___fldiv:
  9072                           	callstack 25
  9073   001E50  502B               	movf	(___fldiv@b+3)^0,w,c
  9074   001E52  0B80               	andlw	128
  9075   001E54  6E38               	movwf	___fldiv@sign^0,c
  9076   001E56  502B               	movf	(___fldiv@b+3)^0,w,c
  9077   001E58  242B               	addwf	(___fldiv@b+3)^0,w,c
  9078   001E5A  6E3F               	movwf	___fldiv@bexp^0,c
  9079   001E5C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  9080   001E5E  EF33  F00F         	goto	u2761
  9081   001E62  EF35  F00F         	goto	u2760
  9082   001E66                     u2761:
  9083   001E66  EF36  F00F         	goto	l2790
  9084   001E6A                     u2760:
  9085   001E6A  803F               	bsf	___fldiv@bexp^0,0,c
  9086   001E6C                     l2790:
  9087   001E6C  503F               	movf	___fldiv@bexp^0,w,c
  9088   001E6E  B4D8               	btfsc	status,2,c
  9089   001E70  EF3C  F00F         	goto	u2771
  9090   001E74  EF3E  F00F         	goto	u2770
  9091   001E78                     u2771:
  9092   001E78  EF52  F00F         	goto	l2800
  9093   001E7C                     u2770:
  9094   001E7C  283F               	incf	___fldiv@bexp^0,w,c
  9095   001E7E  A4D8               	btfss	status,2,c
  9096   001E80  EF44  F00F         	goto	u2781
  9097   001E84  EF46  F00F         	goto	u2780
  9098   001E88                     u2781:
  9099   001E88  EF4E  F00F         	goto	l2796
  9100   001E8C                     u2780:
  9101   001E8C  0E00               	movlw	0
  9102   001E8E  6E28               	movwf	___fldiv@b^0,c
  9103   001E90  0E00               	movlw	0
  9104   001E92  6E29               	movwf	(___fldiv@b+1)^0,c
  9105   001E94  0E00               	movlw	0
  9106   001E96  6E2A               	movwf	(___fldiv@b+2)^0,c
  9107   001E98  0E00               	movlw	0
  9108   001E9A  6E2B               	movwf	(___fldiv@b+3)^0,c
  9109   001E9C                     l2796:
  9110   001E9C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  9111   001E9E  6A2B               	clrf	(___fldiv@b+3)^0,c
  9112   001EA0  EF5A  F00F         	goto	l2802
  9113   001EA4                     l2800:
  9114   001EA4  0E00               	movlw	0
  9115   001EA6  6E28               	movwf	___fldiv@b^0,c
  9116   001EA8  0E00               	movlw	0
  9117   001EAA  6E29               	movwf	(___fldiv@b+1)^0,c
  9118   001EAC  0E00               	movlw	0
  9119   001EAE  6E2A               	movwf	(___fldiv@b+2)^0,c
  9120   001EB0  0E00               	movlw	0
  9121   001EB2  6E2B               	movwf	(___fldiv@b+3)^0,c
  9122   001EB4                     l2802:
  9123   001EB4  502F               	movf	(___fldiv@a+3)^0,w,c
  9124   001EB6  0B80               	andlw	128
  9125   001EB8  1A38               	xorwf	___fldiv@sign^0,f,c
  9126   001EBA  502F               	movf	(___fldiv@a+3)^0,w,c
  9127   001EBC  242F               	addwf	(___fldiv@a+3)^0,w,c
  9128   001EBE  6E40               	movwf	___fldiv@aexp^0,c
  9129   001EC0  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  9130   001EC2  EF65  F00F         	goto	u2791
  9131   001EC6  EF67  F00F         	goto	u2790
  9132   001ECA                     u2791:
  9133   001ECA  EF68  F00F         	goto	l2810
  9134   001ECE                     u2790:
  9135   001ECE  8040               	bsf	___fldiv@aexp^0,0,c
  9136   001ED0                     l2810:
  9137   001ED0  5040               	movf	___fldiv@aexp^0,w,c
  9138   001ED2  B4D8               	btfsc	status,2,c
  9139   001ED4  EF6E  F00F         	goto	u2801
  9140   001ED8  EF70  F00F         	goto	u2800
  9141   001EDC                     u2801:
  9142   001EDC  EF84  F00F         	goto	l2820
  9143   001EE0                     u2800:
  9144   001EE0  2840               	incf	___fldiv@aexp^0,w,c
  9145   001EE2  A4D8               	btfss	status,2,c
  9146   001EE4  EF76  F00F         	goto	u2811
  9147   001EE8  EF78  F00F         	goto	u2810
  9148   001EEC                     u2811:
  9149   001EEC  EF80  F00F         	goto	l2816
  9150   001EF0                     u2810:
  9151   001EF0  0E00               	movlw	0
  9152   001EF2  6E2C               	movwf	___fldiv@a^0,c
  9153   001EF4  0E00               	movlw	0
  9154   001EF6  6E2D               	movwf	(___fldiv@a+1)^0,c
  9155   001EF8  0E00               	movlw	0
  9156   001EFA  6E2E               	movwf	(___fldiv@a+2)^0,c
  9157   001EFC  0E00               	movlw	0
  9158   001EFE  6E2F               	movwf	(___fldiv@a+3)^0,c
  9159   001F00                     l2816:
  9160   001F00  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  9161   001F02  6A2F               	clrf	(___fldiv@a+3)^0,c
  9162   001F04  EF8C  F00F         	goto	l2822
  9163   001F08                     l2820:
  9164   001F08  0E00               	movlw	0
  9165   001F0A  6E2C               	movwf	___fldiv@a^0,c
  9166   001F0C  0E00               	movlw	0
  9167   001F0E  6E2D               	movwf	(___fldiv@a+1)^0,c
  9168   001F10  0E00               	movlw	0
  9169   001F12  6E2E               	movwf	(___fldiv@a+2)^0,c
  9170   001F14  0E00               	movlw	0
  9171   001F16  6E2F               	movwf	(___fldiv@a+3)^0,c
  9172   001F18                     l2822:
  9173   001F18  502C               	movf	___fldiv@a^0,w,c
  9174   001F1A  102D               	iorwf	(___fldiv@a+1)^0,w,c
  9175   001F1C  102E               	iorwf	(___fldiv@a+2)^0,w,c
  9176   001F1E  102F               	iorwf	(___fldiv@a+3)^0,w,c
  9177   001F20  A4D8               	btfss	status,2,c
  9178   001F22  EF95  F00F         	goto	u2821
  9179   001F26  EF97  F00F         	goto	u2820
  9180   001F2A                     u2821:
  9181   001F2A  EFAF  F00F         	goto	l2834
  9182   001F2E                     u2820:
  9183   001F2E  0E00               	movlw	0
  9184   001F30  6E28               	movwf	___fldiv@b^0,c
  9185   001F32  0E00               	movlw	0
  9186   001F34  6E29               	movwf	(___fldiv@b+1)^0,c
  9187   001F36  0E00               	movlw	0
  9188   001F38  6E2A               	movwf	(___fldiv@b+2)^0,c
  9189   001F3A  0E00               	movlw	0
  9190   001F3C  6E2B               	movwf	(___fldiv@b+3)^0,c
  9191   001F3E  0E80               	movlw	128
  9192   001F40  122A               	iorwf	(___fldiv@b+2)^0,f,c
  9193   001F42  0E7F               	movlw	127
  9194   001F44  122B               	iorwf	(___fldiv@b+3)^0,f,c
  9195   001F46                     l2828:
  9196   001F46  5038               	movf	___fldiv@sign^0,w,c
  9197   001F48  122B               	iorwf	(___fldiv@b+3)^0,f,c
  9198   001F4A  C028  F028         	movff	___fldiv@b,?___fldiv
  9199   001F4E  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  9200   001F52  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  9201   001F56  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  9202   001F5A  EFEF  F010         	goto	l802
  9203   001F5E                     l2834:
  9204   001F5E  503F               	movf	___fldiv@bexp^0,w,c
  9205   001F60  A4D8               	btfss	status,2,c
  9206   001F62  EFB5  F00F         	goto	u2831
  9207   001F66  EFB7  F00F         	goto	u2830
  9208   001F6A                     u2831:
  9209   001F6A  EFC1  F00F         	goto	l2842
  9210   001F6E                     u2830:
  9211   001F6E  0E00               	movlw	0
  9212   001F70  6E28               	movwf	?___fldiv^0,c
  9213   001F72  0E00               	movlw	0
  9214   001F74  6E29               	movwf	(?___fldiv+1)^0,c
  9215   001F76  0E00               	movlw	0
  9216   001F78  6E2A               	movwf	(?___fldiv+2)^0,c
  9217   001F7A  0E00               	movlw	0
  9218   001F7C  6E2B               	movwf	(?___fldiv+3)^0,c
  9219   001F7E  EFEF  F010         	goto	l802
  9220   001F82                     l2842:
  9221   001F82  5040               	movf	___fldiv@aexp^0,w,c
  9222   001F84  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  9223   001F88  6A31               	clrf	(??___fldiv+1)^0,c
  9224   001F8A  5E30               	subwf	??___fldiv^0,f,c
  9225   001F8C  0E00               	movlw	0
  9226   001F8E  5A31               	subwfb	(??___fldiv+1)^0,f,c
  9227   001F90  0E7F               	movlw	127
  9228   001F92  2430               	addwf	??___fldiv^0,w,c
  9229   001F94  6E39               	movwf	___fldiv@new_exp^0,c
  9230   001F96  0E00               	movlw	0
  9231   001F98  2031               	addwfc	(??___fldiv+1)^0,w,c
  9232   001F9A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9233   001F9C  C028  F034         	movff	___fldiv@b,___fldiv@rem
  9234   001FA0  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  9235   001FA4  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  9236   001FA8  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  9237   001FAC  0E00               	movlw	0
  9238   001FAE  6E28               	movwf	___fldiv@b^0,c
  9239   001FB0  0E00               	movlw	0
  9240   001FB2  6E29               	movwf	(___fldiv@b+1)^0,c
  9241   001FB4  0E00               	movlw	0
  9242   001FB6  6E2A               	movwf	(___fldiv@b+2)^0,c
  9243   001FB8  0E00               	movlw	0
  9244   001FBA  6E2B               	movwf	(___fldiv@b+3)^0,c
  9245   001FBC  0E00               	movlw	0
  9246   001FBE  6E3B               	movwf	___fldiv@grs^0,c
  9247   001FC0  0E00               	movlw	0
  9248   001FC2  6E3C               	movwf	(___fldiv@grs+1)^0,c
  9249   001FC4  0E00               	movlw	0
  9250   001FC6  6E3D               	movwf	(___fldiv@grs+2)^0,c
  9251   001FC8  0E00               	movlw	0
  9252   001FCA  6E3E               	movwf	(___fldiv@grs+3)^0,c
  9253   001FCC  6A40               	clrf	___fldiv@aexp^0,c
  9254   001FCE  EF21  F010         	goto	l804
  9255   001FD2                     l2852:
  9256   001FD2  5040               	movf	___fldiv@aexp^0,w,c
  9257   001FD4  B4D8               	btfsc	status,2,c
  9258   001FD6  EFEF  F00F         	goto	u2841
  9259   001FDA  EFF1  F00F         	goto	u2840
  9260   001FDE                     u2841:
  9261   001FDE  EF08  F010         	goto	l2860
  9262   001FE2                     u2840:
  9263   001FE2  90D8               	bcf	status,0,c
  9264   001FE4  3634               	rlcf	___fldiv@rem^0,f,c
  9265   001FE6  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  9266   001FE8  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  9267   001FEA  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  9268   001FEC  90D8               	bcf	status,0,c
  9269   001FEE  3628               	rlcf	___fldiv@b^0,f,c
  9270   001FF0  3629               	rlcf	(___fldiv@b+1)^0,f,c
  9271   001FF2  362A               	rlcf	(___fldiv@b+2)^0,f,c
  9272   001FF4  362B               	rlcf	(___fldiv@b+3)^0,f,c
  9273   001FF6  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  9274   001FF8  EF00  F010         	goto	u2851
  9275   001FFC  EF02  F010         	goto	u2850
  9276   002000                     u2851:
  9277   002000  EF03  F010         	goto	l807
  9278   002004                     u2850:
  9279   002004  8028               	bsf	___fldiv@b^0,0,c
  9280   002006                     l807:
  9281   002006  90D8               	bcf	status,0,c
  9282   002008  363B               	rlcf	___fldiv@grs^0,f,c
  9283   00200A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  9284   00200C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  9285   00200E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  9286   002010                     l2860:
  9287   002010  502C               	movf	___fldiv@a^0,w,c
  9288   002012  5C34               	subwf	___fldiv@rem^0,w,c
  9289   002014  502D               	movf	(___fldiv@a+1)^0,w,c
  9290   002016  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  9291   002018  502E               	movf	(___fldiv@a+2)^0,w,c
  9292   00201A  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  9293   00201C  502F               	movf	(___fldiv@a+3)^0,w,c
  9294   00201E  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  9295   002020  A0D8               	btfss	status,0,c
  9296   002022  EF15  F010         	goto	u2861
  9297   002026  EF17  F010         	goto	u2860
  9298   00202A                     u2861:
  9299   00202A  EF20  F010         	goto	l2866
  9300   00202E                     u2860:
  9301   00202E  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  9302   002030  502C               	movf	___fldiv@a^0,w,c
  9303   002032  5E34               	subwf	___fldiv@rem^0,f,c
  9304   002034  502D               	movf	(___fldiv@a+1)^0,w,c
  9305   002036  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  9306   002038  502E               	movf	(___fldiv@a+2)^0,w,c
  9307   00203A  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  9308   00203C  502F               	movf	(___fldiv@a+3)^0,w,c
  9309   00203E  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  9310   002040                     l2866:
  9311   002040  2A40               	incf	___fldiv@aexp^0,f,c
  9312   002042                     l804:
  9313   002042  0E19               	movlw	25
  9314   002044  6440               	cpfsgt	___fldiv@aexp^0,c
  9315   002046  EF27  F010         	goto	u2871
  9316   00204A  EF29  F010         	goto	u2870
  9317   00204E                     u2871:
  9318   00204E  EFE9  F00F         	goto	l2852
  9319   002052                     u2870:
  9320   002052  5034               	movf	___fldiv@rem^0,w,c
  9321   002054  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  9322   002056  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  9323   002058  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  9324   00205A  B4D8               	btfsc	status,2,c
  9325   00205C  EF32  F010         	goto	u2881
  9326   002060  EF34  F010         	goto	u2880
  9327   002064                     u2881:
  9328   002064  EF4C  F010         	goto	l2878
  9329   002068                     u2880:
  9330   002068  803B               	bsf	___fldiv@grs^0,0,c
  9331   00206A  EF4C  F010         	goto	l2878
  9332   00206E                     l2872:
  9333   00206E  90D8               	bcf	status,0,c
  9334   002070  3628               	rlcf	___fldiv@b^0,f,c
  9335   002072  3629               	rlcf	(___fldiv@b+1)^0,f,c
  9336   002074  362A               	rlcf	(___fldiv@b+2)^0,f,c
  9337   002076  362B               	rlcf	(___fldiv@b+3)^0,f,c
  9338   002078  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  9339   00207A  EF41  F010         	goto	u2891
  9340   00207E  EF43  F010         	goto	u2890
  9341   002082                     u2891:
  9342   002082  EF44  F010         	goto	l813
  9343   002086                     u2890:
  9344   002086  8028               	bsf	___fldiv@b^0,0,c
  9345   002088                     l813:
  9346   002088  90D8               	bcf	status,0,c
  9347   00208A  363B               	rlcf	___fldiv@grs^0,f,c
  9348   00208C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  9349   00208E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  9350   002090  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  9351   002092  0639               	decf	___fldiv@new_exp^0,f,c
  9352   002094  A0D8               	btfss	status,0,c
  9353   002096  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  9354   002098                     l2878:
  9355   002098  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  9356   00209A  EF51  F010         	goto	u2901
  9357   00209E  EF53  F010         	goto	u2900
  9358   0020A2                     u2901:
  9359   0020A2  EF37  F010         	goto	l2872
  9360   0020A6                     u2900:
  9361   0020A6  6A40               	clrf	___fldiv@aexp^0,c
  9362   0020A8  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  9363   0020AA  EF59  F010         	goto	u2911
  9364   0020AE  EF5B  F010         	goto	u2910
  9365   0020B2                     u2911:
  9366   0020B2  EF7F  F010         	goto	l815
  9367   0020B6                     u2910:
  9368   0020B6  0EFF               	movlw	255
  9369   0020B8  143B               	andwf	___fldiv@grs^0,w,c
  9370   0020BA  6E30               	movwf	??___fldiv^0,c
  9371   0020BC  0EFF               	movlw	255
  9372   0020BE  143C               	andwf	(___fldiv@grs+1)^0,w,c
  9373   0020C0  6E31               	movwf	(??___fldiv+1)^0,c
  9374   0020C2  0EFF               	movlw	255
  9375   0020C4  143D               	andwf	(___fldiv@grs+2)^0,w,c
  9376   0020C6  6E32               	movwf	(??___fldiv+2)^0,c
  9377   0020C8  0E7F               	movlw	127
  9378   0020CA  143E               	andwf	(___fldiv@grs+3)^0,w,c
  9379   0020CC  6E33               	movwf	(??___fldiv+3)^0,c
  9380   0020CE  5030               	movf	??___fldiv^0,w,c
  9381   0020D0  1031               	iorwf	(??___fldiv+1)^0,w,c
  9382   0020D2  1032               	iorwf	(??___fldiv+2)^0,w,c
  9383   0020D4  1033               	iorwf	(??___fldiv+3)^0,w,c
  9384   0020D6  B4D8               	btfsc	status,2,c
  9385   0020D8  EF70  F010         	goto	u2921
  9386   0020DC  EF72  F010         	goto	u2920
  9387   0020E0                     u2921:
  9388   0020E0  EF76  F010         	goto	l816
  9389   0020E4                     u2920:
  9390   0020E4                     l2882:
  9391   0020E4  0E01               	movlw	1
  9392   0020E6  6E40               	movwf	___fldiv@aexp^0,c
  9393   0020E8  EF7F  F010         	goto	l815
  9394   0020EC                     l816:
  9395   0020EC  A028               	btfss	___fldiv@b^0,0,c
  9396   0020EE  EF7B  F010         	goto	u2931
  9397   0020F2  EF7D  F010         	goto	u2930
  9398   0020F6                     u2931:
  9399   0020F6  EF7F  F010         	goto	l815
  9400   0020FA                     u2930:
  9401   0020FA  EF72  F010         	goto	l2882
  9402   0020FE                     l815:
  9403   0020FE  5040               	movf	___fldiv@aexp^0,w,c
  9404   002100  B4D8               	btfsc	status,2,c
  9405   002102  EF85  F010         	goto	u2941
  9406   002106  EF87  F010         	goto	u2940
  9407   00210A                     u2941:
  9408   00210A  EFAB  F010         	goto	l2894
  9409   00210E                     u2940:
  9410   00210E  0E01               	movlw	1
  9411   002110  2628               	addwf	___fldiv@b^0,f,c
  9412   002112  0E00               	movlw	0
  9413   002114  2229               	addwfc	(___fldiv@b+1)^0,f,c
  9414   002116  222A               	addwfc	(___fldiv@b+2)^0,f,c
  9415   002118  222B               	addwfc	(___fldiv@b+3)^0,f,c
  9416   00211A  A02B               	btfss	(___fldiv@b+3)^0,0,c
  9417   00211C  EF92  F010         	goto	u2951
  9418   002120  EF94  F010         	goto	u2950
  9419   002124                     u2951:
  9420   002124  EFAB  F010         	goto	l2894
  9421   002128                     u2950:
  9422   002128  C028  F030         	movff	___fldiv@b,??___fldiv
  9423   00212C  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  9424   002130  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  9425   002134  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  9426   002138  3433               	rlcf	(??___fldiv+3)^0,w,c
  9427   00213A  3233               	rrcf	(??___fldiv+3)^0,f,c
  9428   00213C  3232               	rrcf	(??___fldiv+2)^0,f,c
  9429   00213E  3231               	rrcf	(??___fldiv+1)^0,f,c
  9430   002140  3230               	rrcf	??___fldiv^0,f,c
  9431   002142  C030  F028         	movff	??___fldiv,___fldiv@b
  9432   002146  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  9433   00214A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  9434   00214E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  9435   002152  4A39               	infsnz	___fldiv@new_exp^0,f,c
  9436   002154  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  9437   002156                     l2894:
  9438   002156  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9439   002158  EFB6  F010         	goto	u2961
  9440   00215C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  9441   00215E  E108               	bnz	u2960
  9442   002160  2839               	incf	___fldiv@new_exp^0,w,c
  9443   002162  A0D8               	btfss	status,0,c
  9444   002164  EFB6  F010         	goto	u2961
  9445   002168  EFB8  F010         	goto	u2960
  9446   00216C                     u2961:
  9447   00216C  EFC3  F010         	goto	l2898
  9448   002170                     u2960:
  9449   002170  0E00               	movlw	0
  9450   002172  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9451   002174  6839               	setf	___fldiv@new_exp^0,c
  9452   002176  0E00               	movlw	0
  9453   002178  6E28               	movwf	___fldiv@b^0,c
  9454   00217A  0E00               	movlw	0
  9455   00217C  6E29               	movwf	(___fldiv@b+1)^0,c
  9456   00217E  0E00               	movlw	0
  9457   002180  6E2A               	movwf	(___fldiv@b+2)^0,c
  9458   002182  0E00               	movlw	0
  9459   002184  6E2B               	movwf	(___fldiv@b+3)^0,c
  9460   002186                     l2898:
  9461   002186  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9462   002188  EFD0  F010         	goto	u2970
  9463   00218C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  9464   00218E  E106               	bnz	u2971
  9465   002190  0439               	decf	___fldiv@new_exp^0,w,c
  9466   002192  B0D8               	btfsc	status,0,c
  9467   002194  EFCE  F010         	goto	u2971
  9468   002198  EFD0  F010         	goto	u2970
  9469   00219C                     u2971:
  9470   00219C  EFDD  F010         	goto	l2904
  9471   0021A0                     u2970:
  9472   0021A0  0E00               	movlw	0
  9473   0021A2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  9474   0021A4  0E00               	movlw	0
  9475   0021A6  6E39               	movwf	___fldiv@new_exp^0,c
  9476   0021A8  0E00               	movlw	0
  9477   0021AA  6E28               	movwf	___fldiv@b^0,c
  9478   0021AC  0E00               	movlw	0
  9479   0021AE  6E29               	movwf	(___fldiv@b+1)^0,c
  9480   0021B0  0E00               	movlw	0
  9481   0021B2  6E2A               	movwf	(___fldiv@b+2)^0,c
  9482   0021B4  0E00               	movlw	0
  9483   0021B6  6E2B               	movwf	(___fldiv@b+3)^0,c
  9484   0021B8  6A38               	clrf	___fldiv@sign^0,c
  9485   0021BA                     l2904:
  9486   0021BA  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  9487   0021BE  A03F               	btfss	___fldiv@bexp^0,0,c
  9488   0021C0  EFE4  F010         	goto	u2981
  9489   0021C4  EFE6  F010         	goto	u2980
  9490   0021C8                     u2981:
  9491   0021C8  EFE9  F010         	goto	l2910
  9492   0021CC                     u2980:
  9493   0021CC  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  9494   0021CE  EFEA  F010         	goto	l2912
  9495   0021D2                     l2910:
  9496   0021D2  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  9497   0021D4                     l2912:
  9498   0021D4  90D8               	bcf	status,0,c
  9499   0021D6  303F               	rrcf	___fldiv@bexp^0,w,c
  9500   0021D8  6E2B               	movwf	(___fldiv@b+3)^0,c
  9501   0021DA  EFA3  F00F         	goto	l2828
  9502   0021DE                     l802:
  9503   0021DE  0012               	return		;funcret
  9504   0021E0                     __end_of___fldiv:
  9505                           	callstack 0
  9506                           
  9507 ;; *************** function _ADC_read *****************
  9508 ;; Defined at:
  9509 ;;		line 25 in file "adc.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  channel         1    wreg     unsigned char 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  channel         1    4[COMRAM] unsigned char 
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  2    0[COMRAM] unsigned int 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9523 ;;      Params:         2       0       0       0       0       0       0
  9524 ;;      Locals:         1       0       0       0       0       0       0
  9525 ;;      Temps:          2       0       0       0       0       0       0
  9526 ;;      Totals:         5       0       0       0       0       0       0
  9527 ;;Total ram usage:        5 bytes
  9528 ;; Hardware stack levels used: 1
  9529 ;; Hardware stack levels required when called: 1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_main
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text42
  9538   00332E                     __ptext42:
  9539                           	callstack 0
  9540   00332E                     _ADC_read:
  9541                           	callstack 29
  9542                           
  9543                           ;incstack = 0
  9544                           ;ADC_read@channel stored from wreg
  9545   00332E  6E05               	movwf	ADC_read@channel^0,c
  9546   003330                     
  9547                           ;adc.c: 26:     if (channel > 12) return 0;
  9548   003330  0E0C               	movlw	12
  9549   003332  6405               	cpfsgt	ADC_read@channel^0,c
  9550   003334  EF9E  F019         	goto	u4341
  9551   003338  EFA0  F019         	goto	u4340
  9552   00333C                     u4341:
  9553   00333C  EFA6  F019         	goto	l3782
  9554   003340                     u4340:
  9555   003340  0E00               	movlw	0
  9556   003342  6E02               	movwf	(?_ADC_read+1)^0,c
  9557   003344  0E00               	movlw	0
  9558   003346  6E01               	movwf	?_ADC_read^0,c
  9559   003348  EFBF  F019         	goto	l172
  9560   00334C                     l3782:
  9561                           
  9562                           ;adc.c: 29:     ADCON0 &= 0b00000011;
  9563   00334C  0E03               	movlw	3
  9564   00334E  16C2               	andwf	194,f,c	;volatile
  9565                           
  9566                           ;adc.c: 30:     ADCON0 |= (channel << 2);
  9567   003350  4405               	rlncf	ADC_read@channel^0,w,c	;volatile
  9568   003352  46E8               	rlncf	wreg,f,c
  9569   003354  0BFC               	andlw	252
  9570   003356  12C2               	iorwf	194,f,c	;volatile
  9571   003358                     
  9572                           ;adc.c: 32:     ADCON0bits.GODONE = 1;
  9573   003358  82C2               	bsf	194,1,c	;volatile
  9574   00335A                     l173:
  9575   00335A  B2C2               	btfsc	194,1,c	;volatile
  9576   00335C  EFB2  F019         	goto	u4351
  9577   003360  EFB4  F019         	goto	u4350
  9578   003364                     u4351:
  9579   003364  EFAD  F019         	goto	l173
  9580   003368                     u4350:
  9581   003368                     
  9582                           ;adc.c: 35:     return (unsigned int)((ADRESH << 8) | ADRESL);
  9583   003368  50C3               	movf	195,w,c	;volatile
  9584   00336A  CFC4 F003          	movff	4036,??_ADC_read	;volatile
  9585   00336E  6A04               	clrf	(??_ADC_read+1)^0,c
  9586   003370  C003  F004         	movff	??_ADC_read,??_ADC_read+1
  9587   003374  6A03               	clrf	??_ADC_read^0,c
  9588   003376  1003               	iorwf	??_ADC_read^0,w,c
  9589   003378  6E01               	movwf	?_ADC_read^0,c
  9590   00337A  5004               	movf	(??_ADC_read+1)^0,w,c
  9591   00337C  6E02               	movwf	(?_ADC_read+1)^0,c
  9592   00337E                     l172:
  9593   00337E  0012               	return		;funcret
  9594   003380                     __end_of_ADC_read:
  9595                           	callstack 0
  9596                           
  9597 ;; *************** function _ADC_init *****************
  9598 ;; Defined at:
  9599 ;;		line 12 in file "adc.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;		None
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;		None
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      void 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9613 ;;      Params:         0       0       0       0       0       0       0
  9614 ;;      Locals:         0       0       0       0       0       0       0
  9615 ;;      Temps:          0       0       0       0       0       0       0
  9616 ;;      Totals:         0       0       0       0       0       0       0
  9617 ;;Total ram usage:        0 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; Hardware stack levels required when called: 1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_main
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text43
  9628   0036C2                     __ptext43:
  9629                           	callstack 0
  9630   0036C2                     _ADC_init:
  9631                           	callstack 29
  9632   0036C2                     
  9633                           ;adc.c: 14:     TRISA = 0b11111111;
  9634   0036C2  6892               	setf	146,c	;volatile
  9635   0036C4                     
  9636                           ;adc.c: 17:     ADCON0 = 0b00001101;
  9637   0036C4  0E0D               	movlw	13
  9638   0036C6  6EC2               	movwf	194,c	;volatile
  9639   0036C8                     
  9640                           ;adc.c: 20:     ADCON1 = 0b00000000;
  9641   0036C8  6AC1               	clrf	193,c	;volatile
  9642                           
  9643                           ;adc.c: 22:     ADCON2 = 0b10111010;
  9644   0036CA  0EBA               	movlw	186
  9645   0036CC  6EC0               	movwf	192,c	;volatile
  9646   0036CE  0012               	return		;funcret
  9647   0036D0                     __end_of_ADC_init:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function _isr *****************
  9651 ;; Defined at:
  9652 ;;		line 210 in file "main.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;		None
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg, status,2, status,0
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9666 ;;      Params:         0       0       0       0       0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0
  9668 ;;      Temps:          0       0       0       0       0       0       0
  9669 ;;      Totals:         0       0       0       0       0       0       0
  9670 ;;Total ram usage:        0 bytes
  9671 ;; Hardware stack levels used: 1
  9672 ;; This function calls:
  9673 ;;		Nothing
  9674 ;; This function is called by:
  9675 ;;		Interrupt level 2
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	intcode
  9680   000008                     __pintcode:
  9681                           	callstack 0
  9682   000008                     _isr:
  9683                           	callstack 22
  9684                           
  9685                           ;incstack = 0
  9686   000008  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9687   00000A  ED3A  F018         	call	int_func,f	;refresh shadow registers
  9688                           
  9689                           	psect	intcode_body
  9690   003074                     __pintcode_body:
  9691                           	callstack 22
  9692   003074                     int_func:
  9693                           	callstack 22
  9694   003074  0006               	pop		; remove dummy address from shadow register refresh
  9695   003076                     
  9696                           ;main.c: 212:     if(PIR1bits.ADIF){
  9697   003076  AC9E               	btfss	158,6,c	;volatile
  9698   003078  EF40  F018         	goto	i2u456_41
  9699   00307C  EF42  F018         	goto	i2u456_40
  9700   003080                     i2u456_41:
  9701   003080  EF51  F018         	goto	i2l4010
  9702   003084                     i2u456_40:
  9703   003084                     
  9704                           ;main.c: 213:         PIR1bits.ADIF = 0;
  9705   003084  9C9E               	bcf	158,6,c	;volatile
  9706   003086                     
  9707                           ;main.c: 214:         flag_analog_value = !flag_analog_value;
  9708   003086  0100               	movlb	0	; () banked
  9709   003088  51E4               	movf	_flag_analog_value& (0+255),w,b
  9710   00308A  11E5               	iorwf	(_flag_analog_value+1)& (0+255),w,b
  9711   00308C  B4D8               	btfsc	status,2,c
  9712   00308E  EF4B  F018         	goto	i2u457_41
  9713   003092  EF4E  F018         	goto	i2u457_40
  9714   003096                     i2u457_41:
  9715   003096  0E01               	movlw	1
  9716   003098  EF4F  F018         	goto	i2u458_40
  9717   00309C                     i2u457_40:
  9718   00309C  0E00               	movlw	0
  9719   00309E                     i2u458_40:
  9720   00309E  6FE4               	movwf	_flag_analog_value& (0+255),b
  9721   0030A0  6BE5               	clrf	(_flag_analog_value+1)& (0+255),b
  9722   0030A2                     i2l4010:
  9723                           
  9724                           ;main.c: 217:     if (INTCONbits.TMR0IF){
  9725   0030A2  A4F2               	btfss	242,2,c	;volatile
  9726   0030A4  EF56  F018         	goto	i2u459_41
  9727   0030A8  EF58  F018         	goto	i2u459_40
  9728   0030AC                     i2u459_41:
  9729   0030AC  EF7C  F018         	goto	i2l96
  9730   0030B0                     i2u459_40:
  9731   0030B0                     
  9732                           ;main.c: 218:         INTCONbits.TMR0IF = 0;
  9733   0030B0  94F2               	bcf	242,2,c	;volatile
  9734   0030B2                     
  9735                           ;main.c: 219:         TMR0H = 0xF0;
  9736   0030B2  0EF0               	movlw	240
  9737   0030B4  6ED7               	movwf	215,c	;volatile
  9738                           
  9739                           ;main.c: 220:         TMR0L = 0xBE;
  9740   0030B6  0EBE               	movlw	190
  9741   0030B8  6ED6               	movwf	214,c	;volatile
  9742   0030BA                     
  9743                           ;main.c: 221:         timer++;
  9744   0030BA  4A7A               	infsnz	_timer^0,f,c
  9745   0030BC  2A7B               	incf	(_timer+1)^0,f,c
  9746   0030BE                     
  9747                           ;main.c: 222:         if (timer >= 6){
  9748   0030BE  507B               	movf	(_timer+1)^0,w,c
  9749   0030C0  E109               	bnz	i2u460_40
  9750   0030C2  0E06               	movlw	6
  9751   0030C4  5C7A               	subwf	_timer^0,w,c
  9752   0030C6  A0D8               	btfss	status,0,c
  9753   0030C8  EF68  F018         	goto	i2u460_41
  9754   0030CC  EF6A  F018         	goto	i2u460_40
  9755   0030D0                     i2u460_41:
  9756   0030D0  EF7C  F018         	goto	i2l96
  9757   0030D4                     i2u460_40:
  9758   0030D4                     
  9759                           ;main.c: 223:             timer = 0;
  9760   0030D4  0E00               	movlw	0
  9761   0030D6  6E7B               	movwf	(_timer+1)^0,c
  9762   0030D8  0E00               	movlw	0
  9763   0030DA  6E7A               	movwf	_timer^0,c
  9764   0030DC                     
  9765                           ;main.c: 224:             flow = !flow;
  9766   0030DC  0100               	movlb	0	; () banked
  9767   0030DE  51E2               	movf	_flow& (0+255),w,b
  9768   0030E0  11E3               	iorwf	(_flow+1)& (0+255),w,b
  9769   0030E2  B4D8               	btfsc	status,2,c
  9770   0030E4  EF76  F018         	goto	i2u461_41
  9771   0030E8  EF79  F018         	goto	i2u461_40
  9772   0030EC                     i2u461_41:
  9773   0030EC  0E01               	movlw	1
  9774   0030EE  EF7A  F018         	goto	i2u462_40
  9775   0030F2                     i2u461_40:
  9776   0030F2  0E00               	movlw	0
  9777   0030F4                     i2u462_40:
  9778   0030F4  6FE2               	movwf	_flow& (0+255),b
  9779   0030F6  6BE3               	clrf	(_flow+1)& (0+255),b
  9780   0030F8                     i2l96:
  9781   0030F8  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9782   0030FA  0011               	retfie		f
  9783   0030FC                     __end_of_isr:
  9784                           	callstack 0
  9785                           
  9786                           	psect	rparam
  9787   000001                     ___rparam_used  equ	1
  9788   000000                     ___param_bank   equ	0
  9789   000000                     __Lparam        equ	__Lrparam
  9790   000000                     __Hparam        equ	__Hrparam
  9791                           
  9792                           	psect	temp
  9793   00007F                     btemp:
  9794                           	callstack 0
  9795   00007F                     	ds	1
  9796   00007F                     int$flags       set	btemp
  9797   000080                     wtemp8          set	btemp+1
  9798   000080                     ttemp5          set	btemp+1
  9799   000083                     ttemp6          set	btemp+4
  9800   000087                     ttemp7          set	btemp+8
  9801                           
  9802                           	psect	config
  9803                           
  9804                           ; Padding undefined space
  9805   300000                     	org	3145728
  9806   300000  FF                 	db	255
  9807                           
  9808                           ;Config register CONFIG1H @ 0x300001
  9809                           ;	Oscillator Selection bits
  9810                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  9811                           ;	Fail-Safe Clock Monitor Enable bit
  9812                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9813                           ;	Internal/External Oscillator Switchover bit
  9814                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9815   300001                     	org	3145729
  9816   300001  08                 	db	8
  9817                           
  9818                           ;Config register CONFIG2L @ 0x300002
  9819                           ;	Power-up Timer Enable bit
  9820                           ;	PWRT = OFF, PWRT disabled
  9821                           ;	Brown-out Reset Enable bits
  9822                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  9823                           ;	Brown Out Reset Voltage bits
  9824                           ;	BORV = 3, Minimum setting
  9825   300002                     	org	3145730
  9826   300002  19                 	db	25
  9827                           
  9828                           ;Config register CONFIG2H @ 0x300003
  9829                           ;	Watchdog Timer Enable bit
  9830                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9831                           ;	Watchdog Timer Postscale Select bits
  9832                           ;	WDTPS = 32768, 1:32768
  9833   300003                     	org	3145731
  9834   300003  1E                 	db	30
  9835                           
  9836                           ; Padding undefined space
  9837   300004                     	org	3145732
  9838   300004  FF                 	db	255
  9839                           
  9840                           ;Config register CONFIG3H @ 0x300005
  9841                           ;	CCP2 MUX bit
  9842                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9843                           ;	PORTB A/D Enable bit
  9844                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9845                           ;	Low-Power Timer1 Oscillator Enable bit
  9846                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9847                           ;	MCLR Pin Enable bit
  9848                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9849   300005                     	org	3145733
  9850   300005  81                 	db	129
  9851                           
  9852                           ;Config register CONFIG4L @ 0x300006
  9853                           ;	Stack Full/Underflow Reset Enable bit
  9854                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9855                           ;	Single-Supply ICSP Enable bit
  9856                           ;	LVP = OFF, Single-Supply ICSP disabled
  9857                           ;	Extended Instruction Set Enable bit
  9858                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9859                           ;	Background Debugger Enable bit
  9860                           ;	DEBUG = 0x1, unprogrammed default
  9861   300006                     	org	3145734
  9862   300006  80                 	db	128
  9863                           
  9864                           ; Padding undefined space
  9865   300007                     	org	3145735
  9866   300007  FF                 	db	255
  9867                           
  9868                           ;Config register CONFIG5L @ 0x300008
  9869                           ;	Code Protection bit
  9870                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  9871                           ;	Code Protection bit
  9872                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  9873                           ;	Code Protection bit
  9874                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  9875                           ;	Code Protection bit
  9876                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  9877   300008                     	org	3145736
  9878   300008  0F                 	db	15
  9879                           
  9880                           ;Config register CONFIG5H @ 0x300009
  9881                           ;	Boot Block Code Protection bit
  9882                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9883                           ;	Data EEPROM Code Protection bit
  9884                           ;	CPD = OFF, Data EEPROM not code-protected
  9885   300009                     	org	3145737
  9886   300009  C0                 	db	192
  9887                           
  9888                           ;Config register CONFIG6L @ 0x30000A
  9889                           ;	Write Protection bit
  9890                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  9891                           ;	Write Protection bit
  9892                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  9893                           ;	Write Protection bit
  9894                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  9895                           ;	Write Protection bit
  9896                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  9897   30000A                     	org	3145738
  9898   30000A  0F                 	db	15
  9899                           
  9900                           ;Config register CONFIG6H @ 0x30000B
  9901                           ;	Configuration Register Write Protection bit
  9902                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9903                           ;	Boot Block Write Protection bit
  9904                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  9905                           ;	Data EEPROM Write Protection bit
  9906                           ;	WRTD = OFF, Data EEPROM not write-protected
  9907   30000B                     	org	3145739
  9908   30000B  E0                 	db	224
  9909                           
  9910                           ;Config register CONFIG7L @ 0x30000C
  9911                           ;	Table Read Protection bit
  9912                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9913                           ;	Table Read Protection bit
  9914                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9915                           ;	Table Read Protection bit
  9916                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  9917                           ;	Table Read Protection bit
  9918                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9919   30000C                     	org	3145740
  9920   30000C  0F                 	db	15
  9921                           
  9922                           ;Config register CONFIG7H @ 0x30000D
  9923                           ;	Boot Block Table Read Protection bit
  9924                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9925   30000D                     	org	3145741
  9926   30000D  40                 	db	64
  9927                           tosu	equ	0xFFF
  9928                           tosh	equ	0xFFE
  9929                           tosl	equ	0xFFD
  9930                           stkptr	equ	0xFFC
  9931                           pclatu	equ	0xFFB
  9932                           pclath	equ	0xFFA
  9933                           pcl	equ	0xFF9
  9934                           tblptru	equ	0xFF8
  9935                           tblptrh	equ	0xFF7
  9936                           tblptrl	equ	0xFF6
  9937                           tablat	equ	0xFF5
  9938                           prodh	equ	0xFF4
  9939                           prodl	equ	0xFF3
  9940                           indf0	equ	0xFEF
  9941                           postinc0	equ	0xFEE
  9942                           postdec0	equ	0xFED
  9943                           preinc0	equ	0xFEC
  9944                           plusw0	equ	0xFEB
  9945                           fsr0h	equ	0xFEA
  9946                           fsr0l	equ	0xFE9
  9947                           wreg	equ	0xFE8
  9948                           indf1	equ	0xFE7
  9949                           postinc1	equ	0xFE6
  9950                           postdec1	equ	0xFE5
  9951                           preinc1	equ	0xFE4
  9952                           plusw1	equ	0xFE3
  9953                           fsr1h	equ	0xFE2
  9954                           fsr1l	equ	0xFE1
  9955                           bsr	equ	0xFE0
  9956                           indf2	equ	0xFDF
  9957                           postinc2	equ	0xFDE
  9958                           postdec2	equ	0xFDD
  9959                           preinc2	equ	0xFDC
  9960                           plusw2	equ	0xFDB
  9961                           fsr2h	equ	0xFDA
  9962                           fsr2l	equ	0xFD9
  9963                           status	equ	0xFD8

Data Sizes:
    Strings     146
    Constant    0
    Data        2
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     126
    BANK0           128     78     102
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_string@str	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK0[16]), STR_1(CODE[10]), STR_2(CODE[2]), STR_3(CODE[13]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[13]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1239$buffer	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    S1239$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[17]), STR_4(CODE[15]), STR_9(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_14(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[17]), STR_4(CODE[15]), STR_9(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[17]), STR_4(CODE[15]), STR_9(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[17]), STR_4(CODE[15]), STR_9(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_string->_lcd_data
    _lcd_data->_lcd_enable
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_enable
    _ADC_read_temp->___fldiv
    _ADC_read_lumi->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   21252
                                            115 COMRAM     2     2      0
                                             53 BANK0     25    25      0
                           _ADC_init
                           _ADC_read
                      _ADC_read_lumi
                      _ADC_read_temp
                         _DHT11_Init
                     _DHT11_ReadData
                        _PWM_control
                           _PWM_init
                             ___flge
                          _lcd_clear
                           _lcd_init
                     _lcd_set_cursor
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   14153
                                            103 COMRAM    12    12      0
                                             47 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   13942
                                            102 COMRAM     1     1      0
                                             44 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   13805
                                             92 COMRAM    10     7      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   10930
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     204
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     9      3    1767
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     710
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     331
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           2     0      2      84
                                              2 COMRAM     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0      29
                                              1 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       4     3      1     112
                                              2 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      29
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0      29
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      29
                                              1 COMRAM     1     1      0
                         _lcd_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_enable                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_control                                          4     2      2      90
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0     115
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Init                                           1     1      0       0
                                              0 COMRAM     1     1      0
                _DHT11_CheckResponse
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read_temp                                        8     4      4    3004
                                             64 COMRAM     8     4      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_read_lumi                                        4     0      4    2981
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     338
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1484
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1135
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             5     3      2      58
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _ADC_read_lumi
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _ADC_read_temp
     ___fldiv
     ___flmul
     ___xxtofl
   _DHT11_Init
     _DHT11_CheckResponse
   _DHT11_ReadData
   _PWM_control
   _PWM_init
   ___flge
     ___flmul (ARG)
   _lcd_clear
     _lcd_cmd
       _lcd_enable
   _lcd_init
     _lcd_cmd
   _lcd_set_cursor
     _lcd_cmd
   _lcd_string
     _lcd_data
       _lcd_enable
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBANK0           128      0       0      0.0%
BANK0              128     78     102     79.7%
BITCOMRAM          126      0       0      0.0%
COMRAM             126    117     126    100.0%
BITBIGSFRh          66      0       0      0.0%
BITBIGSFRlh         51      0       0      0.0%
BITBIGSFRllh         5      0       0      0.0%
BITBIGSFRlll         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     307      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 14:11:51 2025

               ___fldiv@aexp 0040                 ___fldiv@bexp 003F                 lcd_data@data 0002  
               ___fldiv@sign 0038                           l62 1088                 ___awdiv@sign 0006  
         ADC_read_lumi@value 0041                          l111 36A4                          l120 35EA  
                        l202 3282                          l114 36C0                          l211 3608  
                        l131 3674                          l205 35EC                          l117 36B2  
                        l214 3616                          l134 368C                          l126 322A  
                        l151 332C                          l208 35FA                          l217 363A  
                        l147 3658                          l172 337E                          l173 335A  
                        l181 3072                          l168 36CE                          l178 3166  
                        l194 3230                          l451 2D2C                          l517 2A68  
                        l199 3260                          l464 2DDA                          l802 21DE  
                        l490 2B6C                          l804 2042                          l813 2088  
                        l485 2B26                          l814 20A6                          l494 3588  
                        l750 1710                          l815 20FE                          l807 2006  
                        l479 2E84                          l816 20EC                          l841 1CE4  
                        l842 1D02                          l834 1AEE                          l762 1904  
                        l851 1E10                          l843 1D5A                          l931 31CC  
                        l844 1D48                          l748 175C                          l781 19EC  
                        l765 1876                          l757 1A28                          l749 174A  
                        l838 1E4E                          l774 1944                          l790 345E  
                        l927 317E                          l935 281C                          l775 1932  
                        l960 1076                          l937 2824                          l882 2726  
                        l938 286A                          l875 268E                          l963 0A18  
                        l949 2962                          l965 085E                          l878 27EA  
                        l889 2782                          l993 0E5E                          l898 3550  
              main@T_Decimal 00C7                          _PR2 0FCB           ADC_read_temp@value 0041  
                        _abs 358A                          _pad 3168                          _isr 0008  
               ___awmod@sign 0006                          wreg 0FE8                 ___flmul@aexp 0020  
               ___flmul@bexp 0021                 ___flmul@sign 001B                 ___flmul@temp 0026  
               ___flmul@prod 0022              ?_lcd_set_cursor 0003                 ___fltol@exp1 000A  
                       l1005 2FCA                         l1103 34DE                         l1023 22FC  
                       l1112 3518                         l1009 2FD2                         l1017 2424  
                       l1106 36D2                         ?_abs 0007                         l1054 35A4  
                       l1063 2636                         l1039 349E                         l3000 1CAC  
                       l1057 35BC                         l1049 2C6A                         l3010 1D12  
                       l3002 1CCA                         l1066 257A                         l1083 33CE  
                       l3020 1D84                         l3012 1D40                         l3004 1CD4  
                       l3100 2D30                         l1077 32D8                         l3030 1DFA  
                       l3022 1DAE                         l3006 1CE2                         l3110 2D60  
                       l3102 2D3E                         l1095 2F2E                         l3040 1E34  
                       l3032 1E0A                         l3016 1D6A                         l3024 1DB2  
                       l3008 1CF4                         l3120 2DA6                         l3112 2D72  
                       l3104 2D46                         l4000 1548                         l3034 1E14  
                       l3042 1E3A                         l3026 1DCC                         l3018 1D76  
                       l3130 2DD2                         l3122 2DAE                         l3114 2D7A  
                       l3106 2D4A                         l3050 342A                         l3202 29F4  
                       l4002 1554                         l3044 1E3E                         l3036 1E24  
                       l3028 1DE0                         l3060 2C84                         l3124 2DB4  
                       l3116 2D82                         l3108 2D58                         l3140 2E48  
                       l3220 2A58                         l3212 2A1C                         l3204 29FE  
                       l3038 1E32                         l3070 2CAA                         l3062 2C88  
                       l3054 2C6C                         l3118 2D90                         l3126 2DBA  
                       l3230 319A                         l3142 2E58                         l3134 2DDC  
                       l3150 2A6A                         l3214 2A28                         l3206 2A08  
                       l3310 33B0                         l3302 3380                         l3080 2CE0  
                       l3072 2CBC                         l3064 2C96                         l3056 2C6E  
                       l3128 2DCA                         l3232 319E                         l3224 3168  
                       l3320 283C                         l3144 2E7C                         l3136 2E0A  
                       l3160 2AF4                         l3152 2A98                         l2600 15D8  
                       l3048 341A                         l3216 2A38                         l3240 2B6E  
                       l3304 3394                         l3312 33B4                         l3400 07D2  
                       l3082 2CF6                         l3074 2CC4                         l3090 2D0C  
                       l3066 2C9E                         l3058 2C7C                         l3234 31BC  
                       l3226 3176                         l3330 2872                         l3322 2842  
                       l3314 27EC                         l3146 2E82                         l3138 2E1A  
                       l3162 2B06                         l3154 2AA8                         l2610 1606  
                       l2602 15DE                         l3218 2A48                         l3242 2B8E  
                       l3306 33A0                         l3402 07E4                         l3092 2D1C  
                       l3084 2CFE                         l3076 2CCC                         l3068 2CA2  
                       l3236 358A                         l3228 318A                         l3340 28BE  
                       l3332 287A                         l3324 2852                         l3316 2810  
                       l3164 2B14                         l3156 2AD6                         l3172 3552  
                       l2700 17DA                         l2620 163A                         l2612 1608  
                       l2604 15F0                         l3180 2964                         l3244 2BCC  
                       l3252 2C0C                         l3308 33A4                         l3500 0D74  
                       l3404 07E8                         l3094 2D24                         l3086 2D00  
                       l3078 2CDA                         l3238 3598                         l3350 2930  
                       l3334 2880                         l3342 28DA                         l3326 285E  
                       l3318 282C                         l3166 2B64                         l3158 2AE6  
                       l3174 3568                         l2710 1846                         l2702 17E4  
                       l2630 1674                         l2614 1618                         l2622 1640  
                       l2606 15F2                         l3190 29BA                         l3182 297A  
                       l3254 2C1E                         l3246 2BF4                         l3270 32A6  
                       l3262 34E0                         l3510 0DA8                         l3502 0D88  
                       l3430 0918                         l3422 086E                         l3406 07EE  
                       l2800 1EA4                         l3088 2D06                         l3352 2936  
                       l3344 28F4                         l3336 28B2                         l3328 2866  
                       l3168 2B6A                         l3176 3578                         l2712 1856  
                       l2704 17EA                         l2640 1688                         l2632 1678  
                       l2624 1650                         l2616 1628                         l2608 15F8  
                       l3192 29CA                         l3248 2C00                         l3280 24B0  
                       l3264 34E8                         l3520 0E70                         l3512 0DB0  
                       l3504 0D8C                         l3432 0956                         l3424 0874  
                       l3408 07F6                         l3416 080E                         l3360 06A8  
                       l3600 220A                         l2810 1ED0                         l2802 1EB4  
                       l3098 2D2E                         l2570 2E96                         l3354 2946  
                       l3346 2906                         l3338 28B8                         l2730 18D8  
                       l2722 18B0                         l2706 1810                         l2714 1866  
                       l2650 169C                         l2642 168C                         l2634 167C  
                       l2626 1662                         l2618 1638                         l3194 29CE  
                       l3186 298E                         l3258 2C62                         l3282 24BE  
                       l3290 259E                         l3274 2426                         l3266 3284  
                       l3530 0EA0                         l3522 0E7E                         l3514 0DBC  
                       l3506 0D9C                         l3450 0A44                         l3434 096A  
                       l3442 09E6                         l3426 08A8                         l3418 0828  
                       l3370 06F0                         l3362 06B6                         l3610 225A  
                       l3602 2218                         l2900 21A0                         l2812 1EE0  
                       l2820 1F08                         l2804 1EBA                         l3700 2710  
                       l2572 2EA6                         l3348 2920                         l2740 1914  
                       l2732 18E0                         l2724 18BA                         l2716 188C  
                       l2708 1844                         l2652 16A0                         l2644 1690  
                       l2636 1680                         l2628 1670                         l2660 16B0  
                       l3196 29DC                         l3188 29B8                         l3292 25DA  
                       l3276 2446                         l3268 3292                         l3540 0ED2  
                       l3532 0EB0                         l3524 0E8E                         l3516 0E34  
                       l3508 0DA4                         l3460 0A88                         l3452 0A4C  
                       l3444 0A20                         l3436 099E                         l3428 08E6  
                       l3372 0700                         l3380 0728                         l3364 06BA  
                       l3620 22BE                         l3612 2264                         l3604 221C  
                       l2910 21D2                         l2902 21B8                         l2830 1F4A  
                       l2822 1F18                         l2814 1EF0                         l2806 1EC0  
                       l3710 2790                         l3702 271C                         l2574 2EB0  
                       l2750 196E                         l2742 192A                         l2734 18E4  
                       l2726 18C8                         l2718 189C                         l2670 172A  
                       l2662 16DC                         l2654 16A4                         l2646 1694  
                       l2638 1684                         l2590 15A0                         l2582 1574  
                       l3294 25EE                         l3286 252E                         l3278 249C  
                       l3550 0F7A                         l3542 0EE4                         l3534 0EB4  
                       l3526 0E92                         l3518 0E54                         l3470 0ACE  
                       l3462 0A9A                         l3454 0A50                         l3446 0A30  
                       l3438 09A6                         l3390 0772                         l3382 074E  
                       l3374 0710                         l3366 06DE                         l3358 0694  
                       l3630 22F4                         l3614 2280                         l3606 223E  
                       l2912 21D4                         l2904 21BA                         l2824 1F2E  
                       l2816 1F00                         l2808 1ECE                         l2920 1A2A  
                       l3720 27D8                         l3712 2792                         l3704 2758  
                       l2576 2ECC                         l2568 2E86                         l2760 19EA  
                       l2752 19A8                         l2736 18F4                         l2728 18CA  
                       l2680 176A                         l2672 172E                         l2664 16F8  
                       l2656 16A8                         l2648 1698                         l2592 15B0  
                       l2584 1580                         l3296 2616                         l3288 256A  
                       l3560 0FC8                         l3552 0F82                         l3544 0EE8  
                       l3536 0EBA                         l3528 0E98                         l3480 0BE2  
                       l3472 0B32                         l3456 0A62                         l3464 0AA2  
                       l3448 0A3C                         l3392 0786                         l3384 0760  
                       l3376 071C                         l3368 06E8                         l3640 2368  
                       l3624 22D2                         l3616 229C                         l3608 2246  
                       l3800 3532                         l2906 21BE                         l2850 1FCC  
                       l2842 1F82                         l2826 1F3E                         l2834 1F5E  
                       l2818 1F02                         l2930 1A66                         l2922 1A36  
                       l3722 27DA                         l3714 2796                         l3706 2764  
                       l3810 3618                         l2578 2EFE                         l2770 1A16  
                       l2762 19FA                         l2746 1954                         l2754 19AA  
                       l2738 18F6                         l2690 17AC                         l2682 177A  
                       l2674 173C                         l2666 1708                         l2658 16AC  
                       l2594 15C0                         l2586 158E                         l3298 2626  
                       l3570 103C                         l3562 0FD6                         l3546 0EEE  
                       l3538 0EC0                         l3554 0F86                         l3490 0CA0  
                       l3482 0C16                         l3474 0B8A                         l3466 0AAA  
                       l3458 0A70                         l3394 0790                         l3386 0764  
                       l3378 0724                         l3634 2302                         l3626 22DC  
                       l3618 22B4                         l3730 3478                         l3802 3544  
                       l3740 36C8                         l2908 21CC                         l2860 2010  
                       l2852 1FD2                         l2844 1F9C                         l2836 1F6E  
                       l2828 1F46                         l2940 1A98                         l2932 1A76  
                       l2924 1A44                         l3716 27BA                         l3708 2772  
                       l3812 361C                         l3820 322C                         l2780 34BA  
                       l2772 1A18                         l2764 1A00                         l2756 19BA  
                       l2748 1960                         l2692 17BA                         l2676 173E  
                       l2668 171E                         l2596 15C2                         l2588 1590  
                       l3572 1052                         l3564 1006                         l3556 0FA4  
                       l3548 0F46                         l3492 0CB0                         l3484 0C48  
                       l3476 0BBE                         l3468 0ABA                         l3388 076A  
                       l3580 2F38                         l3644 2390                         l3636 2320  
                       l3628 22EE                         l3660 2402                         l3732 3494  
                       l3900 1150                         l2870 2068                         l2862 202E  
                       l2854 1FE2                         l2846 1FAC                         l2838 1F6E  
                       l2790 1E6C                         l2950 1AD8                         l2942 1AA6  
                       l2934 1A7C                         l2926 1A46                         l3718 27CA  
                       l3806 30FC                         l3814 362A                         l3830 3252  
                       l3742 363C                         l3670 36BC                         l3750 35C4  
                       l2782 34BE                         l2766 1A02                         l2758 19CA  
                       l2694 17C6                         l2686 178E                         l2678 1748  
                       l2598 15C8                         l3574 105A                         l3566 1014  
                       l3558 0FC0                         l3494 0CE4                         l3486 0C5E  
                       l3478 0BC4                         l3398 07AC                         l3582 2F5A  
                       l3590 2FA4                         l3654 23DE                         l3646 23A6  
                       l3638 2340                         l3726 3460                         l3910 11B6  
                       l3902 1164                         ?_pad 000F                         l3736 36C2  
                       l2880 20B6                         l2872 206E                         l2864 2030  
                       l2856 1FF6                         l2848 1FBC                         l2792 1E7C  
                       l2784 1E50                         l2960 1B22                         l2952 1ADE  
                       l2944 1AA8                         l2936 1A8C                         l2928 1A56  
                       l3680 263A                         l3816 3634                         l3832 325A  
                       l3744 3644                         l3592 368E                         l3752 35D2  
                       l3760 365C                         l3672 36A8                         l2776 34A0  
                       l2768 1A08                         l2696 17CA                         l2688 179E  
                       l3568 102C                         l3496 0D3A                         l3488 0C90  
                       l3584 2F62                         l3648 23B4                         l3656 23F6  
                       l3728 3468                         l3920 1208                         l3904 1172  
                       l3912 11C0                         l3738 36C4                         l2890 2128  
                       l2882 20E4                         l2874 2078                         l2866 2040  
                       l2858 2004                         l2794 1E8C                         l2786 1E5C  
                       l2970 1B72                         l2962 1B2E                         l2954 1AFE  
                       l2946 1AB8                         l2938 1A92                         l3682 264A  
                       l3818 3636                         l3834 326E                         l3826 323E  
                       l3842 32DA                         l3746 364E                         l3594 3694  
                       l3666 36B6                         l3754 35D8                         l3762 3664  
                       l3674 36AA                         l3770 31FA                         l2778 34AC  
                       l2698 17D8                         l3498 0D40                         l3586 2F7E  
                       l3578 2F30                         l3930 12C6                         l3922 123A  
                       l3914 11D4                         l3906 118E                         l3850 107C  
                       l2892 2152                         l2876 2086                         l2868 2052  
                       l2796 1E9C                         l2788 1E6A                         l2980 1BB4  
                       l2972 1B7E                         l2964 1B38                         l2956 1B0E  
                       l2948 1AC8                         l3692 26C8                         l3684 2658  
                       l3836 3270                         l3828 3244                         l3844 32E8  
                       l3668 36B8                         l3772 3676                         l3756 35DE  
                       l3748 35BE                         l3676 36AE                         l3764 31CE  
                       l3588 2F9C                         l3596 21E0                         l3940 12F6  
                       l3924 124E                         l3916 11E2                         l3908 1198  
                       l3932 12DA                         l3860 1086                         l3852 107E  
                       l3782 334C                         l2886 210E                         l2894 2156  
                       l2878 2098                         l2798 1E9E                         l2990 1C16  
                       l2982 1BC0                         l2974 1B8A                         l2966 1B4E  
                       l3694 26D0                         l3686 269E                         l3790 2FD4  
                       l3678 35EC                         l3838 3280                         l3846 3300  
                       l3774 367C                         l3758 35E4                         l3766 31D2  
                       l3598 2202                         l3950 1332                         l3942 12FE  
                       l3934 12DE                         l3926 1280                         l3918 11FE  
                       l3870 10AA                         l3862 1094                         l3854 1080  
                       l3784 3358                         l3776 3330                         l2896 2170  
                       l2888 211A                         l2992 1C22                         l2984 1BD0  
                       l2976 1B98                         l2968 1B5A                         l3696 26DC  
                       l3688 26B4                         l3768 31F6                         l3960 136E  
                       l3952 1336                         l3944 1302                         l3936 12E6  
                       l3928 12B2                         l3880 10CA                         l3872 10BA  
                       l3864 1098                         l3856 1082                         l3848 1078  
                       l3786 3368                         l3778 3340                         l2898 2186  
                       l2994 1C3E                         l2986 1BEA                         l2978 1BA4  
                       l3698 270E                         l3794 351A                         l3970 1408  
                       l3962 1388                         l3954 1340                         l3946 130C  
                       l3938 12EE                         l3890 1108                         l3882 10DA  
                       l3866 109C                         l3858 1084                         l2996 1C68  
                       l2988 1BFA                         l3796 3522                         l3980 148E  
                       l3972 1416                         l3956 135A                         l3948 131C  
                       l3964 1392                         l3892 111C                         l3884 10F0  
                       l3868 10A0                         l2998 1C9E                         l3798 352A  
                       l3990 1502                         l3982 14C4                         l3974 1432  
                       l3966 13C4                         l3958 1364                         l3894 1126  
                       l3886 10F4                         l3878 10C0                         l3992 150E  
                       l3984 14D0                         l3976 1440                         l3968 13F6  
                       l3896 1136                         l3888 1104                         l3994 1514  
                       l3986 14E4                         l3978 145C                         l3898 114C  
                       l3996 152E                         l3988 14E8                         ?_isr 0001  
                       l3998 1536                         STR_1 067F                         STR_2 0691  
                       STR_3 0665                         STR_4 0656                         STR_5 0623  
                       STR_6 0612                         STR_7 0601                         STR_8 0672  
                       STR_9 0645                         u3000 1A56                         u3001 1A52  
                       u3010 1A66                         u3011 1A62                         u3100 1D12  
                       u3020 1AA6                         u3101 1D0E                         u3021 1AA2  
                       u3110 1D40                         u3030 1AB8                         u3111 1D3C  
                       u3031 1AB4                         u3120 1D56                         u3040 1AC8  
                       u3200 2CBC                         u2320 2E96                         u2400 1606  
                       u4000 0D88                         u3121 1D52                         u3041 1AC4  
                       u3201 2CB8                         u2321 2E92                         u2401 1602  
                       u4001 0D84                         u3130 1D6A                         u3050 1AFE  
                       u3210 2CDA                         u2330 2EA6                         u2410 1618  
                       u4010 0E34                         u3131 1D66                         u3051 1AFA  
                       u3211 2CD6                         u2331 2EA2                         u2411 1614  
                       u4011 0E30                         u3140 1D84                         u3060 1B0E  
                       u3220 2CF6                         u2340 2ECC                         u3300 2E0A  
                       u2500 175C                         u2420 1628                         u4020 0E70  
                       u4100 2F5A                         u3141 1D80                         u3061 1B0A  
                       u3221 2CF2                         u2341 2EC8                         u3301 2E06  
                       u2501 1758                         u2421 1624                         u4021 0E6C  
                       u4101 2F56                         u3150 1DCC                         u3070 1C88  
                       u3230 2D1C                         u2350 2EFE                         u3310 2E48  
                       u2510 176A                         u2430 1662                         u4030 0E7E  
                       u4110 2FCA                         u3151 1DC8                         u3231 2D18  
                       u2351 2EFA                         u3311 2E44                         u2511 1766  
                       u2431 165E                         u4031 0E7A                         u4111 2FC6  
                       u3160 1DFA                         u3080 1CE2                         u4200 264A  
                       u3240 2D3E                         u3320 2E7C                         u2600 18C8  
                       u2520 177A                         u2440 1670                         u2360 158E  
                       u3400 29AE                         u4040 0ED2                         u4120 2202  
                       u3161 1DF6                         u3081 1CDE                         u4201 2646  
                       u3241 2D3A                         u3321 2E78                         u2601 18C4  
                       u2521 1776                         u2441 166C                         u2361 158A  
                       u4041 0ECE                         u4121 21FE                         u3170 1E32  
                       u3090 1D02                         u4210 2658                         u3250 2D58  
                       u3330 2A98                         u2610 18D8                         u2530 17AC  
                       u2450 16DC                         u2370 15A0                         u3410 29DC  
                       u4050 0FA4                         u4130 223E                         u3171 1E2E  
                       u3091 1CFE                         u3075 1C7E                         u4211 2654  
                       u3251 2D54                         u3331 2A94                         u2611 18D4  
                       u2531 17A8                         u2451 16D8                         u2371 159C  
                       u3411 29D8                         u4051 0FA0                         u4131 223A  
                       u4220 26B4                         u3180 2C7C                         u3260 2D72  
                       u3340 2AD6                         u2700 19BA                         u2620 18F4  
                       u2540 17BA                         u2460 16F4                         u2380 15B0  
                       u3420 29F0                         u3500 2BCC                         u4060 0FC0  
                       u4140 2280                         u4300 3494                         u4221 26B0  
                       u3181 2C78                         u3261 2D6E                         u3341 2AD2  
                       u2701 19B6                         u2621 18F0                         u2541 17B6  
                       u2461 16EE                         u2381 15AC                         u3421 29EC  
                       u3405 29A4                         u3501 2BC8                         u4061 0FBC  
                       u4141 227C                         u4301 3490                         u4230 270A  
                       u4310 31F2                         u3190 2C96                         u3270 2D90  
                       u3350 2AF4                         u2710 19CA                         u2630 1904  
                       u2550 17D8                         u2470 16F6                         u2390 15F0  
                       u3430 2A18                         u3510 2BF4                         u4070 1026  
                       u4150 229C                         u4231 2706                         u3191 2C92  
                       u3271 2D8C                         u3351 2AF0                         u2711 19C6  
                       u2631 1900                         u2551 17D4                         u2391 15EC  
                       u3431 2A14                         u3511 2BF0                         u4071 1020  
                       u4151 2298                         u2800 1EE0                         u4240 2754  
                       u4400 32E8                         u4320 321A                         u3280 2DA6  
                       u3360 2B14                         u2720 19EA                         u2640 1914  
                       u2560 1810                         u2480 171E                         u3440 2A38  
                       u3520 2C1E                         u3600 24BE                         u4080 1028  
                       u4160 233C                         u2801 1EDC                         u4241 2750  
                       u4401 32E4                         u3281 2DA2                         u3361 2B10  
                       u2721 19E6                         u2641 1910                         u2561 180C  
                       u2481 171A                         u3441 2A34                         u3521 2C1A  
                       u3601 24BA                         u4161 2338                         u2810 1EF0  
                       u4250 2772                         u4170 35FA                         u4410 3300  
                       u4330 322A                         u3290 2DCA                         u3370 2B64  
                       u2730 19FA                         u2650 192A                         u2570 1856  
                       u2490 173C                         u3450 2A48                         u4090 103C  
                       u2811 1EEC                         u4251 276E                         u4171 35F6  
                       u4411 32FC                         u4331 3226                         u3291 2DC6  
                       u3371 2B60                         u2731 19F6                         u2651 1926  
                       u2571 1852                         u2491 1738                         u3451 2A44  
                       u4091 1038                         u4340 3340                         u2900 20A6  
                       u2820 1F2E                         u4260 2782                         u4180 3608  
                       u3460 3176                         u3700 27FE                         u3380 3568  
                       u2740 1A16                         u2660 1940                         u2580 188C  
                       u3540 2C58                         u3620 252A                         u4500 13F6  
                       u4420 1104                         u4341 333C                         u2901 20A2  
                       u2821 1F2A                         u4261 277E                         u4181 3604  
                       u4317 31E8                         u3461 3172                         u3381 3564  
                       u2741 1A12                         u2661 193C                         u2581 1888  
                       u3541 2C52                         u3621 2526                         u4501 13F2  
                       u4421 1100                         u4350 3368                         u2910 20B6  
                       u2830 1F6E                         u4270 2790                         u4190 3616  
                       u2750 34DE                         u3470 31BC                         u3710 2810  
                       u2670 1954                         u2590 189C                         u3390 297A  
                       u3550 2C5A                         u3630 254E                         u4510 148E  
                       u4430 111C                         u4351 3364                         u2911 20B2  
                       u2831 1F6A                         u4271 278C                         u4191 3612  
                       u4327 3210                         u2751 34DA                         u3471 31B8  
                       u3711 280C                         u2671 1950                         u2591 1898  
                       u3391 2976                         u3535 2C30                         u3615 24D2  
                       u4511 148A                         u4431 1118                         u2920 20E4  
                       u2840 1FE2                         u2760 1E6A                         u4280 27CA  
                       u4360 323E                         u3480 3598                         u3720 283C  
                       u2680 196E                         u3640 256A                         u3616 24DC  
                       u3560 3518                         u3800 0710                         u4520 14C0  
                       u4440 1164                         u2921 20E0                         u2841 1FDE  
                       u2761 1E66                         u4281 27C6                         u4361 323A  
                       u3481 3594                         u3721 2838                         u2681 196A  
                       u3641 2566                         u3617 24EC                         u3561 3514  
                       u3801 070C                         u4521 14BC                         u4441 1160  
                       u2930 20FA                         u2850 2004                         u2770 1E7C  
                       u4290 27D8                         u4370 3252                         u3730 2852  
                       u2690 19A8                         u3490 2BAE                         u3650 25BE  
                       u3570 3292                         u3810 074E                         u4530 14E4  
                       u4450 11D4                         u2931 20F6                         u2851 2000  
                       u2771 1E78                         u4291 27D4                         u4371 324E  
                       u3731 284E                         u2691 19A4                         u3635 2544  
                       u3571 328E                         u3811 074A                         u4531 14E0  
                       u4451 11D0                         u2940 210E                         u2860 202E  
                       u2780 1E8C                         u4380 326E                         u3740 28F4  
                       u3660 25DA                         u3580 246E                         u3900 0A18  
                       u3820 0760                         u4540 1502                         u4460 123A  
                       u2941 210A                         u2861 202A                         u2781 1E88  
                       u4381 326A                         u3741 28F0                         u3661 25D6  
                       u3901 0A14                         u3821 075C                         u4541 14FE  
                       u4461 1236                         u2950 2128                         u2870 2052  
                       u2790 1ECE                         u4390 3280                         u3750 2906  
                       u3670 2616                         u3590 249C                         u3910 0A30  
                       u3830 07D2                         u4550 152E                         u4470 1280  
                       u2951 2124                         u2871 204E                         u2791 1ECA  
                       u4391 327C                         u3751 2902                         u3495 2BA4  
                       u3671 2612                         u3655 25B4                         u3591 2498  
                       u3911 0A2C                         u3831 07CE                         u4551 152A  
                       u4471 127C                         u2960 2170                         u2880 2068  
                       u3760 2920                         u3680 33CE                         u3920 0A62  
                       u3840 07E4                         u4480 12B2                         u2961 216C  
                       u2881 2064                         u3761 291C                         u3585 2464  
                       u3681 33CA                         u3921 0A5E                         u3841 07E0  
                       u4481 12AE                         u2970 21A0                         u2890 2086  
                       u3770 2930                         u3690 27FC                         u3930 0A70  
                       u3850 085A                         u4490 13C4                         u2971 219C  
                       u2891 2082                         u4707 369A                         u3771 292C  
                       u3691 27F6                         u3931 0A6C                         u3851 0856  
                       u4491 13C0                         u2980 21CC                         u3940 0A9A  
                       u3860 08E6                         u3780 06B6                         u2981 21C8  
                       u4717 3240                         u3941 0A96                         u3861 08E2  
                       u3781 06B2                         u4637 10E4                         u2990 1A44  
                       u3950 0BE2                         u3870 0918                         u3790 0700  
                       u2991 1A40                         u4727 3622                         u3951 0BDE  
                       u3871 0914                         u3791 06FC                         u4647 1140  
                       u3960 0C48                         u3880 0956                         u4737 362E  
                       u3961 0C44                         u3881 0952                         u4657 1326  
                       u3970 0C90                         u3890 09E2                         u3971 0C8C  
                       u3891 09DE                         u4667 153C                         u3980 0CA0  
                       u3981 0C9C                         u4677 155E                         u3990 0D3A  
                       u4687 35CA                         u3991 0D36                         u4697 3682  
                       i2l96 30F8                         abs@a 0007                         _dbuf 0100  
                       _labs 3284                         _main 1078                         _dtoa 27EC  
                       _flow 00E2                         _prec 00DC                         pad@i 0015  
                       pad@p 0012                         fsr1h 0FE2                         fsr2h 0FDA  
                       indf1 0FE7                         indf2 0FDF                         fsr1l 0FE1  
                       fsr2l 0FD9                         btemp 007F                  _PWM_control 32DA  
              ___fpclassifyf 2B6E                         prodh 0FF4                         prodl 0FF3  
                       start 000E             __end_of_ADC_init 36D0             __end_of_ADC_read 3380  
            ___fldiv@new_exp 0039             ??_DHT11_ReadData 0001                 ___param_bank 0000  
             main@T_Integral 00C8                        ??_abs 0009                        ??_pad 0014  
                      ??_isr 0001                ___fltol@sign1 0009               _lm35_raw_value 00DE  
                      ?_labs 0001              __end_of___fladd 1A2A                        ?_main 0001  
                      ?_dtoa 0017              __end_of___fldiv 21E0              __end_of___awdiv 2D2E  
            __end_of___flneg 358A                        STR_10 0634                        STR_11 0689  
                      STR_14 068D              __end_of___awmod 2DDC              __end_of___flmul 1E50  
            __end_of___flsub 3460              __end_of___fltol 2A6A                        _T0CON 0FD5  
            ___awdiv@divisor 0003              ___awdiv@counter 0005                 vfpfcnvrt@fmt 005E  
                      _TMR0H 0FD7                        _TMR0L 0FD6                        _PORTB 0F81  
                      _TRISA 0F92                        _TRISB 0F93              __end_of_lcd_cmd 36C2  
                      _flags 007C          read_prec_or_width@c 0005          read_prec_or_width@n 0006  
                      _fputc 2E86                        _fputs 34A0                        labs@a 0001  
                      _timer 007A                        pad@fp 000F                        _width 00DA  
                      _putch 36D2                        main@i 00CD                        dtoa@d 0018  
                      dtoa@i 0021                        dtoa@p 001E                        dtoa@s 0020  
                      dtoa@w 001C                        tablat 0FF5             __end_of_PWM_init 365A  
                      ttemp5 0080                        ttemp6 0083                        ttemp7 0087  
                      status 0FD8                        wtemp8 0080              __end_of_sprintf 3552  
             ?___fpclassifyf 0001              __initialization 33D0                 __end_of_labs 32DA  
               __end_of_main 1574                 __end_of_dtoa 2964                       ??_labs 0005  
                     ??_main 0074                       ??_dtoa 001A                __activetblptr 0002  
 __end_of_read_prec_or_width 2FD4           _ADC_read_temp$1688 0045                       _ADCON0 0FC2  
                     _ADCON1 0FC1                       _ADCON2 0FC0                       ?_fputc 0001  
                     ?_fputs 0009                       _ADRESH 0FC4                       _ADRESL 0FC3  
                     _CCPR1L 0FBE             ___awdiv@dividend 0001                       ?_putch 0001  
        _DHT11_CheckResponse 35EC                       i2l4010 30A2                       i2l4020 30D4  
                     i2l4012 30B0                       i2l4004 3076                       i2l4022 30DC  
                     i2l4014 30B2                       i2l4006 3084                       i2l4016 30BA  
                     i2l4008 3086                       i2l4018 30BE                       _OSCCON 0FD3  
                     _TRISD1 7CA9                       _TRISD7 7CAF             __end_of___xxtofl 27EC  
               ??_DHT11_Init 0001             __end_of_lcd_data 36B4                 vfprintf@cfmt 0067  
           __end_of_lcd_init 35EC                       ___flge 2A6A                       ___fleq 2DDC  
                  ??___fladd 0009                    ??___fldiv 0030                    ??___awdiv 0005  
                  ??___flneg 0005                    ??___awmod 0005                    ??___flmul 0017  
                  ??___flsub 0030                    ??___fltol 0005         ?_DHT11_CheckResponse 0001  
                     _efgtoa 0694                       _floorf 2426                       _memcpy 3380  
       read_prec_or_width@ap 0002                       clear_0 33EE                       clear_1 33FA  
                     clear_2 3406             ___awdiv@quotient 0007              ___awmod@divisor 0003  
                     isa$std 0001              ___awmod@counter 0005                       pad@buf 0010  
              _ldr_raw_value 00E0                    ??_lcd_cmd 0002                       dtoa@fp 0017  
                     main@up 00C9                       _strcpy 34E0                       fputc@c 0001  
                     fputs@c 000C                       fputs@i 000D                 __pdataCOMRAM 007D  
                     fputs@s 0009              ___fpclassifyf@e 0009              ___fpclassifyf@u 000B  
            ___fpclassifyf@x 0001                 __mediumconst 0600                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8                    ?_ADC_init 0001  
                  ?_ADC_read 0001           __end_of_DHT11_Init 363C                       putch@c 0001  
           __end_of_vfprintf 34A0                    ??_sprintf 0068                   ___flge@ff1 0028  
                 ___flge@ff2 002C              ??___fpclassifyf 0005                 ___xxtofl@arg 000B  
              lcd_string@str 0003                 ___xxtofl@exp 000A                 ___xxtofl@val 0001  
                 ___fleq@ff1 0001                   ___fleq@ff2 0005                   __accesstop 0080  
    __end_of__initialization 340C                   ___flneg@f1 0001                   _lm35_value 00D2  
              ___rparam_used 0001                   ___fltol@f1 0001               __pcstackCOMRAM 0001  
      ??_DHT11_CheckResponse 0001                __end_of_fputc 2F30                __end_of_fputs 34E0  
              __end_of_putch 36D4             ??_lcd_set_cursor 0004                    ?_PWM_init 0001  
            ADC_read@channel 0005                   ??_ADC_init 0001                   ??_ADC_read 0003  
                    ??_fputc 0004                      ??_fputs 000C                      ??_putch 0001  
                 __pbssBANK0 00CE                   __pbssBANK1 0100                 ?_PWM_control 0001  
                    ?___flge 0028                      ?___fleq 0001                      ?_efgtoa 0055  
                    ?_floorf 0041                      ?_memcpy 0001                      ?_strcpy 0001  
                 ??_PWM_init 0001                    ?___xxtofl 0001                   _lcd_enable 368E  
          _flag_analog_value 00E4                    ?_lcd_data 0001                   _lcd_string 31CE  
                  ?_lcd_init 0001                      __Hparam 0000                      __Lparam 0000  
          __end_of_lcd_clear 368E                      ___fladd 1574                      ___fldiv 1E50  
                    ___awdiv 2C6C                      ___flneg 3552                      ___awmod 2D2E  
                    ___flmul 1A2A                      ___flsub 341A                      ___fltol 2964  
                  ?_vfprintf 00AC                 __psmallconst 0600                _ADC_read_lumi 30FC  
              _ADC_read_temp 2FD4                      __pcinit 33D0                      __ramtop 0600  
                    __ptext0 1078                      __ptext1 351A                      __ptext2 3460  
                    __ptext3 21E0                      __ptext4 2F30                      __ptext5 0694  
                    __ptext6 34E0                      __ptext7 3380                      __ptext8 3284  
                    __ptext9 2426                      _lcd_cmd 36B4                    _T2CONbits 0FCA  
      read_prec_or_width@fmt 0001                   ??___xxtofl 0005             ___awmod@dividend 0001  
                    efgtoa@c 005A                      efgtoa@d 008B                      efgtoa@e 008F  
                    efgtoa@f 0056                      efgtoa@g 00A4                      efgtoa@h 0099  
                    efgtoa@i 0097                      efgtoa@l 009D                      efgtoa@m 008D  
                    efgtoa@n 00A2                      efgtoa@p 0082                      efgtoa@t 0084  
                    efgtoa@u 00A8                      efgtoa@w 0091                   ??_lcd_data 0002  
                    _sprintf 351A                   ??_lcd_init 0003               __pintcode_body 3074  
       end_of_initialization 340C                      floorf@e 004F                      floorf@m 004B  
                    floorf@u 0051                      floorf@x 0041                      memcpy@d 0007  
                    memcpy@n 0005                      memcpy@s 0009                      fputc@fp 0003  
              __Lmediumconst 0000                      int_func 3074                      fputs@fp 000B  
         _read_prec_or_width 2F30            __end_of_vfpfcnvrt 2426                   efgtoa@mode 0089  
                 efgtoa@sign 00A1      lcd_set_cursor@positions 0004                      postdec2 0FDD  
        ?_read_prec_or_width 0001                      postinc0 0FEE                      postinc1 0FE6  
                    postinc2 0FDE             vfpfcnvrt@convarg 0061               ?_ADC_read_lumi 0041  
             ?_ADC_read_temp 0041                   ??_vfprintf 0067                      strcpy@d 0005  
                  _PORTAbits 0F80                    _PORTDbits 0F83                  ___fladd@grs 0010  
                ?_lcd_enable 0001                ___xxtofl@sign 0009                    _TRISAbits 0F92  
                  _TRISCbits 0F94                   lcd_cmd@cmd 0002         ??_read_prec_or_width 0003  
                ___fldiv@grs 003B                  ___fldiv@rem 0034                  ?_lcd_string 0003  
                ___flmul@grs 001C                  _CCP1CONbits 0FBD                   main@buffer 00B5  
         DHT11_ReadData@data 0002           main@pwm_duty_cycle 00CB               __end_of___flge 2B6E  
             __end_of___fleq 2E86                  vfpfcnvrt@ap 005F                  vfpfcnvrt@cp 0066  
                vfpfcnvrt@fp 005D                __pidataCOMRAM 36D0               __end_of_efgtoa 1078  
             __end_of_floorf 2638               __end_of_memcpy 33D0                   floorf@F521 00CE  
             __end_of_strcpy 351A          start_initialization 33D0                  __end_of_abs 35BE  
                __end_of_pad 31CE                  __end_of_isr 30FC        __end_of___fpclassifyf 2C6C  
__end_of_DHT11_CheckResponse 3618                  vfprintf@fmt 00AD              ??_ADC_read_lumi 0045  
            ??_ADC_read_temp 0045                     ??___flge 0030                     ??___fleq 0009  
                   ??_efgtoa 005B                     ??_floorf 0045                     ??_memcpy 0007  
                   ??_strcpy 0004                    ___fladd@a 0005                    ___fladd@b 0001  
                  ___fldiv@a 002C                    ___fldiv@b 0028          lcd_set_cursor@F2716 007D  
                  ___flmul@a 0013                    ___flmul@b 000F                  __pbssCOMRAM 0076  
                  ___flsub@a 002C                    ___flsub@b 0028                __pcstackBANK0 0080  
                _efgtoa$1380 0086                    _dtoa$1349 001A                    __pintcode 0008  
                   ?___fladd 0001                     ?___fldiv 0028                     ?___awdiv 0001  
                   ?___flneg 0001                     ?___awmod 0001                     ?___flmul 000F  
                   ?___flsub 0028                     ?___fltol 0001                    _lcd_clear 3676  
             _DHT11_ReadData 322C                     ?_lcd_cmd 0001                  __smallconst 0600  
                   _ADC_init 36C2                     _ADC_read 332E                    _ldr_value 00D6  
                   ?_sprintf 00AF                     _LATAbits 0F89                     _PIE1bits 0F9D  
                   _PIR1bits 0F9E                     i2u460_40 30D4                     i2u460_41 30D0  
                   i2u461_40 30F2                     i2u461_41 30EC                     i2u462_40 30F4  
                   i2u456_40 3084                     i2u456_41 3080                     i2u457_40 309C  
                   i2u457_41 3096                     i2u458_40 309E                     i2u459_40 30B0  
                   i2u459_41 30AC       __end_of_DHT11_ReadData 3284             PWM_control@value 0001  
                 ?_lcd_clear 0001                    _vfpfcnvrt 21E0                   _ADCON0bits 0FC2  
                   _PWM_init 363C                 ??_lcd_enable 0001                 ??_lcd_string 0005  
                 vfpfcnvrt@c 0065                   _DHT11_Init 3618                     __Hrparam 0000  
                  memcpy@tmp 000B                   vfprintf@ap 00AE                     __Lrparam 0000  
                 vfprintf@fp 00AC           __end_of_lcd_enable 36A6              ?_DHT11_ReadData 0001  
                 ?_vfpfcnvrt 005D           __end_of_lcd_string 322C              DHT11_ReadData@i 0001  
         ___fpclassifyf@F465 0076                   sprintf@fmt 00B0                     ___xxtofl 2638  
                   __ptext10 2B6E                     __ptext11 2964                     __ptext20 2E86  
                   __ptext12 341A                     __ptext21 36D2                     __ptext13 1574  
                   __ptext30 36B4                     __ptext22 358A                     __ptext14 3552  
                   __ptext31 368E                     __ptext23 2D2E                     __ptext15 2A6A  
                   __ptext40 1A2A                     __ptext32 363C                     __ptext24 2C6C  
                   __ptext16 2DDC                     __ptext41 1E50                     __ptext33 32DA  
                   __ptext25 31CE                     __ptext17 27EC                     __ptext42 332E  
                   __ptext34 322C                     __ptext26 36A6                     __ptext18 3168  
                   __ptext43 36C2                     __ptext35 3618                     __ptext27 365A  
                   __ptext19 34A0                     __ptext36 35EC                     __ptext28 35BE  
                   __ptext37 2FD4                     __ptext29 3676                     __ptext38 30FC  
                   __ptext39 2638                     _lcd_data 36A6                     _lcd_init 35BE  
                 strcpy@dest 0001                ??_PWM_control 0003                     efgtoa@fp 0055  
                   efgtoa@ne 0080                     efgtoa@pp 0088                     efgtoa@ou 0093  
                   isa$xinst 0000                     int$flags 007F                     _vfprintf 3460  
                ??_lcd_clear 0003                   _INTCONbits 0FF2                     memcpy@d1 0001  
                   memcpy@s1 0003                     intlevel2 0000               _lcd_set_cursor 365A  
          lcd_set_cursor@col 0003                    sprintf@ap 0068            lcd_set_cursor@row 0006  
                  strcpy@src 0003                  ?_DHT11_Init 0001              main@RH_Integral 00C6  
                efgtoa@nmode 008A          __end_of_PWM_control 332E        __end_of_ADC_read_lumi 3168  
      __end_of_ADC_read_temp 3074                  ??_vfpfcnvrt 0060               main@RH_Decimal 00C5  
                   sprintf@f 0069                     sprintf@s 00AF       __end_of_lcd_set_cursor 3676  
              ___fladd@signs 000D                 ___fladd@aexp 000E                 ___fladd@bexp 000F  
